// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SubscriptionFilterPolicyFilterPoliciesInitParameters struct {

	// Specifies the filter policy name. The policy name must be unique.
	// Specifies the filter policy name. The policy name must be unique.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the string array for exact match. The array can contain 1
	// to 10 strings. The array content must be unique. The string cannot be null or an empty string "".
	// A string can contain 1 to 32 characters, including letters, digits, and underscores (_).
	// Specifies the string array for exact match.
	// +listType=set
	StringEquals []*string `json:"stringEquals,omitempty" tf:"string_equals,omitempty"`
}

type SubscriptionFilterPolicyFilterPoliciesObservation struct {

	// Specifies the filter policy name. The policy name must be unique.
	// Specifies the filter policy name. The policy name must be unique.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the string array for exact match. The array can contain 1
	// to 10 strings. The array content must be unique. The string cannot be null or an empty string "".
	// A string can contain 1 to 32 characters, including letters, digits, and underscores (_).
	// Specifies the string array for exact match.
	// +listType=set
	StringEquals []*string `json:"stringEquals,omitempty" tf:"string_equals,omitempty"`
}

type SubscriptionFilterPolicyFilterPoliciesParameters struct {

	// Specifies the filter policy name. The policy name must be unique.
	// Specifies the filter policy name. The policy name must be unique.
	// +kubebuilder:validation:Optional
	Name *string `json:"name" tf:"name,omitempty"`

	// Specifies the string array for exact match. The array can contain 1
	// to 10 strings. The array content must be unique. The string cannot be null or an empty string "".
	// A string can contain 1 to 32 characters, including letters, digits, and underscores (_).
	// Specifies the string array for exact match.
	// +kubebuilder:validation:Optional
	// +listType=set
	StringEquals []*string `json:"stringEquals" tf:"string_equals,omitempty"`
}

type SubscriptionFilterPolicyInitParameters struct {
	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// Specifies the message filter policies of a subscriber.
	// The filter_policies structure is documented below.
	// Specifies the message filter policies of a subscriber.
	FilterPolicies []SubscriptionFilterPolicyFilterPoliciesInitParameters `json:"filterPolicies,omitempty" tf:"filter_policies,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the resource identifier of the subscriber.
	// Specifies the resource identifier of the subscriber.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/smn/v1alpha1.Subscription
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubscriptionUrn *string `json:"subscriptionUrn,omitempty" tf:"subscription_urn,omitempty"`

	// Reference to a Subscription in smn to populate subscriptionUrn.
	// +kubebuilder:validation:Optional
	SubscriptionUrnRef *v1.Reference `json:"subscriptionUrnRef,omitempty" tf:"-"`

	// Selector for a Subscription in smn to populate subscriptionUrn.
	// +kubebuilder:validation:Optional
	SubscriptionUrnSelector *v1.Selector `json:"subscriptionUrnSelector,omitempty" tf:"-"`
}

type SubscriptionFilterPolicyObservation struct {
	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// Specifies the message filter policies of a subscriber.
	// The filter_policies structure is documented below.
	// Specifies the message filter policies of a subscriber.
	FilterPolicies []SubscriptionFilterPolicyFilterPoliciesObservation `json:"filterPolicies,omitempty" tf:"filter_policies,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the resource identifier of the subscriber.
	// Specifies the resource identifier of the subscriber.
	SubscriptionUrn *string `json:"subscriptionUrn,omitempty" tf:"subscription_urn,omitempty"`
}

type SubscriptionFilterPolicyParameters struct {

	// +kubebuilder:validation:Optional
	EnableForceNew *string `json:"enableForceNew,omitempty" tf:"enable_force_new,omitempty"`

	// Specifies the message filter policies of a subscriber.
	// The filter_policies structure is documented below.
	// Specifies the message filter policies of a subscriber.
	// +kubebuilder:validation:Optional
	FilterPolicies []SubscriptionFilterPolicyFilterPoliciesParameters `json:"filterPolicies,omitempty" tf:"filter_policies,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the resource identifier of the subscriber.
	// Specifies the resource identifier of the subscriber.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/smn/v1alpha1.Subscription
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubscriptionUrn *string `json:"subscriptionUrn,omitempty" tf:"subscription_urn,omitempty"`

	// Reference to a Subscription in smn to populate subscriptionUrn.
	// +kubebuilder:validation:Optional
	SubscriptionUrnRef *v1.Reference `json:"subscriptionUrnRef,omitempty" tf:"-"`

	// Selector for a Subscription in smn to populate subscriptionUrn.
	// +kubebuilder:validation:Optional
	SubscriptionUrnSelector *v1.Selector `json:"subscriptionUrnSelector,omitempty" tf:"-"`
}

// SubscriptionFilterPolicySpec defines the desired state of SubscriptionFilterPolicy
type SubscriptionFilterPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SubscriptionFilterPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SubscriptionFilterPolicyInitParameters `json:"initProvider,omitempty"`
}

// SubscriptionFilterPolicyStatus defines the observed state of SubscriptionFilterPolicy.
type SubscriptionFilterPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SubscriptionFilterPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SubscriptionFilterPolicy is the Schema for the SubscriptionFilterPolicys API. Manages an SMN subscription filter policy resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type SubscriptionFilterPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.filterPolicies) || (has(self.initProvider) && has(self.initProvider.filterPolicies))",message="spec.forProvider.filterPolicies is a required parameter"
	Spec   SubscriptionFilterPolicySpec   `json:"spec"`
	Status SubscriptionFilterPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SubscriptionFilterPolicyList contains a list of SubscriptionFilterPolicys
type SubscriptionFilterPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SubscriptionFilterPolicy `json:"items"`
}

// Repository type metadata.
var (
	SubscriptionFilterPolicy_Kind             = "SubscriptionFilterPolicy"
	SubscriptionFilterPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SubscriptionFilterPolicy_Kind}.String()
	SubscriptionFilterPolicy_KindAPIVersion   = SubscriptionFilterPolicy_Kind + "." + CRDGroupVersion.String()
	SubscriptionFilterPolicy_GroupVersionKind = CRDGroupVersion.WithKind(SubscriptionFilterPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&SubscriptionFilterPolicy{}, &SubscriptionFilterPolicyList{})
}
