// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CustomTemplateInitParameters struct {

	// Specifies the description of the template.
	// Specifies the description of the template.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the name of the template.
	// Specifies the name of the template.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the list of the template params.
	// The params structure is documented below.
	// Specifies the list of the template params.
	Params []ParamsInitParameters `json:"params,omitempty" tf:"params,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the type of the source template. Value options:
	// Specifies the type of the source template.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Specifies the ID of the source template.
	// Specifies the ID of the source template.
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`
}

type CustomTemplateObservation struct {

	// Indicates the DCS instance type. The value can be single, ha, cluster, proxy,
	// ha_rw_split.
	// Indicates the DCS instance type.
	CacheMode *string `json:"cacheMode,omitempty" tf:"cache_mode,omitempty"`

	// Indicates the time when the custom template is created.
	// Indicates the time when the custom template is created.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the description of the template.
	// Specifies the description of the template.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates the cache engine. Currently, only Redis is supported.
	// Indicates the cache engine.
	Engine *string `json:"engine,omitempty" tf:"engine,omitempty"`

	// Indicates the cache engine version. The value can be 4.0, 5.0., 6.0..
	// Indicates the cache engine version.
	EngineVersion *string `json:"engineVersion,omitempty" tf:"engine_version,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the name of the template.
	// Specifies the name of the template.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the list of the template params.
	// The params structure is documented below.
	// Specifies the list of the template params.
	Params []ParamsObservation `json:"params,omitempty" tf:"params,omitempty"`

	// Indicates the product edition. The value can be generic, enterprise.
	// Indicates the product edition.
	ProductType *string `json:"productType,omitempty" tf:"product_type,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the type of the source template. Value options:
	// Specifies the type of the source template.
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Indicates the storage type. The value can be DRAM, SSD.
	// Indicates the storage type.
	StorageType *string `json:"storageType,omitempty" tf:"storage_type,omitempty"`

	// Specifies the ID of the source template.
	// Specifies the ID of the source template.
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`

	// Indicates the type of the template. The value can be sys, user.
	// Indicates the type of the template.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type CustomTemplateParameters struct {

	// Specifies the description of the template.
	// Specifies the description of the template.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the name of the template.
	// Specifies the name of the template.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the list of the template params.
	// The params structure is documented below.
	// Specifies the list of the template params.
	// +kubebuilder:validation:Optional
	Params []ParamsParameters `json:"params,omitempty" tf:"params,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the type of the source template. Value options:
	// Specifies the type of the source template.
	// +kubebuilder:validation:Optional
	SourceType *string `json:"sourceType,omitempty" tf:"source_type,omitempty"`

	// Specifies the ID of the source template.
	// Specifies the ID of the source template.
	// +kubebuilder:validation:Optional
	TemplateID *string `json:"templateId,omitempty" tf:"template_id,omitempty"`
}

type ParamsInitParameters struct {

	// Indicates the name of the param. You can find it through data source
	// huaweicloud_dcs_template_detail.
	// Indicates the name of the param.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Indicates the value of the param.
	// Indicates the value of the param.
	ParamValue *string `json:"paramValue,omitempty" tf:"param_value,omitempty"`
}

type ParamsObservation struct {

	// Indicates the default value of the param.
	// Indicates the default value of the param.
	DefaultValue *string `json:"defaultValue,omitempty" tf:"default_value,omitempty"`

	// Indicates the description of the param.
	// Indicates the description of the param.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Indicates whether the DCS instance need restart.
	// Indicates whether the DCS instance need restart.
	NeedRestart *bool `json:"needRestart,omitempty" tf:"need_restart,omitempty"`

	// Indicates the ID of the param.
	// Indicates the ID of the param.
	ParamID *string `json:"paramId,omitempty" tf:"param_id,omitempty"`

	// Indicates the name of the param. You can find it through data source
	// huaweicloud_dcs_template_detail.
	// Indicates the name of the param.
	ParamName *string `json:"paramName,omitempty" tf:"param_name,omitempty"`

	// Indicates the value of the param.
	// Indicates the value of the param.
	ParamValue *string `json:"paramValue,omitempty" tf:"param_value,omitempty"`

	// Indicates the value range of the param.
	// Indicates the value range of the param.
	ValueRange *string `json:"valueRange,omitempty" tf:"value_range,omitempty"`

	// Indicates the value type of the param.
	// Indicates the value type of the param.
	ValueType *string `json:"valueType,omitempty" tf:"value_type,omitempty"`
}

type ParamsParameters struct {

	// Indicates the name of the param. You can find it through data source
	// huaweicloud_dcs_template_detail.
	// Indicates the name of the param.
	// +kubebuilder:validation:Optional
	ParamName *string `json:"paramName" tf:"param_name,omitempty"`

	// Indicates the value of the param.
	// Indicates the value of the param.
	// +kubebuilder:validation:Optional
	ParamValue *string `json:"paramValue" tf:"param_value,omitempty"`
}

// CustomTemplateSpec defines the desired state of CustomTemplate
type CustomTemplateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CustomTemplateParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CustomTemplateInitParameters `json:"initProvider,omitempty"`
}

// CustomTemplateStatus defines the observed state of CustomTemplate.
type CustomTemplateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CustomTemplateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CustomTemplate is the Schema for the CustomTemplates API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type CustomTemplate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.params) || (has(self.initProvider) && has(self.initProvider.params))",message="spec.forProvider.params is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourceType) || (has(self.initProvider) && has(self.initProvider.sourceType))",message="spec.forProvider.sourceType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.templateId) || (has(self.initProvider) && has(self.initProvider.templateId))",message="spec.forProvider.templateId is a required parameter"
	Spec   CustomTemplateSpec   `json:"spec"`
	Status CustomTemplateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CustomTemplateList contains a list of CustomTemplates
type CustomTemplateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CustomTemplate `json:"items"`
}

// Repository type metadata.
var (
	CustomTemplate_Kind             = "CustomTemplate"
	CustomTemplate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CustomTemplate_Kind}.String()
	CustomTemplate_KindAPIVersion   = CustomTemplate_Kind + "." + CRDGroupVersion.String()
	CustomTemplate_GroupVersionKind = CRDGroupVersion.WithKind(CustomTemplate_Kind)
)

func init() {
	SchemeBuilder.Register(&CustomTemplate{}, &CustomTemplateList{})
}
