// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AssociateErTablesInitParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Enterprise router table ID.
	// Changing this parameter will create a new resource.
	// Enterprise router table ID.
	EnterpriseRouterTableID *string `json:"enterpriseRouterTableId,omitempty" tf:"enterprise_router_table_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type AssociateErTablesObservation struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Enterprise router table ID.
	// Changing this parameter will create a new resource.
	// Enterprise router table ID.
	EnterpriseRouterTableID *string `json:"enterpriseRouterTableId,omitempty" tf:"enterprise_router_table_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type AssociateErTablesParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	// +kubebuilder:validation:Optional
	EnterpriseRouterID *string `json:"enterpriseRouterId" tf:"enterprise_router_id,omitempty"`

	// Enterprise router table ID.
	// Changing this parameter will create a new resource.
	// Enterprise router table ID.
	// +kubebuilder:validation:Optional
	EnterpriseRouterTableID *string `json:"enterpriseRouterTableId" tf:"enterprise_router_table_id,omitempty"`

	// Project ID.
	// Project ID.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId" tf:"region_id,omitempty"`
}

type CentralNetworkPolicyInitParameters struct {

	// Central network ID.
	// Central network ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cc/v1alpha1.CentralNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	CentralNetworkID *string `json:"centralNetworkId,omitempty" tf:"central_network_id,omitempty"`

	// Reference to a CentralNetwork in cc to populate centralNetworkId.
	// +kubebuilder:validation:Optional
	CentralNetworkIDRef *v1.Reference `json:"centralNetworkIdRef,omitempty" tf:"-"`

	// Selector for a CentralNetwork in cc to populate centralNetworkId.
	// +kubebuilder:validation:Optional
	CentralNetworkIDSelector *v1.Selector `json:"centralNetworkIdSelector,omitempty" tf:"-"`

	// List of the enterprise routers on the central network policy.
	// List of the enterprise routers on the central network policy.
	ErInstances []ErInstancesInitParameters `json:"erInstances,omitempty" tf:"er_instances,omitempty"`

	// List of the central network policy planes.
	// List of the central network policy planes.
	Planes []PlanesInitParameters `json:"planes,omitempty" tf:"planes,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type CentralNetworkPolicyObservation struct {

	// Central network ID.
	// Central network ID.
	CentralNetworkID *string `json:"centralNetworkId,omitempty" tf:"central_network_id,omitempty"`

	// Central network policy document template version.
	// Central network policy document template version.
	DocumentTemplateVersion *string `json:"documentTemplateVersion,omitempty" tf:"document_template_version,omitempty"`

	// List of the enterprise routers on the central network policy.
	// List of the enterprise routers on the central network policy.
	ErInstances []ErInstancesObservation `json:"erInstances,omitempty" tf:"er_instances,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Whether the central network policy is applied.
	// Whether the central network policy is applied.
	IsApplied *bool `json:"isApplied,omitempty" tf:"is_applied,omitempty"`

	// List of the central network policy planes.
	// List of the central network policy planes.
	Planes []PlanesObservation `json:"planes,omitempty" tf:"planes,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Central network policy status.
	// The valid values are as follows:
	// Central network policy status.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// Central network policy version.
	// Central network policy version.
	Version *float64 `json:"version,omitempty" tf:"version,omitempty"`
}

type CentralNetworkPolicyParameters struct {

	// Central network ID.
	// Central network ID.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/cc/v1alpha1.CentralNetwork
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	CentralNetworkID *string `json:"centralNetworkId,omitempty" tf:"central_network_id,omitempty"`

	// Reference to a CentralNetwork in cc to populate centralNetworkId.
	// +kubebuilder:validation:Optional
	CentralNetworkIDRef *v1.Reference `json:"centralNetworkIdRef,omitempty" tf:"-"`

	// Selector for a CentralNetwork in cc to populate centralNetworkId.
	// +kubebuilder:validation:Optional
	CentralNetworkIDSelector *v1.Selector `json:"centralNetworkIdSelector,omitempty" tf:"-"`

	// List of the enterprise routers on the central network policy.
	// List of the enterprise routers on the central network policy.
	// +kubebuilder:validation:Optional
	ErInstances []ErInstancesParameters `json:"erInstances,omitempty" tf:"er_instances,omitempty"`

	// List of the central network policy planes.
	// List of the central network policy planes.
	// +kubebuilder:validation:Optional
	Planes []PlanesParameters `json:"planes,omitempty" tf:"planes,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type ErInstancesInitParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type ErInstancesObservation struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type ErInstancesParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	// +kubebuilder:validation:Optional
	EnterpriseRouterID *string `json:"enterpriseRouterId" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId" tf:"region_id,omitempty"`
}

type ExcludeErConnectionsInitParameters struct {

	// List of enterprise routers that will not establish a connection.
	// The exclude_er_instances structure is the same as er_instances.
	// Changing this parameter will create a new resource.
	// List of enterprise routers that will not establish a connection.
	ExcludeErInstances []ExcludeErInstancesInitParameters `json:"excludeErInstances,omitempty" tf:"exclude_er_instances,omitempty"`
}

type ExcludeErConnectionsObservation struct {

	// List of enterprise routers that will not establish a connection.
	// The exclude_er_instances structure is the same as er_instances.
	// Changing this parameter will create a new resource.
	// List of enterprise routers that will not establish a connection.
	ExcludeErInstances []ExcludeErInstancesObservation `json:"excludeErInstances,omitempty" tf:"exclude_er_instances,omitempty"`
}

type ExcludeErConnectionsParameters struct {

	// List of enterprise routers that will not establish a connection.
	// The exclude_er_instances structure is the same as er_instances.
	// Changing this parameter will create a new resource.
	// List of enterprise routers that will not establish a connection.
	// +kubebuilder:validation:Optional
	ExcludeErInstances []ExcludeErInstancesParameters `json:"excludeErInstances" tf:"exclude_er_instances,omitempty"`
}

type ExcludeErInstancesInitParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type ExcludeErInstancesObservation struct {

	// Enterprise router ID.
	// Enterprise router ID.
	EnterpriseRouterID *string `json:"enterpriseRouterId,omitempty" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	ProjectID *string `json:"projectId,omitempty" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	RegionID *string `json:"regionId,omitempty" tf:"region_id,omitempty"`
}

type ExcludeErInstancesParameters struct {

	// Enterprise router ID.
	// Enterprise router ID.
	// +kubebuilder:validation:Optional
	EnterpriseRouterID *string `json:"enterpriseRouterId" tf:"enterprise_router_id,omitempty"`

	// Project ID.
	// Project ID.
	// +kubebuilder:validation:Optional
	ProjectID *string `json:"projectId" tf:"project_id,omitempty"`

	// Region ID.
	// Region ID.
	// +kubebuilder:validation:Optional
	RegionID *string `json:"regionId" tf:"region_id,omitempty"`
}

type PlanesInitParameters struct {

	// List of route tables associated with the central network policy.
	// The associate_er_tables structure is documented below.
	// Changing this parameter will create a new resource.
	// List of route tables associated with the central network policy.
	AssociateErTables []AssociateErTablesInitParameters `json:"associateErTables,omitempty" tf:"associate_er_tables,omitempty"`

	// List of the enterprise router connections excluded from the
	// central network policy.
	// The exclude_er_connections structure is documented below.
	// Changing this parameter will create a new resource.
	// List of the enterprise router connections excluded from the central network policy.
	ExcludeErConnections []ExcludeErConnectionsInitParameters `json:"excludeErConnections,omitempty" tf:"exclude_er_connections,omitempty"`
}

type PlanesObservation struct {

	// List of route tables associated with the central network policy.
	// The associate_er_tables structure is documented below.
	// Changing this parameter will create a new resource.
	// List of route tables associated with the central network policy.
	AssociateErTables []AssociateErTablesObservation `json:"associateErTables,omitempty" tf:"associate_er_tables,omitempty"`

	// List of the enterprise router connections excluded from the
	// central network policy.
	// The exclude_er_connections structure is documented below.
	// Changing this parameter will create a new resource.
	// List of the enterprise router connections excluded from the central network policy.
	ExcludeErConnections []ExcludeErConnectionsObservation `json:"excludeErConnections,omitempty" tf:"exclude_er_connections,omitempty"`
}

type PlanesParameters struct {

	// List of route tables associated with the central network policy.
	// The associate_er_tables structure is documented below.
	// Changing this parameter will create a new resource.
	// List of route tables associated with the central network policy.
	// +kubebuilder:validation:Optional
	AssociateErTables []AssociateErTablesParameters `json:"associateErTables" tf:"associate_er_tables,omitempty"`

	// List of the enterprise router connections excluded from the
	// central network policy.
	// The exclude_er_connections structure is documented below.
	// Changing this parameter will create a new resource.
	// List of the enterprise router connections excluded from the central network policy.
	// +kubebuilder:validation:Optional
	ExcludeErConnections []ExcludeErConnectionsParameters `json:"excludeErConnections,omitempty" tf:"exclude_er_connections,omitempty"`
}

// CentralNetworkPolicySpec defines the desired state of CentralNetworkPolicy
type CentralNetworkPolicySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CentralNetworkPolicyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CentralNetworkPolicyInitParameters `json:"initProvider,omitempty"`
}

// CentralNetworkPolicyStatus defines the observed state of CentralNetworkPolicy.
type CentralNetworkPolicyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CentralNetworkPolicyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CentralNetworkPolicy is the Schema for the CentralNetworkPolicys API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type CentralNetworkPolicy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.erInstances) || (has(self.initProvider) && has(self.initProvider.erInstances))",message="spec.forProvider.erInstances is a required parameter"
	Spec   CentralNetworkPolicySpec   `json:"spec"`
	Status CentralNetworkPolicyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CentralNetworkPolicyList contains a list of CentralNetworkPolicys
type CentralNetworkPolicyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CentralNetworkPolicy `json:"items"`
}

// Repository type metadata.
var (
	CentralNetworkPolicy_Kind             = "CentralNetworkPolicy"
	CentralNetworkPolicy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CentralNetworkPolicy_Kind}.String()
	CentralNetworkPolicy_KindAPIVersion   = CentralNetworkPolicy_Kind + "." + CRDGroupVersion.String()
	CentralNetworkPolicy_GroupVersionKind = CRDGroupVersion.WithKind(CentralNetworkPolicy_Kind)
)

func init() {
	SchemeBuilder.Register(&CentralNetworkPolicy{}, &CentralNetworkPolicyList{})
}
