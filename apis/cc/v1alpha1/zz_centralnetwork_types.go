// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CentralNetworkInitParameters struct {

	// The description of the central network.
	// The description of the central network.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project ID to which the central network belongs.
	// The enterprise project ID to which the central network belongs.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// The name of the central network.
	// The name of the central network.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The key/value pairs to associate with the central network.
	// The key/value pairs to associate with the central network.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type CentralNetworkObservation struct {

	// The description of the central network.
	// The description of the central network.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project ID to which the central network belongs.
	// The enterprise project ID to which the central network belongs.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The name of the central network.
	// The name of the central network.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The state of the central network.
	// The valid values are as follows:
	// The state of Central network.
	State *string `json:"state,omitempty" tf:"state,omitempty"`

	// The key/value pairs to associate with the central network.
	// The key/value pairs to associate with the central network.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type CentralNetworkParameters struct {

	// The description of the central network.
	// The description of the central network.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The enterprise project ID to which the central network belongs.
	// The enterprise project ID to which the central network belongs.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// The name of the central network.
	// The name of the central network.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The key/value pairs to associate with the central network.
	// The key/value pairs to associate with the central network.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// CentralNetworkSpec defines the desired state of CentralNetwork
type CentralNetworkSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CentralNetworkParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CentralNetworkInitParameters `json:"initProvider,omitempty"`
}

// CentralNetworkStatus defines the observed state of CentralNetwork.
type CentralNetworkStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CentralNetworkObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CentralNetwork is the Schema for the CentralNetworks API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type CentralNetwork struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   CentralNetworkSpec   `json:"spec"`
	Status CentralNetworkStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CentralNetworkList contains a list of CentralNetworks
type CentralNetworkList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CentralNetwork `json:"items"`
}

// Repository type metadata.
var (
	CentralNetwork_Kind             = "CentralNetwork"
	CentralNetwork_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CentralNetwork_Kind}.String()
	CentralNetwork_KindAPIVersion   = CentralNetwork_Kind + "." + CRDGroupVersion.String()
	CentralNetwork_GroupVersionKind = CRDGroupVersion.WithKind(CentralNetwork_Kind)
)

func init() {
	SchemeBuilder.Register(&CentralNetwork{}, &CentralNetworkList{})
}
