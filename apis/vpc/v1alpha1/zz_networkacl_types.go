// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AssociatedSubnetsInitParameters struct {

	// Specifies the ID of the subnet to associate with the network ACL.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`
}

type AssociatedSubnetsObservation struct {

	// Specifies the ID of the subnet to associate with the network ACL.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`
}

type AssociatedSubnetsParameters struct {

	// Specifies the ID of the subnet to associate with the network ACL.
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId" tf:"subnet_id,omitempty"`
}

type EgressRulesInitParameters struct {

	// Specifies the rule action. The value can be: allow and deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type EgressRulesObservation struct {

	// Specifies the rule action. The value can be: allow and deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The ID of the rule.
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type EgressRulesParameters struct {

	// Specifies the rule action. The value can be: allow and deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	// +kubebuilder:validation:Optional
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	// +kubebuilder:validation:Optional
	IPVersion *float64 `json:"ipVersion" tf:"ip_version,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	// +kubebuilder:validation:Optional
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type IngressRulesInitParameters struct {

	// Specifies the rule action. The value can be: allow and deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type IngressRulesObservation struct {

	// Specifies the rule action. The value can be: allow and deny.
	Action *string `json:"action,omitempty" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	IPVersion *float64 `json:"ipVersion,omitempty" tf:"ip_version,omitempty"`

	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	Protocol *string `json:"protocol,omitempty" tf:"protocol,omitempty"`

	// The ID of the rule.
	RuleID *string `json:"ruleId,omitempty" tf:"rule_id,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type IngressRulesParameters struct {

	// Specifies the rule action. The value can be: allow and deny.
	// +kubebuilder:validation:Optional
	Action *string `json:"action" tf:"action,omitempty"`

	// Specifies the network ACL rule description. The value can contain no more
	// than 255 characters. The value cannot contain angle brackets (< or >).
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the destination IP address or CIDR block of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	DestinationIPAddress *string `json:"destinationIpAddress,omitempty" tf:"destination_ip_address,omitempty"`

	// Specifies the destination IP address group ID of a network ACL rule.
	// The destination_ip_address and destination_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	DestinationIPAddressGroupID *string `json:"destinationIpAddressGroupId,omitempty" tf:"destination_ip_address_group_id,omitempty"`

	// Specifies the destination ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	// +kubebuilder:validation:Optional
	DestinationPort *string `json:"destinationPort,omitempty" tf:"destination_port,omitempty"`

	// Specifies the IP version of a network ACL rule.
	// The value can be 4 (IPv4) and 6 (IPv6).
	// +kubebuilder:validation:Optional
	IPVersion *float64 `json:"ipVersion" tf:"ip_version,omitempty"`

	// Specifies the network ACL rule name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the rule protocol The value can be tcp, udp, icmp, icmpv6,
	// or an IP protocol number (0–255). The value any indicates all protocols.
	// +kubebuilder:validation:Optional
	Protocol *string `json:"protocol" tf:"protocol,omitempty"`

	// Specifies the source IP address or CIDR block of a network ACL rule.
	// The source_ip_address and source_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	SourceIPAddress *string `json:"sourceIpAddress,omitempty" tf:"source_ip_address,omitempty"`

	// Specifies the source IP address group ID of a network ACL rule.
	// source_ip_address and source_address_group_id cannot be configured at the same time.
	// +kubebuilder:validation:Optional
	SourceIPAddressGroupID *string `json:"sourceIpAddressGroupId,omitempty" tf:"source_ip_address_group_id,omitempty"`

	// Specifies the source ports of a network ACL rule.
	// You can specify a single port or a port range. Separate every two entries with a comma.
	// +kubebuilder:validation:Optional
	SourcePort *string `json:"sourcePort,omitempty" tf:"source_port,omitempty"`
}

type NetworkACLInitParameters struct {

	// Specifies the associated subnets of the network ACL.
	// The associated_subnets structure is documented below.
	AssociatedSubnets []AssociatedSubnetsInitParameters `json:"associatedSubnets,omitempty" tf:"associated_subnets,omitempty"`

	// Specifies the network ACL description. The value can contain no more
	// than 255 characters and cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules []EgressRulesInitParameters `json:"egressRules,omitempty" tf:"egress_rules,omitempty"`

	// Specifies whether the network ACL is enabled. The default value is true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules []IngressRulesInitParameters `json:"ingressRules,omitempty" tf:"ingress_rules,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the key/value pairs to associate with the network ACL.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type NetworkACLObservation struct {

	// Specifies the associated subnets of the network ACL.
	// The associated_subnets structure is documented below.
	AssociatedSubnets []AssociatedSubnetsObservation `json:"associatedSubnets,omitempty" tf:"associated_subnets,omitempty"`

	// The created time of the ACL.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the network ACL description. The value can contain no more
	// than 255 characters and cannot contain angle brackets (< or >).
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	EgressRules []EgressRulesObservation `json:"egressRules,omitempty" tf:"egress_rules,omitempty"`

	// Specifies whether the network ACL is enabled. The default value is true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the enterprise project ID of the network ACL.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// The resource ID in uuid format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	IngressRules []IngressRulesObservation `json:"ingressRules,omitempty" tf:"ingress_rules,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// The status of the ACL.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the key/value pairs to associate with the network ACL.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The updated time of the ACL.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type NetworkACLParameters struct {

	// Specifies the associated subnets of the network ACL.
	// The associated_subnets structure is documented below.
	// +kubebuilder:validation:Optional
	AssociatedSubnets []AssociatedSubnetsParameters `json:"associatedSubnets,omitempty" tf:"associated_subnets,omitempty"`

	// Specifies the network ACL description. The value can contain no more
	// than 255 characters and cannot contain angle brackets (< or >).
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the egress rules of the network ACL.
	// The rules structure is documented below.
	// +kubebuilder:validation:Optional
	EgressRules []EgressRulesParameters `json:"egressRules,omitempty" tf:"egress_rules,omitempty"`

	// Specifies whether the network ACL is enabled. The default value is true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the enterprise project ID of the network ACL.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the ingress rules of the network ACL.
	// The rules structure is documented below.
	// +kubebuilder:validation:Optional
	IngressRules []IngressRulesParameters `json:"ingressRules,omitempty" tf:"ingress_rules,omitempty"`

	// Specifies the network ACL name. The value can contain no more than 64 characters,
	// including letters, digits, underscores (_), hyphens (-), and periods (.).
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the key/value pairs to associate with the network ACL.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// NetworkACLSpec defines the desired state of NetworkACL
type NetworkACLSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     NetworkACLParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider NetworkACLInitParameters `json:"initProvider,omitempty"`
}

// NetworkACLStatus defines the observed state of NetworkACL.
type NetworkACLStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        NetworkACLObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// NetworkACL is the Schema for the NetworkACLs API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type NetworkACL struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.enterpriseProjectId) || (has(self.initProvider) && has(self.initProvider.enterpriseProjectId))",message="spec.forProvider.enterpriseProjectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   NetworkACLSpec   `json:"spec"`
	Status NetworkACLStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// NetworkACLList contains a list of NetworkACLs
type NetworkACLList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []NetworkACL `json:"items"`
}

// Repository type metadata.
var (
	NetworkACL_Kind             = "NetworkACL"
	NetworkACL_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: NetworkACL_Kind}.String()
	NetworkACL_KindAPIVersion   = NetworkACL_Kind + "." + CRDGroupVersion.String()
	NetworkACL_GroupVersionKind = CRDGroupVersion.WithKind(NetworkACL_Kind)
)

func init() {
	SchemeBuilder.Register(&NetworkACL{}, &NetworkACLList{})
}
