// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PrivateTransitIPInitParameters struct {

	// Specifies the ID of the enterprise project to which the transit
	// IP belongs.
	// Changing this will create a new resource.
	// The ID of the enterprise project to which the transit IP belongs.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the IP address of the transit subnet.
	// Changing this will create a new resource.
	// The IP address of the transit subnet.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the region where the transit IP is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// The region where the transit IP is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the transit subnet ID to which the transit IP belongs.
	// Changing this will create a new resource.
	// The ID of the transit subnet to which the transit IP belongs.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the key/value pairs to associate with the transit IP.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type PrivateTransitIPObservation struct {

	// The creation time of the transit IP for private NAT.
	// The creation time of the transit IP for private NAT.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies the ID of the enterprise project to which the transit
	// IP belongs.
	// Changing this will create a new resource.
	// The ID of the enterprise project to which the transit IP belongs.
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// The ID of the private NAT gateway to which the transit IP belongs.
	// The ID of the private NAT gateway to which the transit IP belongs.
	GatewayID *string `json:"gatewayId,omitempty" tf:"gateway_id,omitempty"`

	// The resource ID in UUID format.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the IP address of the transit subnet.
	// Changing this will create a new resource.
	// The IP address of the transit subnet.
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// The network interface ID of the transit IP for private NAT.
	// The network interface ID of the transit IP for private NAT.
	NetworkInterfaceID *string `json:"networkInterfaceId,omitempty" tf:"network_interface_id,omitempty"`

	// Specifies the region where the transit IP is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// The region where the transit IP is located.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the transit subnet ID to which the transit IP belongs.
	// Changing this will create a new resource.
	// The ID of the transit subnet to which the transit IP belongs.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Specifies the key/value pairs to associate with the transit IP.
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`

	// The latest update time of the transit IP for private NAT.
	// The latest update time of the transit IP for private NAT.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`
}

type PrivateTransitIPParameters struct {

	// Specifies the ID of the enterprise project to which the transit
	// IP belongs.
	// Changing this will create a new resource.
	// The ID of the enterprise project to which the transit IP belongs.
	// +kubebuilder:validation:Optional
	EnterpriseProjectID *string `json:"enterpriseProjectId,omitempty" tf:"enterprise_project_id,omitempty"`

	// Specifies the IP address of the transit subnet.
	// Changing this will create a new resource.
	// The IP address of the transit subnet.
	// +kubebuilder:validation:Optional
	IPAddress *string `json:"ipAddress,omitempty" tf:"ip_address,omitempty"`

	// Specifies the region where the transit IP is located.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// The region where the transit IP is located.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the transit subnet ID to which the transit IP belongs.
	// Changing this will create a new resource.
	// The ID of the transit subnet to which the transit IP belongs.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the key/value pairs to associate with the transit IP.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

// PrivateTransitIPSpec defines the desired state of PrivateTransitIP
type PrivateTransitIPSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrivateTransitIPParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrivateTransitIPInitParameters `json:"initProvider,omitempty"`
}

// PrivateTransitIPStatus defines the observed state of PrivateTransitIP.
type PrivateTransitIPStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrivateTransitIPObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrivateTransitIP is the Schema for the PrivateTransitIPs API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type PrivateTransitIP struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              PrivateTransitIPSpec   `json:"spec"`
	Status            PrivateTransitIPStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrivateTransitIPList contains a list of PrivateTransitIPs
type PrivateTransitIPList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrivateTransitIP `json:"items"`
}

// Repository type metadata.
var (
	PrivateTransitIP_Kind             = "PrivateTransitIP"
	PrivateTransitIP_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrivateTransitIP_Kind}.String()
	PrivateTransitIP_KindAPIVersion   = PrivateTransitIP_Kind + "." + CRDGroupVersion.String()
	PrivateTransitIP_GroupVersionKind = CRDGroupVersion.WithKind(PrivateTransitIP_Kind)
)

func init() {
	SchemeBuilder.Register(&PrivateTransitIP{}, &PrivateTransitIPList{})
}
