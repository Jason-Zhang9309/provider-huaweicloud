// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type MySQLDatabaseTableRestoreDatabasesInitParameters struct {

	// Specifies the name of the database after restoration.
	// Specifies the name of the database after restoration.
	NewName *string `json:"newName,omitempty" tf:"new_name,omitempty"`

	// Specifies the name of the database before restoration.
	// Specifies the name of the database before restoration.
	OldName *string `json:"oldName,omitempty" tf:"old_name,omitempty"`
}

type MySQLDatabaseTableRestoreDatabasesObservation struct {

	// Specifies the name of the database after restoration.
	// Specifies the name of the database after restoration.
	NewName *string `json:"newName,omitempty" tf:"new_name,omitempty"`

	// Specifies the name of the database before restoration.
	// Specifies the name of the database before restoration.
	OldName *string `json:"oldName,omitempty" tf:"old_name,omitempty"`
}

type MySQLDatabaseTableRestoreDatabasesParameters struct {

	// Specifies the name of the database after restoration.
	// Specifies the name of the database after restoration.
	// +kubebuilder:validation:Optional
	NewName *string `json:"newName" tf:"new_name,omitempty"`

	// Specifies the name of the database before restoration.
	// Specifies the name of the database before restoration.
	// +kubebuilder:validation:Optional
	OldName *string `json:"oldName" tf:"old_name,omitempty"`
}

type MySQLDatabaseTableRestoreInitParameters struct {

	// Specifies the databases that will be restored.
	// The databases structure is documented below.
	// Specifies the databases that will be restored.
	Databases []MySQLDatabaseTableRestoreDatabasesInitParameters `json:"databases,omitempty" tf:"databases,omitempty"`

	// Specifies the ID of RDS MySQL instance.
	// Specifies the ID of RDS MySQL instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to use fast restoration.
	// Specifies whether to use fast restoration.
	IsFastRestore *bool `json:"isFastRestore,omitempty" tf:"is_fast_restore,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the tables that will be restored.
	// The restore_tables structure is documented below.
	// Specifies the tables that will be restored.
	RestoreTables []RestoreTablesInitParameters `json:"restoreTables,omitempty" tf:"restore_tables,omitempty"`

	// Specifies the restoration time point. A timestamp in milliseconds is used.
	// Specifies the restoration time point.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type MySQLDatabaseTableRestoreObservation struct {

	// Specifies the databases that will be restored.
	// The databases structure is documented below.
	// Specifies the databases that will be restored.
	Databases []MySQLDatabaseTableRestoreDatabasesObservation `json:"databases,omitempty" tf:"databases,omitempty"`

	// The resource ID. The value is the restore job ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of RDS MySQL instance.
	// Specifies the ID of RDS MySQL instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies whether to use fast restoration.
	// Specifies whether to use fast restoration.
	IsFastRestore *bool `json:"isFastRestore,omitempty" tf:"is_fast_restore,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the tables that will be restored.
	// The restore_tables structure is documented below.
	// Specifies the tables that will be restored.
	RestoreTables []RestoreTablesObservation `json:"restoreTables,omitempty" tf:"restore_tables,omitempty"`

	// Specifies the restoration time point. A timestamp in milliseconds is used.
	// Specifies the restoration time point.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type MySQLDatabaseTableRestoreParameters struct {

	// Specifies the databases that will be restored.
	// The databases structure is documented below.
	// Specifies the databases that will be restored.
	// +kubebuilder:validation:Optional
	Databases []MySQLDatabaseTableRestoreDatabasesParameters `json:"databases,omitempty" tf:"databases,omitempty"`

	// Specifies the ID of RDS MySQL instance.
	// Specifies the ID of RDS MySQL instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies whether to use fast restoration.
	// Specifies whether to use fast restoration.
	// +kubebuilder:validation:Optional
	IsFastRestore *bool `json:"isFastRestore,omitempty" tf:"is_fast_restore,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the tables that will be restored.
	// The restore_tables structure is documented below.
	// Specifies the tables that will be restored.
	// +kubebuilder:validation:Optional
	RestoreTables []RestoreTablesParameters `json:"restoreTables,omitempty" tf:"restore_tables,omitempty"`

	// Specifies the restoration time point. A timestamp in milliseconds is used.
	// Specifies the restoration time point.
	// +kubebuilder:validation:Optional
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`
}

type RestoreTablesInitParameters struct {

	// Specifies the database name.
	// Specifies the database name.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// Specifies the tables.
	// The tables structure is documented below.
	// Specifies the tables.
	Tables []TablesInitParameters `json:"tables,omitempty" tf:"tables,omitempty"`
}

type RestoreTablesObservation struct {

	// Specifies the database name.
	// Specifies the database name.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// Specifies the tables.
	// The tables structure is documented below.
	// Specifies the tables.
	Tables []TablesObservation `json:"tables,omitempty" tf:"tables,omitempty"`
}

type RestoreTablesParameters struct {

	// Specifies the database name.
	// Specifies the database name.
	// +kubebuilder:validation:Optional
	Database *string `json:"database" tf:"database,omitempty"`

	// Specifies the tables.
	// The tables structure is documented below.
	// Specifies the tables.
	// +kubebuilder:validation:Optional
	Tables []TablesParameters `json:"tables" tf:"tables,omitempty"`
}

type TablesInitParameters struct {

	// Specifies the name of the table after restoration.
	// Specifies the name of the table after restoration.
	NewName *string `json:"newName,omitempty" tf:"new_name,omitempty"`

	// Specifies the name of the table before restoration.
	// Specifies the name of the table before restoration.
	OldName *string `json:"oldName,omitempty" tf:"old_name,omitempty"`
}

type TablesObservation struct {

	// Specifies the name of the table after restoration.
	// Specifies the name of the table after restoration.
	NewName *string `json:"newName,omitempty" tf:"new_name,omitempty"`

	// Specifies the name of the table before restoration.
	// Specifies the name of the table before restoration.
	OldName *string `json:"oldName,omitempty" tf:"old_name,omitempty"`
}

type TablesParameters struct {

	// Specifies the name of the table after restoration.
	// Specifies the name of the table after restoration.
	// +kubebuilder:validation:Optional
	NewName *string `json:"newName" tf:"new_name,omitempty"`

	// Specifies the name of the table before restoration.
	// Specifies the name of the table before restoration.
	// +kubebuilder:validation:Optional
	OldName *string `json:"oldName" tf:"old_name,omitempty"`
}

// MySQLDatabaseTableRestoreSpec defines the desired state of MySQLDatabaseTableRestore
type MySQLDatabaseTableRestoreSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     MySQLDatabaseTableRestoreParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider MySQLDatabaseTableRestoreInitParameters `json:"initProvider,omitempty"`
}

// MySQLDatabaseTableRestoreStatus defines the observed state of MySQLDatabaseTableRestore.
type MySQLDatabaseTableRestoreStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        MySQLDatabaseTableRestoreObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// MySQLDatabaseTableRestore is the Schema for the MySQLDatabaseTableRestores API. Manages an RDS instance MySQL database table restore resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type MySQLDatabaseTableRestore struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.restoreTime) || (has(self.initProvider) && has(self.initProvider.restoreTime))",message="spec.forProvider.restoreTime is a required parameter"
	Spec   MySQLDatabaseTableRestoreSpec   `json:"spec"`
	Status MySQLDatabaseTableRestoreStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// MySQLDatabaseTableRestoreList contains a list of MySQLDatabaseTableRestores
type MySQLDatabaseTableRestoreList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []MySQLDatabaseTableRestore `json:"items"`
}

// Repository type metadata.
var (
	MySQLDatabaseTableRestore_Kind             = "MySQLDatabaseTableRestore"
	MySQLDatabaseTableRestore_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: MySQLDatabaseTableRestore_Kind}.String()
	MySQLDatabaseTableRestore_KindAPIVersion   = MySQLDatabaseTableRestore_Kind + "." + CRDGroupVersion.String()
	MySQLDatabaseTableRestore_GroupVersionKind = CRDGroupVersion.WithKind(MySQLDatabaseTableRestore_Kind)
)

func init() {
	SchemeBuilder.Register(&MySQLDatabaseTableRestore{}, &MySQLDatabaseTableRestoreList{})
}
