// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type PrimaryStandbySwitchInitParameters struct {

	// Specifies whether to perform a forcible primary/standby switchover. This parameter
	// is valid only for the PostgreSQL DB engine.
	// Specifies whether to perform a forcible primary/standby switchover.
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// Specifies the ID of instance.
	// Specifies the ID of instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PrimaryStandbySwitchObservation struct {

	// Specifies whether to perform a forcible primary/standby switchover. This parameter
	// is valid only for the PostgreSQL DB engine.
	// Specifies whether to perform a forcible primary/standby switchover.
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// The resource ID. The value is the instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of instance.
	// Specifies the ID of instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PrimaryStandbySwitchParameters struct {

	// Specifies whether to perform a forcible primary/standby switchover. This parameter
	// is valid only for the PostgreSQL DB engine.
	// Specifies whether to perform a forcible primary/standby switchover.
	// +kubebuilder:validation:Optional
	Force *bool `json:"force,omitempty" tf:"force,omitempty"`

	// Specifies the ID of instance.
	// Specifies the ID of instance.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// PrimaryStandbySwitchSpec defines the desired state of PrimaryStandbySwitch
type PrimaryStandbySwitchSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PrimaryStandbySwitchParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PrimaryStandbySwitchInitParameters `json:"initProvider,omitempty"`
}

// PrimaryStandbySwitchStatus defines the observed state of PrimaryStandbySwitch.
type PrimaryStandbySwitchStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PrimaryStandbySwitchObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PrimaryStandbySwitch is the Schema for the PrimaryStandbySwitchs API. Manages an RDS instance primary standby switch resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type PrimaryStandbySwitch struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	Spec   PrimaryStandbySwitchSpec   `json:"spec"`
	Status PrimaryStandbySwitchStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PrimaryStandbySwitchList contains a list of PrimaryStandbySwitchs
type PrimaryStandbySwitchList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PrimaryStandbySwitch `json:"items"`
}

// Repository type metadata.
var (
	PrimaryStandbySwitch_Kind             = "PrimaryStandbySwitch"
	PrimaryStandbySwitch_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PrimaryStandbySwitch_Kind}.String()
	PrimaryStandbySwitch_KindAPIVersion   = PrimaryStandbySwitch_Kind + "." + CRDGroupVersion.String()
	PrimaryStandbySwitch_GroupVersionKind = CRDGroupVersion.WithKind(PrimaryStandbySwitch_Kind)
)

func init() {
	SchemeBuilder.Register(&PrimaryStandbySwitch{}, &PrimaryStandbySwitchList{})
}
