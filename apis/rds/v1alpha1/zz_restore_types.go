// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RestoreInitParameters_2 struct {

	// Specifies the ID of the backup to be restored. This parameter must be
	// specified when type is set to backup or left empty.
	// Specifies the ID of the backup to be restored.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the databases that will be restored. This parameter applies only
	// to the SQL Server DB engine. The key is the old database name, the value is the new database name. If this parameter is
	// specified, you can restore all or specific databases and rename new databases. If this parameter is not specified, all
	// databases are restored by default. You can enter multiple new database names and separate them with commas (,). The new
	// database names can contain but cannot be the same as the original database names. Note the following when you are
	// specifying new database names:
	// Specifies the databases that will be restored.
	// +mapType=granular
	DatabaseName map[string]*string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp format.
	// The unit is millisecond and the time zone is UTC. This parameter must be specified when type is set to timestamp.
	// Specifies the time point of data restoration in the UNIX timestamp format.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	// Specifies the source instance ID.
	SourceInstanceID *string `json:"sourceInstanceId,omitempty" tf:"source_instance_id,omitempty"`

	// Specifies the target instance ID.
	// Specifies the target instance ID.
	TargetInstanceID *string `json:"targetInstanceId,omitempty" tf:"target_instance_id,omitempty"`

	// Specifies the restoration type. Value options:
	// Specifies the restoration type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RestoreObservation_2 struct {

	// Specifies the ID of the backup to be restored. This parameter must be
	// specified when type is set to backup or left empty.
	// Specifies the ID of the backup to be restored.
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the databases that will be restored. This parameter applies only
	// to the SQL Server DB engine. The key is the old database name, the value is the new database name. If this parameter is
	// specified, you can restore all or specific databases and rename new databases. If this parameter is not specified, all
	// databases are restored by default. You can enter multiple new database names and separate them with commas (,). The new
	// database names can contain but cannot be the same as the original database names. Note the following when you are
	// specifying new database names:
	// Specifies the databases that will be restored.
	// +mapType=granular
	DatabaseName map[string]*string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// The resource ID. The value is the restore job ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp format.
	// The unit is millisecond and the time zone is UTC. This parameter must be specified when type is set to timestamp.
	// Specifies the time point of data restoration in the UNIX timestamp format.
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	// Specifies the source instance ID.
	SourceInstanceID *string `json:"sourceInstanceId,omitempty" tf:"source_instance_id,omitempty"`

	// Specifies the target instance ID.
	// Specifies the target instance ID.
	TargetInstanceID *string `json:"targetInstanceId,omitempty" tf:"target_instance_id,omitempty"`

	// Specifies the restoration type. Value options:
	// Specifies the restoration type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type RestoreParameters_2 struct {

	// Specifies the ID of the backup to be restored. This parameter must be
	// specified when type is set to backup or left empty.
	// Specifies the ID of the backup to be restored.
	// +kubebuilder:validation:Optional
	BackupID *string `json:"backupId,omitempty" tf:"backup_id,omitempty"`

	// Specifies the databases that will be restored. This parameter applies only
	// to the SQL Server DB engine. The key is the old database name, the value is the new database name. If this parameter is
	// specified, you can restore all or specific databases and rename new databases. If this parameter is not specified, all
	// databases are restored by default. You can enter multiple new database names and separate them with commas (,). The new
	// database names can contain but cannot be the same as the original database names. Note the following when you are
	// specifying new database names:
	// Specifies the databases that will be restored.
	// +kubebuilder:validation:Optional
	// +mapType=granular
	DatabaseName map[string]*string `json:"databaseName,omitempty" tf:"database_name,omitempty"`

	// The region in which to create the rds instance resource. If omitted, the
	// provider-level region will be used. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the time point of data restoration in the UNIX timestamp format.
	// The unit is millisecond and the time zone is UTC. This parameter must be specified when type is set to timestamp.
	// Specifies the time point of data restoration in the UNIX timestamp format.
	// +kubebuilder:validation:Optional
	RestoreTime *float64 `json:"restoreTime,omitempty" tf:"restore_time,omitempty"`

	// Specifies the source instance ID.
	// Specifies the source instance ID.
	// +kubebuilder:validation:Optional
	SourceInstanceID *string `json:"sourceInstanceId,omitempty" tf:"source_instance_id,omitempty"`

	// Specifies the target instance ID.
	// Specifies the target instance ID.
	// +kubebuilder:validation:Optional
	TargetInstanceID *string `json:"targetInstanceId,omitempty" tf:"target_instance_id,omitempty"`

	// Specifies the restoration type. Value options:
	// Specifies the restoration type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

// RestoreSpec defines the desired state of Restore
type RestoreSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RestoreParameters_2 `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RestoreInitParameters_2 `json:"initProvider,omitempty"`
}

// RestoreStatus defines the observed state of Restore.
type RestoreStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RestoreObservation_2 `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Restore is the Schema for the Restores API. Manages an RDS instance restore resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type Restore struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.sourceInstanceId) || (has(self.initProvider) && has(self.initProvider.sourceInstanceId))",message="spec.forProvider.sourceInstanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.targetInstanceId) || (has(self.initProvider) && has(self.initProvider.targetInstanceId))",message="spec.forProvider.targetInstanceId is a required parameter"
	Spec   RestoreSpec   `json:"spec"`
	Status RestoreStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RestoreList contains a list of Restores
type RestoreList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Restore `json:"items"`
}

// Repository type metadata.
var (
	Restore_Kind             = "Restore"
	Restore_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Restore_Kind}.String()
	Restore_KindAPIVersion   = Restore_Kind + "." + CRDGroupVersion.String()
	Restore_GroupVersionKind = CRDGroupVersion.WithKind(Restore_Kind)
)

func init() {
	SchemeBuilder.Register(&Restore{}, &RestoreList{})
}
