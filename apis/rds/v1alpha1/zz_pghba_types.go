// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type HostBasedAuthenticationsInitParameters struct {

	// Specifies the client IP address.
	// Specifies the client IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the database name other than template0 and template1.
	// Specifies the database name.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// Specifies the subnet mask. It is mandatory when address does not contain mask.
	// Specifies the subnet mask.
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// Specifies the authentication mode. Value options: reject, md5 and
	// scram-sha-256.
	// Specifies the authentication mode.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// Specifies the connection type. Value options: host, hostssl and hostnossl.
	// Specifies the connection type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the name of a user other than rdsAdmin, rdsMetric, rdsBackup,
	// rdsRepl and rdsProxy.
	// Specifies the Name of a user.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type HostBasedAuthenticationsObservation struct {

	// Specifies the client IP address.
	// Specifies the client IP address.
	Address *string `json:"address,omitempty" tf:"address,omitempty"`

	// Specifies the database name other than template0 and template1.
	// Specifies the database name.
	Database *string `json:"database,omitempty" tf:"database,omitempty"`

	// Specifies the subnet mask. It is mandatory when address does not contain mask.
	// Specifies the subnet mask.
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// Specifies the authentication mode. Value options: reject, md5 and
	// scram-sha-256.
	// Specifies the authentication mode.
	Method *string `json:"method,omitempty" tf:"method,omitempty"`

	// Specifies the connection type. Value options: host, hostssl and hostnossl.
	// Specifies the connection type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the name of a user other than rdsAdmin, rdsMetric, rdsBackup,
	// rdsRepl and rdsProxy.
	// Specifies the Name of a user.
	User *string `json:"user,omitempty" tf:"user,omitempty"`
}

type HostBasedAuthenticationsParameters struct {

	// Specifies the client IP address.
	// Specifies the client IP address.
	// +kubebuilder:validation:Optional
	Address *string `json:"address" tf:"address,omitempty"`

	// Specifies the database name other than template0 and template1.
	// Specifies the database name.
	// +kubebuilder:validation:Optional
	Database *string `json:"database" tf:"database,omitempty"`

	// Specifies the subnet mask. It is mandatory when address does not contain mask.
	// Specifies the subnet mask.
	// +kubebuilder:validation:Optional
	Mask *string `json:"mask,omitempty" tf:"mask,omitempty"`

	// Specifies the authentication mode. Value options: reject, md5 and
	// scram-sha-256.
	// Specifies the authentication mode.
	// +kubebuilder:validation:Optional
	Method *string `json:"method" tf:"method,omitempty"`

	// Specifies the connection type. Value options: host, hostssl and hostnossl.
	// Specifies the connection type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`

	// Specifies the name of a user other than rdsAdmin, rdsMetric, rdsBackup,
	// rdsRepl and rdsProxy.
	// Specifies the Name of a user.
	// +kubebuilder:validation:Optional
	User *string `json:"user" tf:"user,omitempty"`
}

type PgHbaInitParameters struct {

	// Specifies the list of host based authentications.
	// The host_based_authentications structure is documented below.
	// Specifies the list of host based authentications.
	HostBasedAuthentications []HostBasedAuthenticationsInitParameters `json:"hostBasedAuthentications,omitempty" tf:"host_based_authentications,omitempty"`

	// Specifies the ID of the RDS PostgreSQL instance.
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PgHbaObservation struct {

	// Specifies the list of host based authentications.
	// The host_based_authentications structure is documented below.
	// Specifies the list of host based authentications.
	HostBasedAuthentications []HostBasedAuthenticationsObservation `json:"hostBasedAuthentications,omitempty" tf:"host_based_authentications,omitempty"`

	// The resource ID. The value is the instance ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the RDS PostgreSQL instance.
	// Specifies the ID of the RDS PostgreSQL instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type PgHbaParameters struct {

	// Specifies the list of host based authentications.
	// The host_based_authentications structure is documented below.
	// Specifies the list of host based authentications.
	// +kubebuilder:validation:Optional
	HostBasedAuthentications []HostBasedAuthenticationsParameters `json:"hostBasedAuthentications,omitempty" tf:"host_based_authentications,omitempty"`

	// Specifies the ID of the RDS PostgreSQL instance.
	// Specifies the ID of the RDS PostgreSQL instance.
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// PgHbaSpec defines the desired state of PgHba
type PgHbaSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     PgHbaParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider PgHbaInitParameters `json:"initProvider,omitempty"`
}

// PgHbaStatus defines the observed state of PgHba.
type PgHbaStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        PgHbaObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// PgHba is the Schema for the PgHbas API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type PgHba struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.hostBasedAuthentications) || (has(self.initProvider) && has(self.initProvider.hostBasedAuthentications))",message="spec.forProvider.hostBasedAuthentications is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.instanceId) || (has(self.initProvider) && has(self.initProvider.instanceId))",message="spec.forProvider.instanceId is a required parameter"
	Spec   PgHbaSpec   `json:"spec"`
	Status PgHbaStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// PgHbaList contains a list of PgHbas
type PgHbaList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []PgHba `json:"items"`
}

// Repository type metadata.
var (
	PgHba_Kind             = "PgHba"
	PgHba_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: PgHba_Kind}.String()
	PgHba_KindAPIVersion   = PgHba_Kind + "." + CRDGroupVersion.String()
	PgHba_GroupVersionKind = CRDGroupVersion.WithKind(PgHba_Kind)
)

func init() {
	SchemeBuilder.Register(&PgHba{}, &PgHbaList{})
}
