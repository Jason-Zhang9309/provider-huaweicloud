// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type CrossRegionBackupStrategyInitParameters struct {

	// Specifies the backup type. Value options:
	// Specifies the backup type.
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Specifies the target project ID for the cross-region backup
	// policy.
	// Specifies the target project ID for the cross-region backup policy.
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the target region ID for the cross-region backup policy.
	// Specifies the target region ID for the cross-region backup policy.
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the number of days to retain the generated backup files.
	// Value ranges from 1 to 1,825.
	// Specifies the number of days to retain the generated backup files.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type CrossRegionBackupStrategyObservation struct {

	// Specifies the backup type. Value options:
	// Specifies the backup type.
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Specifies the target project ID for the cross-region backup
	// policy.
	// Specifies the target project ID for the cross-region backup policy.
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the target region ID for the cross-region backup policy.
	// Specifies the target region ID for the cross-region backup policy.
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the number of days to retain the generated backup files.
	// Value ranges from 1 to 1,825.
	// Specifies the number of days to retain the generated backup files.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type CrossRegionBackupStrategyParameters struct {

	// Specifies the backup type. Value options:
	// Specifies the backup type.
	// +kubebuilder:validation:Optional
	BackupType *string `json:"backupType,omitempty" tf:"backup_type,omitempty"`

	// Specifies the target project ID for the cross-region backup
	// policy.
	// Specifies the target project ID for the cross-region backup policy.
	// +kubebuilder:validation:Optional
	DestinationProjectID *string `json:"destinationProjectId,omitempty" tf:"destination_project_id,omitempty"`

	// Specifies the target region ID for the cross-region backup policy.
	// Specifies the target region ID for the cross-region backup policy.
	// +kubebuilder:validation:Optional
	DestinationRegion *string `json:"destinationRegion,omitempty" tf:"destination_region,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the number of days to retain the generated backup files.
	// Value ranges from 1 to 1,825.
	// Specifies the number of days to retain the generated backup files.
	// +kubebuilder:validation:Optional
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// CrossRegionBackupStrategySpec defines the desired state of CrossRegionBackupStrategy
type CrossRegionBackupStrategySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     CrossRegionBackupStrategyParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider CrossRegionBackupStrategyInitParameters `json:"initProvider,omitempty"`
}

// CrossRegionBackupStrategyStatus defines the observed state of CrossRegionBackupStrategy.
type CrossRegionBackupStrategyStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        CrossRegionBackupStrategyObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// CrossRegionBackupStrategy is the Schema for the CrossRegionBackupStrategys API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type CrossRegionBackupStrategy struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.backupType) || (has(self.initProvider) && has(self.initProvider.backupType))",message="spec.forProvider.backupType is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destinationProjectId) || (has(self.initProvider) && has(self.initProvider.destinationProjectId))",message="spec.forProvider.destinationProjectId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.destinationRegion) || (has(self.initProvider) && has(self.initProvider.destinationRegion))",message="spec.forProvider.destinationRegion is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.keepDays) || (has(self.initProvider) && has(self.initProvider.keepDays))",message="spec.forProvider.keepDays is a required parameter"
	Spec   CrossRegionBackupStrategySpec   `json:"spec"`
	Status CrossRegionBackupStrategyStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// CrossRegionBackupStrategyList contains a list of CrossRegionBackupStrategys
type CrossRegionBackupStrategyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CrossRegionBackupStrategy `json:"items"`
}

// Repository type metadata.
var (
	CrossRegionBackupStrategy_Kind             = "CrossRegionBackupStrategy"
	CrossRegionBackupStrategy_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: CrossRegionBackupStrategy_Kind}.String()
	CrossRegionBackupStrategy_KindAPIVersion   = CrossRegionBackupStrategy_Kind + "." + CRDGroupVersion.String()
	CrossRegionBackupStrategy_GroupVersionKind = CRDGroupVersion.WithKind(CrossRegionBackupStrategy_Kind)
)

func init() {
	SchemeBuilder.Register(&CrossRegionBackupStrategy{}, &CrossRegionBackupStrategyList{})
}
