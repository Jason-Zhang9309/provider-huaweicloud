// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type SQLAuditInitParameters struct {

	// Specifies the list of audit types. Value options: CREATE_USER, DROP_USER,
	// RENAME_USER, GRANT, REVOKE, CREATE, ALTER, DROP, RENAME, TRUNCATE, INSERT,
	// DELETE, UPDATE, REPLACE, SELECT, BEGIN/COMMIT/ROLLBACK, PREPARED_STATEMENT.
	// It is not supported for PostgreSQL.
	// Specifies the list of audit types.
	// +listType=set
	AuditTypes []*string `json:"auditTypes,omitempty" tf:"audit_types,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the number of days for storing audit logs. Value ranges from 1 to 732.
	// Specifies the number of days for storing audit logs.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether the historical audit logs will be reserved for some time
	// when SQL audit is disabled. It is valid only when SQL audit is disabled.
	// Specifies whether the historical audit logs will be reserved for some time when SQL
	// audit is disabled.
	ReserveAuditlogs *bool `json:"reserveAuditlogs,omitempty" tf:"reserve_auditlogs,omitempty"`
}

type SQLAuditObservation struct {

	// Specifies the list of audit types. Value options: CREATE_USER, DROP_USER,
	// RENAME_USER, GRANT, REVOKE, CREATE, ALTER, DROP, RENAME, TRUNCATE, INSERT,
	// DELETE, UPDATE, REPLACE, SELECT, BEGIN/COMMIT/ROLLBACK, PREPARED_STATEMENT.
	// It is not supported for PostgreSQL.
	// Specifies the list of audit types.
	// +listType=set
	AuditTypes []*string `json:"auditTypes,omitempty" tf:"audit_types,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the number of days for storing audit logs. Value ranges from 1 to 732.
	// Specifies the number of days for storing audit logs.
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether the historical audit logs will be reserved for some time
	// when SQL audit is disabled. It is valid only when SQL audit is disabled.
	// Specifies whether the historical audit logs will be reserved for some time when SQL
	// audit is disabled.
	ReserveAuditlogs *bool `json:"reserveAuditlogs,omitempty" tf:"reserve_auditlogs,omitempty"`
}

type SQLAuditParameters struct {

	// Specifies the list of audit types. Value options: CREATE_USER, DROP_USER,
	// RENAME_USER, GRANT, REVOKE, CREATE, ALTER, DROP, RENAME, TRUNCATE, INSERT,
	// DELETE, UPDATE, REPLACE, SELECT, BEGIN/COMMIT/ROLLBACK, PREPARED_STATEMENT.
	// It is not supported for PostgreSQL.
	// Specifies the list of audit types.
	// +kubebuilder:validation:Optional
	// +listType=set
	AuditTypes []*string `json:"auditTypes,omitempty" tf:"audit_types,omitempty"`

	// Specifies the ID of the RDS instance.
	// Specifies the ID of the RDS instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/rds/v1alpha1.Instance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a Instance in rds to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the number of days for storing audit logs. Value ranges from 1 to 732.
	// Specifies the number of days for storing audit logs.
	// +kubebuilder:validation:Optional
	KeepDays *float64 `json:"keepDays,omitempty" tf:"keep_days,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies whether the historical audit logs will be reserved for some time
	// when SQL audit is disabled. It is valid only when SQL audit is disabled.
	// Specifies whether the historical audit logs will be reserved for some time when SQL
	// audit is disabled.
	// +kubebuilder:validation:Optional
	ReserveAuditlogs *bool `json:"reserveAuditlogs,omitempty" tf:"reserve_auditlogs,omitempty"`
}

// SQLAuditSpec defines the desired state of SQLAudit
type SQLAuditSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     SQLAuditParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider SQLAuditInitParameters `json:"initProvider,omitempty"`
}

// SQLAuditStatus defines the observed state of SQLAudit.
type SQLAuditStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        SQLAuditObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// SQLAudit is the Schema for the SQLAudits API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type SQLAudit struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.keepDays) || (has(self.initProvider) && has(self.initProvider.keepDays))",message="spec.forProvider.keepDays is a required parameter"
	Spec   SQLAuditSpec   `json:"spec"`
	Status SQLAuditStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// SQLAuditList contains a list of SQLAudits
type SQLAuditList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []SQLAudit `json:"items"`
}

// Repository type metadata.
var (
	SQLAudit_Kind             = "SQLAudit"
	SQLAudit_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: SQLAudit_Kind}.String()
	SQLAudit_KindAPIVersion   = SQLAudit_Kind + "." + CRDGroupVersion.String()
	SQLAudit_GroupVersionKind = CRDGroupVersion.WithKind(SQLAudit_Kind)
)

func init() {
	SchemeBuilder.Register(&SQLAudit{}, &SQLAuditList{})
}
