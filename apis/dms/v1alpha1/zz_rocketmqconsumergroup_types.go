// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RocketmqConsumerGroupInitParameters struct {

	// Specifies whether to broadcast of the consumer group.
	// Specifies whether to broadcast of the consumer group.
	Broadcast *bool `json:"broadcast,omitempty" tf:"broadcast,omitempty"`

	// Specifies the list of associated brokers of the consumer group.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the list of associated brokers of the consumer group.
	// +listType=set
	Brokers []*string `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// Specifies whether to consume orderly.
	// It's only valid when RocketMQ instance version is 5.x.
	// Specifies whether to consume orderly.
	ConsumeOrderly *bool `json:"consumeOrderly,omitempty" tf:"consume_orderly,omitempty"`

	// Specifies the description of the consumer group.
	// Specifies the description of the consumer group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the consumer group is enabled or not. Defaults to true.
	// Specifies the consumer group is enabled or not. Default to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Specifies the ID of the rocketMQ instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the consumer group.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Specifies the name of the consumer group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the maximum number of retry times.
	// The valid value is range from 1 to 16.
	// Specifies the maximum number of retry times.
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`
}

type RocketmqConsumerGroupObservation struct {

	// Specifies whether to broadcast of the consumer group.
	// Specifies whether to broadcast of the consumer group.
	Broadcast *bool `json:"broadcast,omitempty" tf:"broadcast,omitempty"`

	// Specifies the list of associated brokers of the consumer group.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the list of associated brokers of the consumer group.
	// +listType=set
	Brokers []*string `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// Specifies whether to consume orderly.
	// It's only valid when RocketMQ instance version is 5.x.
	// Specifies whether to consume orderly.
	ConsumeOrderly *bool `json:"consumeOrderly,omitempty" tf:"consume_orderly,omitempty"`

	// Specifies the description of the consumer group.
	// Specifies the description of the consumer group.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the consumer group is enabled or not. Defaults to true.
	// Specifies the consumer group is enabled or not. Default to true.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Specifies the ID of the rocketMQ instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the name of the consumer group.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Specifies the name of the consumer group.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the maximum number of retry times.
	// The valid value is range from 1 to 16.
	// Specifies the maximum number of retry times.
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`
}

type RocketmqConsumerGroupParameters struct {

	// Specifies whether to broadcast of the consumer group.
	// Specifies whether to broadcast of the consumer group.
	// +kubebuilder:validation:Optional
	Broadcast *bool `json:"broadcast,omitempty" tf:"broadcast,omitempty"`

	// Specifies the list of associated brokers of the consumer group.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the list of associated brokers of the consumer group.
	// +kubebuilder:validation:Optional
	// +listType=set
	Brokers []*string `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// Specifies whether to consume orderly.
	// It's only valid when RocketMQ instance version is 5.x.
	// Specifies whether to consume orderly.
	// +kubebuilder:validation:Optional
	ConsumeOrderly *bool `json:"consumeOrderly,omitempty" tf:"consume_orderly,omitempty"`

	// Specifies the description of the consumer group.
	// Specifies the description of the consumer group.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies the consumer group is enabled or not. Defaults to true.
	// Specifies the consumer group is enabled or not. Default to true.
	// +kubebuilder:validation:Optional
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Specifies the ID of the rocketMQ instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the consumer group.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Specifies the name of the consumer group.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the maximum number of retry times.
	// The valid value is range from 1 to 16.
	// Specifies the maximum number of retry times.
	// +kubebuilder:validation:Optional
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`
}

// RocketmqConsumerGroupSpec defines the desired state of RocketmqConsumerGroup
type RocketmqConsumerGroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RocketmqConsumerGroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RocketmqConsumerGroupInitParameters `json:"initProvider,omitempty"`
}

// RocketmqConsumerGroupStatus defines the observed state of RocketmqConsumerGroup.
type RocketmqConsumerGroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RocketmqConsumerGroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RocketmqConsumerGroup is the Schema for the RocketmqConsumerGroups API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type RocketmqConsumerGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.retryMaxTimes) || (has(self.initProvider) && has(self.initProvider.retryMaxTimes))",message="spec.forProvider.retryMaxTimes is a required parameter"
	Spec   RocketmqConsumerGroupSpec   `json:"spec"`
	Status RocketmqConsumerGroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RocketmqConsumerGroupList contains a list of RocketmqConsumerGroups
type RocketmqConsumerGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RocketmqConsumerGroup `json:"items"`
}

// Repository type metadata.
var (
	RocketmqConsumerGroup_Kind             = "RocketmqConsumerGroup"
	RocketmqConsumerGroup_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RocketmqConsumerGroup_Kind}.String()
	RocketmqConsumerGroup_KindAPIVersion   = RocketmqConsumerGroup_Kind + "." + CRDGroupVersion.String()
	RocketmqConsumerGroup_GroupVersionKind = CRDGroupVersion.WithKind(RocketmqConsumerGroup_Kind)
)

func init() {
	SchemeBuilder.Register(&RocketmqConsumerGroup{}, &RocketmqConsumerGroupList{})
}
