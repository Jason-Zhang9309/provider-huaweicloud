//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingsInitParameters) DeepCopyInto(out *BindingsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingsInitParameters.
func (in *BindingsInitParameters) DeepCopy() *BindingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(BindingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingsObservation) DeepCopyInto(out *BindingsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKey != nil {
		in, out := &in.PropertiesKey, &out.PropertiesKey
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingsObservation.
func (in *BindingsObservation) DeepCopy() *BindingsObservation {
	if in == nil {
		return nil
	}
	out := new(BindingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BindingsParameters) DeepCopyInto(out *BindingsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BindingsParameters.
func (in *BindingsParameters) DeepCopy() *BindingsParameters {
	if in == nil {
		return nil
	}
	out := new(BindingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokersInitParameters) DeepCopyInto(out *BrokersInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokersInitParameters.
func (in *BrokersInitParameters) DeepCopy() *BrokersInitParameters {
	if in == nil {
		return nil
	}
	out := new(BrokersInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokersObservation) DeepCopyInto(out *BrokersObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ReadQueueNum != nil {
		in, out := &in.ReadQueueNum, &out.ReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.WriteQueueNum != nil {
		in, out := &in.WriteQueueNum, &out.WriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokersObservation.
func (in *BrokersObservation) DeepCopy() *BrokersObservation {
	if in == nil {
		return nil
	}
	out := new(BrokersObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BrokersParameters) DeepCopyInto(out *BrokersParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BrokersParameters.
func (in *BrokersParameters) DeepCopy() *BrokersParameters {
	if in == nil {
		return nil
	}
	out := new(BrokersParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelDetailsInitParameters) DeepCopyInto(out *ChannelDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelDetailsInitParameters.
func (in *ChannelDetailsInitParameters) DeepCopy() *ChannelDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelDetailsObservation) DeepCopyInto(out *ChannelDetailsObservation) {
	*out = *in
	if in.ConnectionName != nil {
		in, out := &in.ConnectionName, &out.ConnectionName
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Number != nil {
		in, out := &in.Number, &out.Number
		*out = new(float64)
		**out = **in
	}
	if in.PeerHost != nil {
		in, out := &in.PeerHost, &out.PeerHost
		*out = new(string)
		**out = **in
	}
	if in.PeerPort != nil {
		in, out := &in.PeerPort, &out.PeerPort
		*out = new(float64)
		**out = **in
	}
	if in.User != nil {
		in, out := &in.User, &out.User
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelDetailsObservation.
func (in *ChannelDetailsObservation) DeepCopy() *ChannelDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(ChannelDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ChannelDetailsParameters) DeepCopyInto(out *ChannelDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ChannelDetailsParameters.
func (in *ChannelDetailsParameters) DeepCopy() *ChannelDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(ChannelDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigsInitParameters) DeepCopyInto(out *ConfigsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigsInitParameters.
func (in *ConfigsInitParameters) DeepCopy() *ConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigsObservation) DeepCopyInto(out *ConfigsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigsObservation.
func (in *ConfigsObservation) DeepCopy() *ConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(ConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConfigsParameters) DeepCopyInto(out *ConfigsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Value != nil {
		in, out := &in.Value, &out.Value
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConfigsParameters.
func (in *ConfigsParameters) DeepCopy() *ConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(ConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerDetailsInitParameters) DeepCopyInto(out *ConsumerDetailsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerDetailsInitParameters.
func (in *ConsumerDetailsInitParameters) DeepCopy() *ConsumerDetailsInitParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumerDetailsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerDetailsObservation) DeepCopyInto(out *ConsumerDetailsObservation) {
	*out = *in
	if in.AckRequired != nil {
		in, out := &in.AckRequired, &out.AckRequired
		*out = new(bool)
		**out = **in
	}
	if in.ChannelDetails != nil {
		in, out := &in.ChannelDetails, &out.ChannelDetails
		*out = make([]ChannelDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ConsumerTag != nil {
		in, out := &in.ConsumerTag, &out.ConsumerTag
		*out = new(string)
		**out = **in
	}
	if in.PrefetchCount != nil {
		in, out := &in.PrefetchCount, &out.PrefetchCount
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerDetailsObservation.
func (in *ConsumerDetailsObservation) DeepCopy() *ConsumerDetailsObservation {
	if in == nil {
		return nil
	}
	out := new(ConsumerDetailsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ConsumerDetailsParameters) DeepCopyInto(out *ConsumerDetailsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ConsumerDetailsParameters.
func (in *ConsumerDetailsParameters) DeepCopy() *ConsumerDetailsParameters {
	if in == nil {
		return nil
	}
	out := new(ConsumerDetailsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossVPCAccessesInitParameters) DeepCopyInto(out *CrossVPCAccessesInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossVPCAccessesInitParameters.
func (in *CrossVPCAccessesInitParameters) DeepCopy() *CrossVPCAccessesInitParameters {
	if in == nil {
		return nil
	}
	out := new(CrossVPCAccessesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossVPCAccessesObservation) DeepCopyInto(out *CrossVPCAccessesObservation) {
	*out = *in
	if in.AdvertisedIP != nil {
		in, out := &in.AdvertisedIP, &out.AdvertisedIP
		*out = new(string)
		**out = **in
	}
	if in.LisenterIP != nil {
		in, out := &in.LisenterIP, &out.LisenterIP
		*out = new(string)
		**out = **in
	}
	if in.ListenerIP != nil {
		in, out := &in.ListenerIP, &out.ListenerIP
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossVPCAccessesObservation.
func (in *CrossVPCAccessesObservation) DeepCopy() *CrossVPCAccessesObservation {
	if in == nil {
		return nil
	}
	out := new(CrossVPCAccessesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *CrossVPCAccessesParameters) DeepCopyInto(out *CrossVPCAccessesParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new CrossVPCAccessesParameters.
func (in *CrossVPCAccessesParameters) DeepCopy() *CrossVPCAccessesParameters {
	if in == nil {
		return nil
	}
	out := new(CrossVPCAccessesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExchangesInitParameters) DeepCopyInto(out *ExchangesInitParameters) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExchangesInitParameters.
func (in *ExchangesInitParameters) DeepCopy() *ExchangesInitParameters {
	if in == nil {
		return nil
	}
	out := new(ExchangesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExchangesObservation) DeepCopyInto(out *ExchangesObservation) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExchangesObservation.
func (in *ExchangesObservation) DeepCopy() *ExchangesObservation {
	if in == nil {
		return nil
	}
	out := new(ExchangesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ExchangesParameters) DeepCopyInto(out *ExchangesParameters) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ExchangesParameters.
func (in *ExchangesParameters) DeepCopy() *ExchangesParameters {
	if in == nil {
		return nil
	}
	out := new(ExchangesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPermsInitParameters) DeepCopyInto(out *GroupPermsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPermsInitParameters.
func (in *GroupPermsInitParameters) DeepCopy() *GroupPermsInitParameters {
	if in == nil {
		return nil
	}
	out := new(GroupPermsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPermsObservation) DeepCopyInto(out *GroupPermsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPermsObservation.
func (in *GroupPermsObservation) DeepCopy() *GroupPermsObservation {
	if in == nil {
		return nil
	}
	out := new(GroupPermsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GroupPermsParameters) DeepCopyInto(out *GroupPermsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GroupPermsParameters.
func (in *GroupPermsParameters) DeepCopy() *GroupPermsParameters {
	if in == nil {
		return nil
	}
	out := new(GroupPermsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueBindingsInitParameters) DeepCopyInto(out *QueueBindingsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueBindingsInitParameters.
func (in *QueueBindingsInitParameters) DeepCopy() *QueueBindingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueueBindingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueBindingsObservation) DeepCopyInto(out *QueueBindingsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKey != nil {
		in, out := &in.PropertiesKey, &out.PropertiesKey
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueBindingsObservation.
func (in *QueueBindingsObservation) DeepCopy() *QueueBindingsObservation {
	if in == nil {
		return nil
	}
	out := new(QueueBindingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueueBindingsParameters) DeepCopyInto(out *QueueBindingsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueueBindingsParameters.
func (in *QueueBindingsParameters) DeepCopy() *QueueBindingsParameters {
	if in == nil {
		return nil
	}
	out := new(QueueBindingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuesInitParameters) DeepCopyInto(out *QueuesInitParameters) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuesInitParameters.
func (in *QueuesInitParameters) DeepCopy() *QueuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(QueuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuesObservation) DeepCopyInto(out *QueuesObservation) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuesObservation.
func (in *QueuesObservation) DeepCopy() *QueuesObservation {
	if in == nil {
		return nil
	}
	out := new(QueuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *QueuesParameters) DeepCopyInto(out *QueuesParameters) {
	*out = *in
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new QueuesParameters.
func (in *QueuesParameters) DeepCopy() *QueuesParameters {
	if in == nil {
		return nil
	}
	out := new(QueuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchange) DeepCopyInto(out *RabbitmqExchange) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchange.
func (in *RabbitmqExchange) DeepCopy() *RabbitmqExchange {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchange)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqExchange) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociate) DeepCopyInto(out *RabbitmqExchangeAssociate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociate.
func (in *RabbitmqExchangeAssociate) DeepCopy() *RabbitmqExchangeAssociate {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqExchangeAssociate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateInitParameters) DeepCopyInto(out *RabbitmqExchangeAssociateInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateInitParameters.
func (in *RabbitmqExchangeAssociateInitParameters) DeepCopy() *RabbitmqExchangeAssociateInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateList) DeepCopyInto(out *RabbitmqExchangeAssociateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqExchangeAssociate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateList.
func (in *RabbitmqExchangeAssociateList) DeepCopy() *RabbitmqExchangeAssociateList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqExchangeAssociateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateObservation) DeepCopyInto(out *RabbitmqExchangeAssociateObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.PropertiesKey != nil {
		in, out := &in.PropertiesKey, &out.PropertiesKey
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateObservation.
func (in *RabbitmqExchangeAssociateObservation) DeepCopy() *RabbitmqExchangeAssociateObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateParameters) DeepCopyInto(out *RabbitmqExchangeAssociateParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.Exchange != nil {
		in, out := &in.Exchange, &out.Exchange
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateParameters.
func (in *RabbitmqExchangeAssociateParameters) DeepCopy() *RabbitmqExchangeAssociateParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateSpec) DeepCopyInto(out *RabbitmqExchangeAssociateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateSpec.
func (in *RabbitmqExchangeAssociateSpec) DeepCopy() *RabbitmqExchangeAssociateSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeAssociateStatus) DeepCopyInto(out *RabbitmqExchangeAssociateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeAssociateStatus.
func (in *RabbitmqExchangeAssociateStatus) DeepCopy() *RabbitmqExchangeAssociateStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeAssociateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeInitParameters) DeepCopyInto(out *RabbitmqExchangeInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeInitParameters.
func (in *RabbitmqExchangeInitParameters) DeepCopy() *RabbitmqExchangeInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeList) DeepCopyInto(out *RabbitmqExchangeList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqExchange, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeList.
func (in *RabbitmqExchangeList) DeepCopy() *RabbitmqExchangeList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqExchangeList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeObservation) DeepCopyInto(out *RabbitmqExchangeObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Bindings != nil {
		in, out := &in.Bindings, &out.Bindings
		*out = make([]BindingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeObservation.
func (in *RabbitmqExchangeObservation) DeepCopy() *RabbitmqExchangeObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeParameters) DeepCopyInto(out *RabbitmqExchangeParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Internal != nil {
		in, out := &in.Internal, &out.Internal
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeParameters.
func (in *RabbitmqExchangeParameters) DeepCopy() *RabbitmqExchangeParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeSpec) DeepCopyInto(out *RabbitmqExchangeSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeSpec.
func (in *RabbitmqExchangeSpec) DeepCopy() *RabbitmqExchangeSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqExchangeStatus) DeepCopyInto(out *RabbitmqExchangeStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqExchangeStatus.
func (in *RabbitmqExchangeStatus) DeepCopy() *RabbitmqExchangeStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqExchangeStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstance) DeepCopyInto(out *RabbitmqInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstance.
func (in *RabbitmqInstance) DeepCopy() *RabbitmqInstance {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceInitParameters) DeepCopyInto(out *RabbitmqInstanceInitParameters) {
	*out = *in
	if in.AccessUser != nil {
		in, out := &in.AccessUser, &out.AccessUser
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AvailableZones != nil {
		in, out := &in.AvailableZones, &out.AvailableZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.MaintainBegin != nil {
		in, out := &in.MaintainBegin, &out.MaintainBegin
		*out = new(string)
		**out = **in
	}
	if in.MaintainEnd != nil {
		in, out := &in.MaintainEnd, &out.MaintainEnd
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkIDRef != nil {
		in, out := &in.NetworkIDRef, &out.NetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkIDSelector != nil {
		in, out := &in.NetworkIDSelector, &out.NetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPIDRef != nil {
		in, out := &in.PublicIPIDRef, &out.PublicIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPIDSelector != nil {
		in, out := &in.PublicIPIDSelector, &out.PublicIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceInitParameters.
func (in *RabbitmqInstanceInitParameters) DeepCopy() *RabbitmqInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceList) DeepCopyInto(out *RabbitmqInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceList.
func (in *RabbitmqInstanceList) DeepCopy() *RabbitmqInstanceList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceObservation) DeepCopyInto(out *RabbitmqInstanceObservation) {
	*out = *in
	if in.AccessUser != nil {
		in, out := &in.AccessUser, &out.AccessUser
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AvailableZones != nil {
		in, out := &in.AvailableZones, &out.AvailableZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.ConnectAddress != nil {
		in, out := &in.ConnectAddress, &out.ConnectAddress
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicIP != nil {
		in, out := &in.EnablePublicIP, &out.EnablePublicIP
		*out = new(bool)
		**out = **in
	}
	if in.Engine != nil {
		in, out := &in.Engine, &out.Engine
		*out = new(string)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ExtendTimes != nil {
		in, out := &in.ExtendTimes, &out.ExtendTimes
		*out = new(float64)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsLogicalVolume != nil {
		in, out := &in.IsLogicalVolume, &out.IsLogicalVolume
		*out = new(bool)
		**out = **in
	}
	if in.MaintainBegin != nil {
		in, out := &in.MaintainBegin, &out.MaintainBegin
		*out = new(string)
		**out = **in
	}
	if in.MaintainEnd != nil {
		in, out := &in.MaintainEnd, &out.MaintainEnd
		*out = new(string)
		**out = **in
	}
	if in.ManagementConnectAddress != nil {
		in, out := &in.ManagementConnectAddress, &out.ManagementConnectAddress
		*out = new(string)
		**out = **in
	}
	if in.ManegementConnectAddress != nil {
		in, out := &in.ManegementConnectAddress, &out.ManegementConnectAddress
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.Port != nil {
		in, out := &in.Port, &out.Port
		*out = new(float64)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPAddress != nil {
		in, out := &in.PublicIPAddress, &out.PublicIPAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpecCode != nil {
		in, out := &in.ResourceSpecCode, &out.ResourceSpecCode
		*out = new(string)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Specification != nil {
		in, out := &in.Specification, &out.Specification
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UsedStorageSpace != nil {
		in, out := &in.UsedStorageSpace, &out.UsedStorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.UserID != nil {
		in, out := &in.UserID, &out.UserID
		*out = new(string)
		**out = **in
	}
	if in.UserName != nil {
		in, out := &in.UserName, &out.UserName
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceObservation.
func (in *RabbitmqInstanceObservation) DeepCopy() *RabbitmqInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceParameters) DeepCopyInto(out *RabbitmqInstanceParameters) {
	*out = *in
	if in.AccessUser != nil {
		in, out := &in.AccessUser, &out.AccessUser
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.AvailableZones != nil {
		in, out := &in.AvailableZones, &out.AvailableZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.MaintainBegin != nil {
		in, out := &in.MaintainBegin, &out.MaintainBegin
		*out = new(string)
		**out = **in
	}
	if in.MaintainEnd != nil {
		in, out := &in.MaintainEnd, &out.MaintainEnd
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.NetworkIDRef != nil {
		in, out := &in.NetworkIDRef, &out.NetworkIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.NetworkIDSelector != nil {
		in, out := &in.NetworkIDSelector, &out.NetworkIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.PasswordSecretRef != nil {
		in, out := &in.PasswordSecretRef, &out.PasswordSecretRef
		*out = new(v1.SecretKeySelector)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.ProductID != nil {
		in, out := &in.ProductID, &out.ProductID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPID != nil {
		in, out := &in.PublicIPID, &out.PublicIPID
		*out = new(string)
		**out = **in
	}
	if in.PublicIPIDRef != nil {
		in, out := &in.PublicIPIDRef, &out.PublicIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicIPIDSelector != nil {
		in, out := &in.PublicIPIDSelector, &out.PublicIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceParameters.
func (in *RabbitmqInstanceParameters) DeepCopy() *RabbitmqInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceSpec) DeepCopyInto(out *RabbitmqInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceSpec.
func (in *RabbitmqInstanceSpec) DeepCopy() *RabbitmqInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqInstanceStatus) DeepCopyInto(out *RabbitmqInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqInstanceStatus.
func (in *RabbitmqInstanceStatus) DeepCopy() *RabbitmqInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPlugin) DeepCopyInto(out *RabbitmqPlugin) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPlugin.
func (in *RabbitmqPlugin) DeepCopy() *RabbitmqPlugin {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPlugin)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqPlugin) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginInitParameters) DeepCopyInto(out *RabbitmqPluginInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginInitParameters.
func (in *RabbitmqPluginInitParameters) DeepCopy() *RabbitmqPluginInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginList) DeepCopyInto(out *RabbitmqPluginList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqPlugin, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginList.
func (in *RabbitmqPluginList) DeepCopy() *RabbitmqPluginList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqPluginList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginObservation) DeepCopyInto(out *RabbitmqPluginObservation) {
	*out = *in
	if in.Enable != nil {
		in, out := &in.Enable, &out.Enable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Running != nil {
		in, out := &in.Running, &out.Running
		*out = new(bool)
		**out = **in
	}
	if in.Version != nil {
		in, out := &in.Version, &out.Version
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginObservation.
func (in *RabbitmqPluginObservation) DeepCopy() *RabbitmqPluginObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginParameters) DeepCopyInto(out *RabbitmqPluginParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginParameters.
func (in *RabbitmqPluginParameters) DeepCopy() *RabbitmqPluginParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginSpec) DeepCopyInto(out *RabbitmqPluginSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginSpec.
func (in *RabbitmqPluginSpec) DeepCopy() *RabbitmqPluginSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqPluginStatus) DeepCopyInto(out *RabbitmqPluginStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqPluginStatus.
func (in *RabbitmqPluginStatus) DeepCopy() *RabbitmqPluginStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqPluginStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueue) DeepCopyInto(out *RabbitmqQueue) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueue.
func (in *RabbitmqQueue) DeepCopy() *RabbitmqQueue {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueue)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqQueue) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueInitParameters) DeepCopyInto(out *RabbitmqQueueInitParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetterExchange != nil {
		in, out := &in.DeadLetterExchange, &out.DeadLetterExchange
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterRoutingKey != nil {
		in, out := &in.DeadLetterRoutingKey, &out.DeadLetterRoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LazyMode != nil {
		in, out := &in.LazyMode, &out.LazyMode
		*out = new(string)
		**out = **in
	}
	if in.MessageTTL != nil {
		in, out := &in.MessageTTL, &out.MessageTTL
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueInitParameters.
func (in *RabbitmqQueueInitParameters) DeepCopy() *RabbitmqQueueInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueList) DeepCopyInto(out *RabbitmqQueueList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqQueue, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueList.
func (in *RabbitmqQueueList) DeepCopy() *RabbitmqQueueList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqQueueList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClear) DeepCopyInto(out *RabbitmqQueueMessageClear) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClear.
func (in *RabbitmqQueueMessageClear) DeepCopy() *RabbitmqQueueMessageClear {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClear)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqQueueMessageClear) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearInitParameters) DeepCopyInto(out *RabbitmqQueueMessageClearInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearInitParameters.
func (in *RabbitmqQueueMessageClearInitParameters) DeepCopy() *RabbitmqQueueMessageClearInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearList) DeepCopyInto(out *RabbitmqQueueMessageClearList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqQueueMessageClear, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearList.
func (in *RabbitmqQueueMessageClearList) DeepCopy() *RabbitmqQueueMessageClearList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqQueueMessageClearList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearObservation) DeepCopyInto(out *RabbitmqQueueMessageClearObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearObservation.
func (in *RabbitmqQueueMessageClearObservation) DeepCopy() *RabbitmqQueueMessageClearObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearParameters) DeepCopyInto(out *RabbitmqQueueMessageClearParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Queue != nil {
		in, out := &in.Queue, &out.Queue
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearParameters.
func (in *RabbitmqQueueMessageClearParameters) DeepCopy() *RabbitmqQueueMessageClearParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearSpec) DeepCopyInto(out *RabbitmqQueueMessageClearSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearSpec.
func (in *RabbitmqQueueMessageClearSpec) DeepCopy() *RabbitmqQueueMessageClearSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueMessageClearStatus) DeepCopyInto(out *RabbitmqQueueMessageClearStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueMessageClearStatus.
func (in *RabbitmqQueueMessageClearStatus) DeepCopy() *RabbitmqQueueMessageClearStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueMessageClearStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueObservation) DeepCopyInto(out *RabbitmqQueueObservation) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.ConsumerDetails != nil {
		in, out := &in.ConsumerDetails, &out.ConsumerDetails
		*out = make([]ConsumerDetailsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Consumers != nil {
		in, out := &in.Consumers, &out.Consumers
		*out = new(float64)
		**out = **in
	}
	if in.DeadLetterExchange != nil {
		in, out := &in.DeadLetterExchange, &out.DeadLetterExchange
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterRoutingKey != nil {
		in, out := &in.DeadLetterRoutingKey, &out.DeadLetterRoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.LazyMode != nil {
		in, out := &in.LazyMode, &out.LazyMode
		*out = new(string)
		**out = **in
	}
	if in.MessageTTL != nil {
		in, out := &in.MessageTTL, &out.MessageTTL
		*out = new(float64)
		**out = **in
	}
	if in.Messages != nil {
		in, out := &in.Messages, &out.Messages
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(string)
		**out = **in
	}
	if in.QueueBindings != nil {
		in, out := &in.QueueBindings, &out.QueueBindings
		*out = make([]QueueBindingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueObservation.
func (in *RabbitmqQueueObservation) DeepCopy() *RabbitmqQueueObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueParameters) DeepCopyInto(out *RabbitmqQueueParameters) {
	*out = *in
	if in.AutoDelete != nil {
		in, out := &in.AutoDelete, &out.AutoDelete
		*out = new(bool)
		**out = **in
	}
	if in.DeadLetterExchange != nil {
		in, out := &in.DeadLetterExchange, &out.DeadLetterExchange
		*out = new(string)
		**out = **in
	}
	if in.DeadLetterRoutingKey != nil {
		in, out := &in.DeadLetterRoutingKey, &out.DeadLetterRoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Durable != nil {
		in, out := &in.Durable, &out.Durable
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.LazyMode != nil {
		in, out := &in.LazyMode, &out.LazyMode
		*out = new(string)
		**out = **in
	}
	if in.MessageTTL != nil {
		in, out := &in.MessageTTL, &out.MessageTTL
		*out = new(float64)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueParameters.
func (in *RabbitmqQueueParameters) DeepCopy() *RabbitmqQueueParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueSpec) DeepCopyInto(out *RabbitmqQueueSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueSpec.
func (in *RabbitmqQueueSpec) DeepCopy() *RabbitmqQueueSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqQueueStatus) DeepCopyInto(out *RabbitmqQueueStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqQueueStatus.
func (in *RabbitmqQueueStatus) DeepCopy() *RabbitmqQueueStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqQueueStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUser) DeepCopyInto(out *RabbitmqUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUser.
func (in *RabbitmqUser) DeepCopy() *RabbitmqUser {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserInitParameters) DeepCopyInto(out *RabbitmqUserInitParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretKeySecretRef = in.SecretKeySecretRef
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]VhostsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserInitParameters.
func (in *RabbitmqUserInitParameters) DeepCopy() *RabbitmqUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserList) DeepCopyInto(out *RabbitmqUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserList.
func (in *RabbitmqUserList) DeepCopy() *RabbitmqUserList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserObservation) DeepCopyInto(out *RabbitmqUserObservation) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]VhostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserObservation.
func (in *RabbitmqUserObservation) DeepCopy() *RabbitmqUserObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserParameters) DeepCopyInto(out *RabbitmqUserParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	out.SecretKeySecretRef = in.SecretKeySecretRef
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]VhostsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserParameters.
func (in *RabbitmqUserParameters) DeepCopy() *RabbitmqUserParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserSpec) DeepCopyInto(out *RabbitmqUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserSpec.
func (in *RabbitmqUserSpec) DeepCopy() *RabbitmqUserSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqUserStatus) DeepCopyInto(out *RabbitmqUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqUserStatus.
func (in *RabbitmqUserStatus) DeepCopy() *RabbitmqUserStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhost) DeepCopyInto(out *RabbitmqVhost) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhost.
func (in *RabbitmqVhost) DeepCopy() *RabbitmqVhost {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhost)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqVhost) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostInitParameters) DeepCopyInto(out *RabbitmqVhostInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostInitParameters.
func (in *RabbitmqVhostInitParameters) DeepCopy() *RabbitmqVhostInitParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostList) DeepCopyInto(out *RabbitmqVhostList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RabbitmqVhost, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostList.
func (in *RabbitmqVhostList) DeepCopy() *RabbitmqVhostList {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RabbitmqVhostList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostObservation) DeepCopyInto(out *RabbitmqVhostObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tracing != nil {
		in, out := &in.Tracing, &out.Tracing
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostObservation.
func (in *RabbitmqVhostObservation) DeepCopy() *RabbitmqVhostObservation {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostParameters) DeepCopyInto(out *RabbitmqVhostParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostParameters.
func (in *RabbitmqVhostParameters) DeepCopy() *RabbitmqVhostParameters {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostSpec) DeepCopyInto(out *RabbitmqVhostSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostSpec.
func (in *RabbitmqVhostSpec) DeepCopy() *RabbitmqVhostSpec {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RabbitmqVhostStatus) DeepCopyInto(out *RabbitmqVhostStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RabbitmqVhostStatus.
func (in *RabbitmqVhostStatus) DeepCopy() *RabbitmqVhostStatus {
	if in == nil {
		return nil
	}
	out := new(RabbitmqVhostStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroup) DeepCopyInto(out *RocketmqConsumerGroup) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroup.
func (in *RocketmqConsumerGroup) DeepCopy() *RocketmqConsumerGroup {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroup)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqConsumerGroup) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupInitParameters) DeepCopyInto(out *RocketmqConsumerGroupInitParameters) {
	*out = *in
	if in.Broadcast != nil {
		in, out := &in.Broadcast, &out.Broadcast
		*out = new(bool)
		**out = **in
	}
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsumeOrderly != nil {
		in, out := &in.ConsumeOrderly, &out.ConsumeOrderly
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupInitParameters.
func (in *RocketmqConsumerGroupInitParameters) DeepCopy() *RocketmqConsumerGroupInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupList) DeepCopyInto(out *RocketmqConsumerGroupList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RocketmqConsumerGroup, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupList.
func (in *RocketmqConsumerGroupList) DeepCopy() *RocketmqConsumerGroupList {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqConsumerGroupList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupObservation) DeepCopyInto(out *RocketmqConsumerGroupObservation) {
	*out = *in
	if in.Broadcast != nil {
		in, out := &in.Broadcast, &out.Broadcast
		*out = new(bool)
		**out = **in
	}
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsumeOrderly != nil {
		in, out := &in.ConsumeOrderly, &out.ConsumeOrderly
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupObservation.
func (in *RocketmqConsumerGroupObservation) DeepCopy() *RocketmqConsumerGroupObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupParameters) DeepCopyInto(out *RocketmqConsumerGroupParameters) {
	*out = *in
	if in.Broadcast != nil {
		in, out := &in.Broadcast, &out.Broadcast
		*out = new(bool)
		**out = **in
	}
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.ConsumeOrderly != nil {
		in, out := &in.ConsumeOrderly, &out.ConsumeOrderly
		*out = new(bool)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupParameters.
func (in *RocketmqConsumerGroupParameters) DeepCopy() *RocketmqConsumerGroupParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupSpec) DeepCopyInto(out *RocketmqConsumerGroupSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupSpec.
func (in *RocketmqConsumerGroupSpec) DeepCopy() *RocketmqConsumerGroupSpec {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqConsumerGroupStatus) DeepCopyInto(out *RocketmqConsumerGroupStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqConsumerGroupStatus.
func (in *RocketmqConsumerGroupStatus) DeepCopy() *RocketmqConsumerGroupStatus {
	if in == nil {
		return nil
	}
	out := new(RocketmqConsumerGroupStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstance) DeepCopyInto(out *RocketmqInstance) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstance.
func (in *RocketmqInstance) DeepCopy() *RocketmqInstance {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstance)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqInstance) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceInitParameters) DeepCopyInto(out *RocketmqInstanceInitParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]ConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicip != nil {
		in, out := &in.EnablePublicip, &out.EnablePublicip
		*out = new(bool)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enable != nil {
		in, out := &in.IPv6Enable, &out.IPv6Enable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.PublicipIDRef != nil {
		in, out := &in.PublicipIDRef, &out.PublicipIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicipIDSelector != nil {
		in, out := &in.PublicipIDSelector, &out.PublicipIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceInitParameters.
func (in *RocketmqInstanceInitParameters) DeepCopy() *RocketmqInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceList) DeepCopyInto(out *RocketmqInstanceList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RocketmqInstance, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceList.
func (in *RocketmqInstanceList) DeepCopy() *RocketmqInstanceList {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqInstanceList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceObservation) DeepCopyInto(out *RocketmqInstanceObservation) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerAddress != nil {
		in, out := &in.BrokerAddress, &out.BrokerAddress
		*out = new(string)
		**out = **in
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]ConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.CrossVPCAccesses != nil {
		in, out := &in.CrossVPCAccesses, &out.CrossVPCAccesses
		*out = make([]CrossVPCAccessesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicip != nil {
		in, out := &in.EnablePublicip, &out.EnablePublicip
		*out = new(bool)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enable != nil {
		in, out := &in.IPv6Enable, &out.IPv6Enable
		*out = new(bool)
		**out = **in
	}
	if in.MaintainBegin != nil {
		in, out := &in.MaintainBegin, &out.MaintainBegin
		*out = new(string)
		**out = **in
	}
	if in.MaintainEnd != nil {
		in, out := &in.MaintainEnd, &out.MaintainEnd
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.NamesrvAddress != nil {
		in, out := &in.NamesrvAddress, &out.NamesrvAddress
		*out = new(string)
		**out = **in
	}
	if in.NewSpecBillingEnable != nil {
		in, out := &in.NewSpecBillingEnable, &out.NewSpecBillingEnable
		*out = new(bool)
		**out = **in
	}
	if in.NodeNum != nil {
		in, out := &in.NodeNum, &out.NodeNum
		*out = new(float64)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicBrokerAddress != nil {
		in, out := &in.PublicBrokerAddress, &out.PublicBrokerAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicNamesrvAddress != nil {
		in, out := &in.PublicNamesrvAddress, &out.PublicNamesrvAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicipAddress != nil {
		in, out := &in.PublicipAddress, &out.PublicipAddress
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ResourceSpecCode != nil {
		in, out := &in.ResourceSpecCode, &out.ResourceSpecCode
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.Specification != nil {
		in, out := &in.Specification, &out.Specification
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UsedStorageSpace != nil {
		in, out := &in.UsedStorageSpace, &out.UsedStorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceObservation.
func (in *RocketmqInstanceObservation) DeepCopy() *RocketmqInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceParameters) DeepCopyInto(out *RocketmqInstanceParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.AvailabilityZones != nil {
		in, out := &in.AvailabilityZones, &out.AvailabilityZones
		*out = make([]*string, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(string)
				**out = **in
			}
		}
	}
	if in.BrokerNum != nil {
		in, out := &in.BrokerNum, &out.BrokerNum
		*out = new(float64)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.Configs != nil {
		in, out := &in.Configs, &out.Configs
		*out = make([]ConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnableACL != nil {
		in, out := &in.EnableACL, &out.EnableACL
		*out = new(bool)
		**out = **in
	}
	if in.EnablePublicip != nil {
		in, out := &in.EnablePublicip, &out.EnablePublicip
		*out = new(bool)
		**out = **in
	}
	if in.EngineVersion != nil {
		in, out := &in.EngineVersion, &out.EngineVersion
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FlavorID != nil {
		in, out := &in.FlavorID, &out.FlavorID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Enable != nil {
		in, out := &in.IPv6Enable, &out.IPv6Enable
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.PublicipIDRef != nil {
		in, out := &in.PublicipIDRef, &out.PublicipIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicipIDSelector != nil {
		in, out := &in.PublicipIDSelector, &out.PublicipIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.RetentionPolicy != nil {
		in, out := &in.RetentionPolicy, &out.RetentionPolicy
		*out = new(bool)
		**out = **in
	}
	if in.SSLEnable != nil {
		in, out := &in.SSLEnable, &out.SSLEnable
		*out = new(bool)
		**out = **in
	}
	if in.SecurityGroupID != nil {
		in, out := &in.SecurityGroupID, &out.SecurityGroupID
		*out = new(string)
		**out = **in
	}
	if in.SecurityGroupIDRef != nil {
		in, out := &in.SecurityGroupIDRef, &out.SecurityGroupIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SecurityGroupIDSelector != nil {
		in, out := &in.SecurityGroupIDSelector, &out.SecurityGroupIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.StorageSpace != nil {
		in, out := &in.StorageSpace, &out.StorageSpace
		*out = new(float64)
		**out = **in
	}
	if in.StorageSpecCode != nil {
		in, out := &in.StorageSpecCode, &out.StorageSpecCode
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceParameters.
func (in *RocketmqInstanceParameters) DeepCopy() *RocketmqInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceSpec) DeepCopyInto(out *RocketmqInstanceSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceSpec.
func (in *RocketmqInstanceSpec) DeepCopy() *RocketmqInstanceSpec {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqInstanceStatus) DeepCopyInto(out *RocketmqInstanceStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqInstanceStatus.
func (in *RocketmqInstanceStatus) DeepCopy() *RocketmqInstanceStatus {
	if in == nil {
		return nil
	}
	out := new(RocketmqInstanceStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTask) DeepCopyInto(out *RocketmqMigrationTask) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTask.
func (in *RocketmqMigrationTask) DeepCopy() *RocketmqMigrationTask {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTask)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqMigrationTask) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskBindingsInitParameters) DeepCopyInto(out *RocketmqMigrationTaskBindingsInitParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskBindingsInitParameters.
func (in *RocketmqMigrationTaskBindingsInitParameters) DeepCopy() *RocketmqMigrationTaskBindingsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskBindingsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskBindingsObservation) DeepCopyInto(out *RocketmqMigrationTaskBindingsObservation) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskBindingsObservation.
func (in *RocketmqMigrationTaskBindingsObservation) DeepCopy() *RocketmqMigrationTaskBindingsObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskBindingsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskBindingsParameters) DeepCopyInto(out *RocketmqMigrationTaskBindingsParameters) {
	*out = *in
	if in.Destination != nil {
		in, out := &in.Destination, &out.Destination
		*out = new(string)
		**out = **in
	}
	if in.DestinationType != nil {
		in, out := &in.DestinationType, &out.DestinationType
		*out = new(string)
		**out = **in
	}
	if in.RoutingKey != nil {
		in, out := &in.RoutingKey, &out.RoutingKey
		*out = new(string)
		**out = **in
	}
	if in.Source != nil {
		in, out := &in.Source, &out.Source
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskBindingsParameters.
func (in *RocketmqMigrationTaskBindingsParameters) DeepCopy() *RocketmqMigrationTaskBindingsParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskBindingsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskInitParameters) DeepCopyInto(out *RocketmqMigrationTaskInitParameters) {
	*out = *in
	if in.Bindings != nil {
		in, out := &in.Bindings, &out.Bindings
		*out = make([]RocketmqMigrationTaskBindingsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Exchanges != nil {
		in, out := &in.Exchanges, &out.Exchanges
		*out = make([]ExchangesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(string)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]QueuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionGroups != nil {
		in, out := &in.SubscriptionGroups, &out.SubscriptionGroups
		*out = make([]SubscriptionGroupsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicConfigs != nil {
		in, out := &in.TopicConfigs, &out.TopicConfigs
		*out = make([]TopicConfigsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]RocketmqMigrationTaskVhostsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskInitParameters.
func (in *RocketmqMigrationTaskInitParameters) DeepCopy() *RocketmqMigrationTaskInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskList) DeepCopyInto(out *RocketmqMigrationTaskList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RocketmqMigrationTask, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskList.
func (in *RocketmqMigrationTaskList) DeepCopy() *RocketmqMigrationTaskList {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqMigrationTaskList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskObservation) DeepCopyInto(out *RocketmqMigrationTaskObservation) {
	*out = *in
	if in.Bindings != nil {
		in, out := &in.Bindings, &out.Bindings
		*out = make([]RocketmqMigrationTaskBindingsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Exchanges != nil {
		in, out := &in.Exchanges, &out.Exchanges
		*out = make([]ExchangesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(string)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]QueuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.StartDate != nil {
		in, out := &in.StartDate, &out.StartDate
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionGroups != nil {
		in, out := &in.SubscriptionGroups, &out.SubscriptionGroups
		*out = make([]SubscriptionGroupsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicConfigs != nil {
		in, out := &in.TopicConfigs, &out.TopicConfigs
		*out = make([]TopicConfigsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]RocketmqMigrationTaskVhostsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskObservation.
func (in *RocketmqMigrationTaskObservation) DeepCopy() *RocketmqMigrationTaskObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskParameters) DeepCopyInto(out *RocketmqMigrationTaskParameters) {
	*out = *in
	if in.Bindings != nil {
		in, out := &in.Bindings, &out.Bindings
		*out = make([]RocketmqMigrationTaskBindingsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Exchanges != nil {
		in, out := &in.Exchanges, &out.Exchanges
		*out = make([]ExchangesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Overwrite != nil {
		in, out := &in.Overwrite, &out.Overwrite
		*out = new(string)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]QueuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubscriptionGroups != nil {
		in, out := &in.SubscriptionGroups, &out.SubscriptionGroups
		*out = make([]SubscriptionGroupsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.TopicConfigs != nil {
		in, out := &in.TopicConfigs, &out.TopicConfigs
		*out = make([]TopicConfigsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.Vhosts != nil {
		in, out := &in.Vhosts, &out.Vhosts
		*out = make([]RocketmqMigrationTaskVhostsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskParameters.
func (in *RocketmqMigrationTaskParameters) DeepCopy() *RocketmqMigrationTaskParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskSpec) DeepCopyInto(out *RocketmqMigrationTaskSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskSpec.
func (in *RocketmqMigrationTaskSpec) DeepCopy() *RocketmqMigrationTaskSpec {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskStatus) DeepCopyInto(out *RocketmqMigrationTaskStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskStatus.
func (in *RocketmqMigrationTaskStatus) DeepCopy() *RocketmqMigrationTaskStatus {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskVhostsInitParameters) DeepCopyInto(out *RocketmqMigrationTaskVhostsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskVhostsInitParameters.
func (in *RocketmqMigrationTaskVhostsInitParameters) DeepCopy() *RocketmqMigrationTaskVhostsInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskVhostsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskVhostsObservation) DeepCopyInto(out *RocketmqMigrationTaskVhostsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskVhostsObservation.
func (in *RocketmqMigrationTaskVhostsObservation) DeepCopy() *RocketmqMigrationTaskVhostsObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskVhostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqMigrationTaskVhostsParameters) DeepCopyInto(out *RocketmqMigrationTaskVhostsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqMigrationTaskVhostsParameters.
func (in *RocketmqMigrationTaskVhostsParameters) DeepCopy() *RocketmqMigrationTaskVhostsParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqMigrationTaskVhostsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopic) DeepCopyInto(out *RocketmqTopic) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopic.
func (in *RocketmqTopic) DeepCopy() *RocketmqTopic {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopic)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqTopic) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicInitParameters) DeepCopyInto(out *RocketmqTopicInitParameters) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]BrokersInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MessageType != nil {
		in, out := &in.MessageType, &out.MessageType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]RocketmqTopicQueuesInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TotalReadQueueNum != nil {
		in, out := &in.TotalReadQueueNum, &out.TotalReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TotalWriteQueueNum != nil {
		in, out := &in.TotalWriteQueueNum, &out.TotalWriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicInitParameters.
func (in *RocketmqTopicInitParameters) DeepCopy() *RocketmqTopicInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicList) DeepCopyInto(out *RocketmqTopicList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RocketmqTopic, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicList.
func (in *RocketmqTopicList) DeepCopy() *RocketmqTopicList {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqTopicList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicObservation) DeepCopyInto(out *RocketmqTopicObservation) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]BrokersObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.MessageType != nil {
		in, out := &in.MessageType, &out.MessageType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]RocketmqTopicQueuesObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TotalReadQueueNum != nil {
		in, out := &in.TotalReadQueueNum, &out.TotalReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TotalWriteQueueNum != nil {
		in, out := &in.TotalWriteQueueNum, &out.TotalWriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicObservation.
func (in *RocketmqTopicObservation) DeepCopy() *RocketmqTopicObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicParameters) DeepCopyInto(out *RocketmqTopicParameters) {
	*out = *in
	if in.Brokers != nil {
		in, out := &in.Brokers, &out.Brokers
		*out = make([]BrokersParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.MessageType != nil {
		in, out := &in.MessageType, &out.MessageType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Permission != nil {
		in, out := &in.Permission, &out.Permission
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
	if in.Queues != nil {
		in, out := &in.Queues, &out.Queues
		*out = make([]RocketmqTopicQueuesParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.TotalReadQueueNum != nil {
		in, out := &in.TotalReadQueueNum, &out.TotalReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TotalWriteQueueNum != nil {
		in, out := &in.TotalWriteQueueNum, &out.TotalWriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicParameters.
func (in *RocketmqTopicParameters) DeepCopy() *RocketmqTopicParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicQueuesInitParameters) DeepCopyInto(out *RocketmqTopicQueuesInitParameters) {
	*out = *in
	if in.Broker != nil {
		in, out := &in.Broker, &out.Broker
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicQueuesInitParameters.
func (in *RocketmqTopicQueuesInitParameters) DeepCopy() *RocketmqTopicQueuesInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicQueuesInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicQueuesObservation) DeepCopyInto(out *RocketmqTopicQueuesObservation) {
	*out = *in
	if in.Broker != nil {
		in, out := &in.Broker, &out.Broker
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicQueuesObservation.
func (in *RocketmqTopicQueuesObservation) DeepCopy() *RocketmqTopicQueuesObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicQueuesObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicQueuesParameters) DeepCopyInto(out *RocketmqTopicQueuesParameters) {
	*out = *in
	if in.Broker != nil {
		in, out := &in.Broker, &out.Broker
		*out = new(string)
		**out = **in
	}
	if in.QueueNum != nil {
		in, out := &in.QueueNum, &out.QueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicQueuesParameters.
func (in *RocketmqTopicQueuesParameters) DeepCopy() *RocketmqTopicQueuesParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicQueuesParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicSpec) DeepCopyInto(out *RocketmqTopicSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicSpec.
func (in *RocketmqTopicSpec) DeepCopy() *RocketmqTopicSpec {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqTopicStatus) DeepCopyInto(out *RocketmqTopicStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqTopicStatus.
func (in *RocketmqTopicStatus) DeepCopy() *RocketmqTopicStatus {
	if in == nil {
		return nil
	}
	out := new(RocketmqTopicStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUser) DeepCopyInto(out *RocketmqUser) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUser.
func (in *RocketmqUser) DeepCopy() *RocketmqUser {
	if in == nil {
		return nil
	}
	out := new(RocketmqUser)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqUser) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserInitParameters) DeepCopyInto(out *RocketmqUserInitParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupPerm != nil {
		in, out := &in.DefaultGroupPerm, &out.DefaultGroupPerm
		*out = new(string)
		**out = **in
	}
	if in.DefaultTopicPerm != nil {
		in, out := &in.DefaultTopicPerm, &out.DefaultTopicPerm
		*out = new(string)
		**out = **in
	}
	if in.GroupPerms != nil {
		in, out := &in.GroupPerms, &out.GroupPerms
		*out = make([]GroupPermsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.TopicPerms != nil {
		in, out := &in.TopicPerms, &out.TopicPerms
		*out = make([]TopicPermsInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WhiteRemoteAddress != nil {
		in, out := &in.WhiteRemoteAddress, &out.WhiteRemoteAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserInitParameters.
func (in *RocketmqUserInitParameters) DeepCopy() *RocketmqUserInitParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserList) DeepCopyInto(out *RocketmqUserList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RocketmqUser, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserList.
func (in *RocketmqUserList) DeepCopy() *RocketmqUserList {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RocketmqUserList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserObservation) DeepCopyInto(out *RocketmqUserObservation) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupPerm != nil {
		in, out := &in.DefaultGroupPerm, &out.DefaultGroupPerm
		*out = new(string)
		**out = **in
	}
	if in.DefaultTopicPerm != nil {
		in, out := &in.DefaultTopicPerm, &out.DefaultTopicPerm
		*out = new(string)
		**out = **in
	}
	if in.GroupPerms != nil {
		in, out := &in.GroupPerms, &out.GroupPerms
		*out = make([]GroupPermsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.TopicPerms != nil {
		in, out := &in.TopicPerms, &out.TopicPerms
		*out = make([]TopicPermsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WhiteRemoteAddress != nil {
		in, out := &in.WhiteRemoteAddress, &out.WhiteRemoteAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserObservation.
func (in *RocketmqUserObservation) DeepCopy() *RocketmqUserObservation {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserParameters) DeepCopyInto(out *RocketmqUserParameters) {
	*out = *in
	if in.AccessKey != nil {
		in, out := &in.AccessKey, &out.AccessKey
		*out = new(string)
		**out = **in
	}
	if in.Admin != nil {
		in, out := &in.Admin, &out.Admin
		*out = new(bool)
		**out = **in
	}
	if in.DefaultGroupPerm != nil {
		in, out := &in.DefaultGroupPerm, &out.DefaultGroupPerm
		*out = new(string)
		**out = **in
	}
	if in.DefaultTopicPerm != nil {
		in, out := &in.DefaultTopicPerm, &out.DefaultTopicPerm
		*out = new(string)
		**out = **in
	}
	if in.GroupPerms != nil {
		in, out := &in.GroupPerms, &out.GroupPerms
		*out = make([]GroupPermsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceIDRef != nil {
		in, out := &in.InstanceIDRef, &out.InstanceIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.InstanceIDSelector != nil {
		in, out := &in.InstanceIDSelector, &out.InstanceIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SecretKey != nil {
		in, out := &in.SecretKey, &out.SecretKey
		*out = new(string)
		**out = **in
	}
	if in.TopicPerms != nil {
		in, out := &in.TopicPerms, &out.TopicPerms
		*out = make([]TopicPermsParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.WhiteRemoteAddress != nil {
		in, out := &in.WhiteRemoteAddress, &out.WhiteRemoteAddress
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserParameters.
func (in *RocketmqUserParameters) DeepCopy() *RocketmqUserParameters {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserSpec) DeepCopyInto(out *RocketmqUserSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserSpec.
func (in *RocketmqUserSpec) DeepCopy() *RocketmqUserSpec {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RocketmqUserStatus) DeepCopyInto(out *RocketmqUserStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RocketmqUserStatus.
func (in *RocketmqUserStatus) DeepCopy() *RocketmqUserStatus {
	if in == nil {
		return nil
	}
	out := new(RocketmqUserStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionGroupsInitParameters) DeepCopyInto(out *SubscriptionGroupsInitParameters) {
	*out = *in
	if in.ConsumeBroadcastEnable != nil {
		in, out := &in.ConsumeBroadcastEnable, &out.ConsumeBroadcastEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeEnable != nil {
		in, out := &in.ConsumeEnable, &out.ConsumeEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeFromMinEnable != nil {
		in, out := &in.ConsumeFromMinEnable, &out.ConsumeFromMinEnable
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.NotifyConsumeridsChangedEnable != nil {
		in, out := &in.NotifyConsumeridsChangedEnable, &out.NotifyConsumeridsChangedEnable
		*out = new(bool)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
	if in.RetryQueueNum != nil {
		in, out := &in.RetryQueueNum, &out.RetryQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.WhichBrokerWhenConsumeSlow != nil {
		in, out := &in.WhichBrokerWhenConsumeSlow, &out.WhichBrokerWhenConsumeSlow
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionGroupsInitParameters.
func (in *SubscriptionGroupsInitParameters) DeepCopy() *SubscriptionGroupsInitParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionGroupsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionGroupsObservation) DeepCopyInto(out *SubscriptionGroupsObservation) {
	*out = *in
	if in.ConsumeBroadcastEnable != nil {
		in, out := &in.ConsumeBroadcastEnable, &out.ConsumeBroadcastEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeEnable != nil {
		in, out := &in.ConsumeEnable, &out.ConsumeEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeFromMinEnable != nil {
		in, out := &in.ConsumeFromMinEnable, &out.ConsumeFromMinEnable
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.NotifyConsumeridsChangedEnable != nil {
		in, out := &in.NotifyConsumeridsChangedEnable, &out.NotifyConsumeridsChangedEnable
		*out = new(bool)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
	if in.RetryQueueNum != nil {
		in, out := &in.RetryQueueNum, &out.RetryQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.WhichBrokerWhenConsumeSlow != nil {
		in, out := &in.WhichBrokerWhenConsumeSlow, &out.WhichBrokerWhenConsumeSlow
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionGroupsObservation.
func (in *SubscriptionGroupsObservation) DeepCopy() *SubscriptionGroupsObservation {
	if in == nil {
		return nil
	}
	out := new(SubscriptionGroupsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SubscriptionGroupsParameters) DeepCopyInto(out *SubscriptionGroupsParameters) {
	*out = *in
	if in.ConsumeBroadcastEnable != nil {
		in, out := &in.ConsumeBroadcastEnable, &out.ConsumeBroadcastEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeEnable != nil {
		in, out := &in.ConsumeEnable, &out.ConsumeEnable
		*out = new(bool)
		**out = **in
	}
	if in.ConsumeFromMinEnable != nil {
		in, out := &in.ConsumeFromMinEnable, &out.ConsumeFromMinEnable
		*out = new(bool)
		**out = **in
	}
	if in.GroupName != nil {
		in, out := &in.GroupName, &out.GroupName
		*out = new(string)
		**out = **in
	}
	if in.NotifyConsumeridsChangedEnable != nil {
		in, out := &in.NotifyConsumeridsChangedEnable, &out.NotifyConsumeridsChangedEnable
		*out = new(bool)
		**out = **in
	}
	if in.RetryMaxTimes != nil {
		in, out := &in.RetryMaxTimes, &out.RetryMaxTimes
		*out = new(float64)
		**out = **in
	}
	if in.RetryQueueNum != nil {
		in, out := &in.RetryQueueNum, &out.RetryQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.WhichBrokerWhenConsumeSlow != nil {
		in, out := &in.WhichBrokerWhenConsumeSlow, &out.WhichBrokerWhenConsumeSlow
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SubscriptionGroupsParameters.
func (in *SubscriptionGroupsParameters) DeepCopy() *SubscriptionGroupsParameters {
	if in == nil {
		return nil
	}
	out := new(SubscriptionGroupsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicConfigsInitParameters) DeepCopyInto(out *TopicConfigsInitParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(bool)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(float64)
		**out = **in
	}
	if in.ReadQueueNum != nil {
		in, out := &in.ReadQueueNum, &out.ReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TopicFilterType != nil {
		in, out := &in.TopicFilterType, &out.TopicFilterType
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicSysFlag != nil {
		in, out := &in.TopicSysFlag, &out.TopicSysFlag
		*out = new(float64)
		**out = **in
	}
	if in.WriteQueueNum != nil {
		in, out := &in.WriteQueueNum, &out.WriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicConfigsInitParameters.
func (in *TopicConfigsInitParameters) DeepCopy() *TopicConfigsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicConfigsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicConfigsObservation) DeepCopyInto(out *TopicConfigsObservation) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(bool)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(float64)
		**out = **in
	}
	if in.ReadQueueNum != nil {
		in, out := &in.ReadQueueNum, &out.ReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TopicFilterType != nil {
		in, out := &in.TopicFilterType, &out.TopicFilterType
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicSysFlag != nil {
		in, out := &in.TopicSysFlag, &out.TopicSysFlag
		*out = new(float64)
		**out = **in
	}
	if in.WriteQueueNum != nil {
		in, out := &in.WriteQueueNum, &out.WriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicConfigsObservation.
func (in *TopicConfigsObservation) DeepCopy() *TopicConfigsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicConfigsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicConfigsParameters) DeepCopyInto(out *TopicConfigsParameters) {
	*out = *in
	if in.Order != nil {
		in, out := &in.Order, &out.Order
		*out = new(bool)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(float64)
		**out = **in
	}
	if in.ReadQueueNum != nil {
		in, out := &in.ReadQueueNum, &out.ReadQueueNum
		*out = new(float64)
		**out = **in
	}
	if in.TopicFilterType != nil {
		in, out := &in.TopicFilterType, &out.TopicFilterType
		*out = new(string)
		**out = **in
	}
	if in.TopicName != nil {
		in, out := &in.TopicName, &out.TopicName
		*out = new(string)
		**out = **in
	}
	if in.TopicSysFlag != nil {
		in, out := &in.TopicSysFlag, &out.TopicSysFlag
		*out = new(float64)
		**out = **in
	}
	if in.WriteQueueNum != nil {
		in, out := &in.WriteQueueNum, &out.WriteQueueNum
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicConfigsParameters.
func (in *TopicConfigsParameters) DeepCopy() *TopicConfigsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicConfigsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicPermsInitParameters) DeepCopyInto(out *TopicPermsInitParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicPermsInitParameters.
func (in *TopicPermsInitParameters) DeepCopy() *TopicPermsInitParameters {
	if in == nil {
		return nil
	}
	out := new(TopicPermsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicPermsObservation) DeepCopyInto(out *TopicPermsObservation) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicPermsObservation.
func (in *TopicPermsObservation) DeepCopy() *TopicPermsObservation {
	if in == nil {
		return nil
	}
	out := new(TopicPermsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TopicPermsParameters) DeepCopyInto(out *TopicPermsParameters) {
	*out = *in
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Perm != nil {
		in, out := &in.Perm, &out.Perm
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TopicPermsParameters.
func (in *TopicPermsParameters) DeepCopy() *TopicPermsParameters {
	if in == nil {
		return nil
	}
	out := new(TopicPermsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhostsInitParameters) DeepCopyInto(out *VhostsInitParameters) {
	*out = *in
	if in.Conf != nil {
		in, out := &in.Conf, &out.Conf
		*out = new(string)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhostsInitParameters.
func (in *VhostsInitParameters) DeepCopy() *VhostsInitParameters {
	if in == nil {
		return nil
	}
	out := new(VhostsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhostsObservation) DeepCopyInto(out *VhostsObservation) {
	*out = *in
	if in.Conf != nil {
		in, out := &in.Conf, &out.Conf
		*out = new(string)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhostsObservation.
func (in *VhostsObservation) DeepCopy() *VhostsObservation {
	if in == nil {
		return nil
	}
	out := new(VhostsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VhostsParameters) DeepCopyInto(out *VhostsParameters) {
	*out = *in
	if in.Conf != nil {
		in, out := &in.Conf, &out.Conf
		*out = new(string)
		**out = **in
	}
	if in.Read != nil {
		in, out := &in.Read, &out.Read
		*out = new(string)
		**out = **in
	}
	if in.Vhost != nil {
		in, out := &in.Vhost, &out.Vhost
		*out = new(string)
		**out = **in
	}
	if in.Write != nil {
		in, out := &in.Write, &out.Write
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VhostsParameters.
func (in *VhostsParameters) DeepCopy() *VhostsParameters {
	if in == nil {
		return nil
	}
	out := new(VhostsParameters)
	in.DeepCopyInto(out)
	return out
}
