// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type RabbitmqQueueMessageClearInitParameters struct {

	// Specifies the DMS RabbitMQ instance ID.
	// Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RabbitmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RabbitmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RabbitmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the queue name.
	// Changing this creates a new resource.
	Queue *string `json:"queue,omitempty" tf:"queue,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the vhost name.
	// Changing this creates a new resource.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RabbitmqQueueMessageClearObservation struct {

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the DMS RabbitMQ instance ID.
	// Changing this creates a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the queue name.
	// Changing this creates a new resource.
	Queue *string `json:"queue,omitempty" tf:"queue,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the vhost name.
	// Changing this creates a new resource.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RabbitmqQueueMessageClearParameters struct {

	// Specifies the DMS RabbitMQ instance ID.
	// Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RabbitmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RabbitmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RabbitmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the queue name.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Queue *string `json:"queue,omitempty" tf:"queue,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the vhost name.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

// RabbitmqQueueMessageClearSpec defines the desired state of RabbitmqQueueMessageClear
type RabbitmqQueueMessageClearSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RabbitmqQueueMessageClearParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RabbitmqQueueMessageClearInitParameters `json:"initProvider,omitempty"`
}

// RabbitmqQueueMessageClearStatus defines the observed state of RabbitmqQueueMessageClear.
type RabbitmqQueueMessageClearStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RabbitmqQueueMessageClearObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RabbitmqQueueMessageClear is the Schema for the RabbitmqQueueMessageClears API. Manages a DMS RabbitMQ queue message clear resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type RabbitmqQueueMessageClear struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.queue) || (has(self.initProvider) && has(self.initProvider.queue))",message="spec.forProvider.queue is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.vhost) || (has(self.initProvider) && has(self.initProvider.vhost))",message="spec.forProvider.vhost is a required parameter"
	Spec   RabbitmqQueueMessageClearSpec   `json:"spec"`
	Status RabbitmqQueueMessageClearStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RabbitmqQueueMessageClearList contains a list of RabbitmqQueueMessageClears
type RabbitmqQueueMessageClearList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RabbitmqQueueMessageClear `json:"items"`
}

// Repository type metadata.
var (
	RabbitmqQueueMessageClear_Kind             = "RabbitmqQueueMessageClear"
	RabbitmqQueueMessageClear_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RabbitmqQueueMessageClear_Kind}.String()
	RabbitmqQueueMessageClear_KindAPIVersion   = RabbitmqQueueMessageClear_Kind + "." + CRDGroupVersion.String()
	RabbitmqQueueMessageClear_GroupVersionKind = CRDGroupVersion.WithKind(RabbitmqQueueMessageClear_Kind)
)

func init() {
	SchemeBuilder.Register(&RabbitmqQueueMessageClear{}, &RabbitmqQueueMessageClearList{})
}
