// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type ExchangesInitParameters struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the switch name. Changing this creates a new resource.
	// Specifies the switch name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the exchange type. Changing this creates a new resource.
	// Specifies the exchange type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type ExchangesObservation struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the switch name. Changing this creates a new resource.
	// Specifies the switch name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the exchange type. Changing this creates a new resource.
	// Specifies the exchange type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type ExchangesParameters struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	// +kubebuilder:validation:Optional
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the switch name. Changing this creates a new resource.
	// Specifies the switch name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the exchange type. Changing this creates a new resource.
	// Specifies the exchange type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	// +kubebuilder:validation:Optional
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type QueuesInitParameters struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the queue name. Changing this creates a new resource.
	// Specifies the queue name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type QueuesObservation struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the queue name. Changing this creates a new resource.
	// Specifies the queue name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type QueuesParameters struct {

	// Specifies whether to enable data persistence.
	// Changing this creates a new resource.
	// Specifies whether to enable data persistence.
	// +kubebuilder:validation:Optional
	Durable *bool `json:"durable,omitempty" tf:"durable,omitempty"`

	// Specifies the queue name. Changing this creates a new resource.
	// Specifies the queue name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	// +kubebuilder:validation:Optional
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RocketmqMigrationTaskBindingsInitParameters struct {

	// Specifies the message target. Changing this creates a new resource.
	// Specifies the message target.
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the message target type.
	// Changing this creates a new resource.
	// Specifies the message target type.
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// Specifies the routing key. Changing this creates a new resource.
	// Specifies the routing key.
	RoutingKey *string `json:"routingKey,omitempty" tf:"routing_key,omitempty"`

	// Specifies the message source. Changing this creates a new resource.
	// Specifies the message source.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RocketmqMigrationTaskBindingsObservation struct {

	// Specifies the message target. Changing this creates a new resource.
	// Specifies the message target.
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the message target type.
	// Changing this creates a new resource.
	// Specifies the message target type.
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// Specifies the routing key. Changing this creates a new resource.
	// Specifies the routing key.
	RoutingKey *string `json:"routingKey,omitempty" tf:"routing_key,omitempty"`

	// Specifies the message source. Changing this creates a new resource.
	// Specifies the message source.
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RocketmqMigrationTaskBindingsParameters struct {

	// Specifies the message target. Changing this creates a new resource.
	// Specifies the message target.
	// +kubebuilder:validation:Optional
	Destination *string `json:"destination,omitempty" tf:"destination,omitempty"`

	// Specifies the message target type.
	// Changing this creates a new resource.
	// Specifies the message target type.
	// +kubebuilder:validation:Optional
	DestinationType *string `json:"destinationType,omitempty" tf:"destination_type,omitempty"`

	// Specifies the routing key. Changing this creates a new resource.
	// Specifies the routing key.
	// +kubebuilder:validation:Optional
	RoutingKey *string `json:"routingKey,omitempty" tf:"routing_key,omitempty"`

	// Specifies the message source. Changing this creates a new resource.
	// Specifies the message source.
	// +kubebuilder:validation:Optional
	Source *string `json:"source,omitempty" tf:"source,omitempty"`

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	// +kubebuilder:validation:Optional
	Vhost *string `json:"vhost,omitempty" tf:"vhost,omitempty"`
}

type RocketmqMigrationTaskInitParameters struct {

	// Specifies the binding metadata.
	// The bindings structure is documented below.
	// Changing this creates a new resource.
	// Specifies the binding metadata.
	Bindings []RocketmqMigrationTaskBindingsInitParameters `json:"bindings,omitempty" tf:"bindings,omitempty"`

	// Specifies the exchange metadata.
	// The exchanges structure is documented below.
	// Changing this creates a new resource.
	// Specifies the exchange metadata.
	Exchanges []ExchangesInitParameters `json:"exchanges,omitempty" tf:"exchanges,omitempty"`

	// Specifies the ID of the RocketMQ instance.
	// Changing this creates a new resource.
	// Specifies the ID of the RocketMQ instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the migration task.
	// Changing this creates a new resource.
	// Specifies the name of the migration task.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to overwrite configurations with the same name.
	// Value options:
	// Specifies whether to overwrite configurations with the same name.
	Overwrite *string `json:"overwrite,omitempty" tf:"overwrite,omitempty"`

	// Specifies the queue metadata.
	// The queues structure is documented below.
	// Changing this creates a new resource.
	// Specifies the queue metadata.
	Queues []QueuesInitParameters `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the consumer group metadata.
	// The subscription_groups structure is documented below.
	// Changing this creates a new resource.
	// Specifies the consumer group metadata.
	SubscriptionGroups []SubscriptionGroupsInitParameters `json:"subscriptionGroups,omitempty" tf:"subscription_groups,omitempty"`

	// Specifies the topic metadata.
	// The topic_configs structure is documented below.
	// Changing this creates a new resource.
	// Specifies the topic metadata.
	TopicConfigs []TopicConfigsInitParameters `json:"topicConfigs,omitempty" tf:"topic_configs,omitempty"`

	// Specifies the migration task type.
	// Value options: rocketmq or rabbitToRocket. Changing this creates a new resource.
	// Specifies the migration task type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual hosts metadata.
	// The vhosts structure is documented below.
	// Changing this creates a new resource.
	// Specifies the virtual hosts metadata.
	Vhosts []RocketmqMigrationTaskVhostsInitParameters `json:"vhosts,omitempty" tf:"vhosts,omitempty"`
}

type RocketmqMigrationTaskObservation struct {

	// Specifies the binding metadata.
	// The bindings structure is documented below.
	// Changing this creates a new resource.
	// Specifies the binding metadata.
	Bindings []RocketmqMigrationTaskBindingsObservation `json:"bindings,omitempty" tf:"bindings,omitempty"`

	// Specifies the exchange metadata.
	// The exchanges structure is documented below.
	// Changing this creates a new resource.
	// Specifies the exchange metadata.
	Exchanges []ExchangesObservation `json:"exchanges,omitempty" tf:"exchanges,omitempty"`

	// The resource ID. The value is the RocketMQ migration task ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the RocketMQ instance.
	// Changing this creates a new resource.
	// Specifies the ID of the RocketMQ instance.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the name of the migration task.
	// Changing this creates a new resource.
	// Specifies the name of the migration task.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to overwrite configurations with the same name.
	// Value options:
	// Specifies whether to overwrite configurations with the same name.
	Overwrite *string `json:"overwrite,omitempty" tf:"overwrite,omitempty"`

	// Specifies the queue metadata.
	// The queues structure is documented below.
	// Changing this creates a new resource.
	// Specifies the queue metadata.
	Queues []QueuesObservation `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Indicates the start time of the migration task.
	// Indicates the start time of the migration task.
	StartDate *string `json:"startDate,omitempty" tf:"start_date,omitempty"`

	// Indicates the status of the migration task. The value can be finished or failed*.
	// Indicates the status of the migration task.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Specifies the consumer group metadata.
	// The subscription_groups structure is documented below.
	// Changing this creates a new resource.
	// Specifies the consumer group metadata.
	SubscriptionGroups []SubscriptionGroupsObservation `json:"subscriptionGroups,omitempty" tf:"subscription_groups,omitempty"`

	// Specifies the topic metadata.
	// The topic_configs structure is documented below.
	// Changing this creates a new resource.
	// Specifies the topic metadata.
	TopicConfigs []TopicConfigsObservation `json:"topicConfigs,omitempty" tf:"topic_configs,omitempty"`

	// Specifies the migration task type.
	// Value options: rocketmq or rabbitToRocket. Changing this creates a new resource.
	// Specifies the migration task type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual hosts metadata.
	// The vhosts structure is documented below.
	// Changing this creates a new resource.
	// Specifies the virtual hosts metadata.
	Vhosts []RocketmqMigrationTaskVhostsObservation `json:"vhosts,omitempty" tf:"vhosts,omitempty"`
}

type RocketmqMigrationTaskParameters struct {

	// Specifies the binding metadata.
	// The bindings structure is documented below.
	// Changing this creates a new resource.
	// Specifies the binding metadata.
	// +kubebuilder:validation:Optional
	Bindings []RocketmqMigrationTaskBindingsParameters `json:"bindings,omitempty" tf:"bindings,omitempty"`

	// Specifies the exchange metadata.
	// The exchanges structure is documented below.
	// Changing this creates a new resource.
	// Specifies the exchange metadata.
	// +kubebuilder:validation:Optional
	Exchanges []ExchangesParameters `json:"exchanges,omitempty" tf:"exchanges,omitempty"`

	// Specifies the ID of the RocketMQ instance.
	// Changing this creates a new resource.
	// Specifies the ID of the RocketMQ instance.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the name of the migration task.
	// Changing this creates a new resource.
	// Specifies the name of the migration task.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies whether to overwrite configurations with the same name.
	// Value options:
	// Specifies whether to overwrite configurations with the same name.
	// +kubebuilder:validation:Optional
	Overwrite *string `json:"overwrite,omitempty" tf:"overwrite,omitempty"`

	// Specifies the queue metadata.
	// The queues structure is documented below.
	// Changing this creates a new resource.
	// Specifies the queue metadata.
	// +kubebuilder:validation:Optional
	Queues []QueuesParameters `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the consumer group metadata.
	// The subscription_groups structure is documented below.
	// Changing this creates a new resource.
	// Specifies the consumer group metadata.
	// +kubebuilder:validation:Optional
	SubscriptionGroups []SubscriptionGroupsParameters `json:"subscriptionGroups,omitempty" tf:"subscription_groups,omitempty"`

	// Specifies the topic metadata.
	// The topic_configs structure is documented below.
	// Changing this creates a new resource.
	// Specifies the topic metadata.
	// +kubebuilder:validation:Optional
	TopicConfigs []TopicConfigsParameters `json:"topicConfigs,omitempty" tf:"topic_configs,omitempty"`

	// Specifies the migration task type.
	// Value options: rocketmq or rabbitToRocket. Changing this creates a new resource.
	// Specifies the migration task type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Specifies the virtual hosts metadata.
	// The vhosts structure is documented below.
	// Changing this creates a new resource.
	// Specifies the virtual hosts metadata.
	// +kubebuilder:validation:Optional
	Vhosts []RocketmqMigrationTaskVhostsParameters `json:"vhosts,omitempty" tf:"vhosts,omitempty"`
}

type RocketmqMigrationTaskVhostsInitParameters struct {

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RocketmqMigrationTaskVhostsObservation struct {

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RocketmqMigrationTaskVhostsParameters struct {

	// Specifies the virtual host name. Changing this creates a new resource.
	// Specifies the virtual host name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type SubscriptionGroupsInitParameters struct {

	// Specifies whether to enable broadcast.
	// Changing this creates a new resource.
	// Specifies whether to enable broadcast.
	ConsumeBroadcastEnable *bool `json:"consumeBroadcastEnable,omitempty" tf:"consume_broadcast_enable,omitempty"`

	// Specifies whether to enable consumption.
	// Changing this creates a new resource.
	// Specifies whether to enable consumption.
	ConsumeEnable *bool `json:"consumeEnable,omitempty" tf:"consume_enable,omitempty"`

	// Specifies whether to enable consumption from the earliest
	// offset. Changing this creates a new resource.
	// Specifies whether to enable consumption from the earliest offset.
	ConsumeFromMinEnable *bool `json:"consumeFromMinEnable,omitempty" tf:"consume_from_min_enable,omitempty"`

	// Specifies the name of a consumer group.
	// Changing this creates a new resource.
	// Specifies the name of a consumer group.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Specifies whether to notify changes of consumer IDs.
	// Changing this creates a new resource.
	// Specifies whether to notify changes of consumer IDs.
	NotifyConsumeridsChangedEnable *bool `json:"notifyConsumeridsChangedEnable,omitempty" tf:"notify_consumerids_changed_enable,omitempty"`

	// Specifies the maximum number of consumption retries.
	// Changing this creates a new resource.
	// Specifies the maximum number of consumption retries.
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`

	// Specifies the number of retry queues.
	// Changing this creates a new resource.
	// Specifies the number of retry queues.
	RetryQueueNum *float64 `json:"retryQueueNum,omitempty" tf:"retry_queue_num,omitempty"`

	// Specifies the ID of the broker selected for slow
	// consumption. Changing this creates a new resource.
	// Specifies the ID of the broker selected for slow consumption.
	WhichBrokerWhenConsumeSlow *float64 `json:"whichBrokerWhenConsumeSlow,omitempty" tf:"which_broker_when_consume_slow,omitempty"`
}

type SubscriptionGroupsObservation struct {

	// Specifies whether to enable broadcast.
	// Changing this creates a new resource.
	// Specifies whether to enable broadcast.
	ConsumeBroadcastEnable *bool `json:"consumeBroadcastEnable,omitempty" tf:"consume_broadcast_enable,omitempty"`

	// Specifies whether to enable consumption.
	// Changing this creates a new resource.
	// Specifies whether to enable consumption.
	ConsumeEnable *bool `json:"consumeEnable,omitempty" tf:"consume_enable,omitempty"`

	// Specifies whether to enable consumption from the earliest
	// offset. Changing this creates a new resource.
	// Specifies whether to enable consumption from the earliest offset.
	ConsumeFromMinEnable *bool `json:"consumeFromMinEnable,omitempty" tf:"consume_from_min_enable,omitempty"`

	// Specifies the name of a consumer group.
	// Changing this creates a new resource.
	// Specifies the name of a consumer group.
	GroupName *string `json:"groupName,omitempty" tf:"group_name,omitempty"`

	// Specifies whether to notify changes of consumer IDs.
	// Changing this creates a new resource.
	// Specifies whether to notify changes of consumer IDs.
	NotifyConsumeridsChangedEnable *bool `json:"notifyConsumeridsChangedEnable,omitempty" tf:"notify_consumerids_changed_enable,omitempty"`

	// Specifies the maximum number of consumption retries.
	// Changing this creates a new resource.
	// Specifies the maximum number of consumption retries.
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`

	// Specifies the number of retry queues.
	// Changing this creates a new resource.
	// Specifies the number of retry queues.
	RetryQueueNum *float64 `json:"retryQueueNum,omitempty" tf:"retry_queue_num,omitempty"`

	// Specifies the ID of the broker selected for slow
	// consumption. Changing this creates a new resource.
	// Specifies the ID of the broker selected for slow consumption.
	WhichBrokerWhenConsumeSlow *float64 `json:"whichBrokerWhenConsumeSlow,omitempty" tf:"which_broker_when_consume_slow,omitempty"`
}

type SubscriptionGroupsParameters struct {

	// Specifies whether to enable broadcast.
	// Changing this creates a new resource.
	// Specifies whether to enable broadcast.
	// +kubebuilder:validation:Optional
	ConsumeBroadcastEnable *bool `json:"consumeBroadcastEnable,omitempty" tf:"consume_broadcast_enable,omitempty"`

	// Specifies whether to enable consumption.
	// Changing this creates a new resource.
	// Specifies whether to enable consumption.
	// +kubebuilder:validation:Optional
	ConsumeEnable *bool `json:"consumeEnable,omitempty" tf:"consume_enable,omitempty"`

	// Specifies whether to enable consumption from the earliest
	// offset. Changing this creates a new resource.
	// Specifies whether to enable consumption from the earliest offset.
	// +kubebuilder:validation:Optional
	ConsumeFromMinEnable *bool `json:"consumeFromMinEnable,omitempty" tf:"consume_from_min_enable,omitempty"`

	// Specifies the name of a consumer group.
	// Changing this creates a new resource.
	// Specifies the name of a consumer group.
	// +kubebuilder:validation:Optional
	GroupName *string `json:"groupName" tf:"group_name,omitempty"`

	// Specifies whether to notify changes of consumer IDs.
	// Changing this creates a new resource.
	// Specifies whether to notify changes of consumer IDs.
	// +kubebuilder:validation:Optional
	NotifyConsumeridsChangedEnable *bool `json:"notifyConsumeridsChangedEnable,omitempty" tf:"notify_consumerids_changed_enable,omitempty"`

	// Specifies the maximum number of consumption retries.
	// Changing this creates a new resource.
	// Specifies the maximum number of consumption retries.
	// +kubebuilder:validation:Optional
	RetryMaxTimes *float64 `json:"retryMaxTimes,omitempty" tf:"retry_max_times,omitempty"`

	// Specifies the number of retry queues.
	// Changing this creates a new resource.
	// Specifies the number of retry queues.
	// +kubebuilder:validation:Optional
	RetryQueueNum *float64 `json:"retryQueueNum,omitempty" tf:"retry_queue_num,omitempty"`

	// Specifies the ID of the broker selected for slow
	// consumption. Changing this creates a new resource.
	// Specifies the ID of the broker selected for slow consumption.
	// +kubebuilder:validation:Optional
	WhichBrokerWhenConsumeSlow *float64 `json:"whichBrokerWhenConsumeSlow,omitempty" tf:"which_broker_when_consume_slow,omitempty"`
}

type TopicConfigsInitParameters struct {

	// Specifies whether a message is an ordered message.
	// Changing this creates a new resource.
	// Specifies whether a message is an ordered message.
	Order *bool `json:"order,omitempty" tf:"order,omitempty"`

	// Specifies the number of permission. Changing this creates a new resource.
	// Specifies the number of permission.
	Perm *float64 `json:"perm,omitempty" tf:"perm,omitempty"`

	// Specifies the number of read queues.
	// Changing this creates a new resource.
	// Specifies the number of read queues.
	ReadQueueNum *float64 `json:"readQueueNum,omitempty" tf:"read_queue_num,omitempty"`

	// Specifies the filter type of a topic.
	// Value options: SINGLE_TAG, MULTI_TAG. Changing this creates a new resource.
	// Specifies the filter type of a topic.
	TopicFilterType *string `json:"topicFilterType,omitempty" tf:"topic_filter_type,omitempty"`

	// Specifies the topic name. Changing this creates a new resource.
	// Specifies the topic name.
	TopicName *string `json:"topicName,omitempty" tf:"topic_name,omitempty"`

	// Specifies the system flag of a topic.
	// Changing this creates a new resource.
	// Specifies the system flag of a topic.
	TopicSysFlag *float64 `json:"topicSysFlag,omitempty" tf:"topic_sys_flag,omitempty"`

	// Specifies the number of write queues.
	// Changing this creates a new resource.
	// Specifies the number of write queues.
	WriteQueueNum *float64 `json:"writeQueueNum,omitempty" tf:"write_queue_num,omitempty"`
}

type TopicConfigsObservation struct {

	// Specifies whether a message is an ordered message.
	// Changing this creates a new resource.
	// Specifies whether a message is an ordered message.
	Order *bool `json:"order,omitempty" tf:"order,omitempty"`

	// Specifies the number of permission. Changing this creates a new resource.
	// Specifies the number of permission.
	Perm *float64 `json:"perm,omitempty" tf:"perm,omitempty"`

	// Specifies the number of read queues.
	// Changing this creates a new resource.
	// Specifies the number of read queues.
	ReadQueueNum *float64 `json:"readQueueNum,omitempty" tf:"read_queue_num,omitempty"`

	// Specifies the filter type of a topic.
	// Value options: SINGLE_TAG, MULTI_TAG. Changing this creates a new resource.
	// Specifies the filter type of a topic.
	TopicFilterType *string `json:"topicFilterType,omitempty" tf:"topic_filter_type,omitempty"`

	// Specifies the topic name. Changing this creates a new resource.
	// Specifies the topic name.
	TopicName *string `json:"topicName,omitempty" tf:"topic_name,omitempty"`

	// Specifies the system flag of a topic.
	// Changing this creates a new resource.
	// Specifies the system flag of a topic.
	TopicSysFlag *float64 `json:"topicSysFlag,omitempty" tf:"topic_sys_flag,omitempty"`

	// Specifies the number of write queues.
	// Changing this creates a new resource.
	// Specifies the number of write queues.
	WriteQueueNum *float64 `json:"writeQueueNum,omitempty" tf:"write_queue_num,omitempty"`
}

type TopicConfigsParameters struct {

	// Specifies whether a message is an ordered message.
	// Changing this creates a new resource.
	// Specifies whether a message is an ordered message.
	// +kubebuilder:validation:Optional
	Order *bool `json:"order,omitempty" tf:"order,omitempty"`

	// Specifies the number of permission. Changing this creates a new resource.
	// Specifies the number of permission.
	// +kubebuilder:validation:Optional
	Perm *float64 `json:"perm,omitempty" tf:"perm,omitempty"`

	// Specifies the number of read queues.
	// Changing this creates a new resource.
	// Specifies the number of read queues.
	// +kubebuilder:validation:Optional
	ReadQueueNum *float64 `json:"readQueueNum,omitempty" tf:"read_queue_num,omitempty"`

	// Specifies the filter type of a topic.
	// Value options: SINGLE_TAG, MULTI_TAG. Changing this creates a new resource.
	// Specifies the filter type of a topic.
	// +kubebuilder:validation:Optional
	TopicFilterType *string `json:"topicFilterType,omitempty" tf:"topic_filter_type,omitempty"`

	// Specifies the topic name. Changing this creates a new resource.
	// Specifies the topic name.
	// +kubebuilder:validation:Optional
	TopicName *string `json:"topicName" tf:"topic_name,omitempty"`

	// Specifies the system flag of a topic.
	// Changing this creates a new resource.
	// Specifies the system flag of a topic.
	// +kubebuilder:validation:Optional
	TopicSysFlag *float64 `json:"topicSysFlag,omitempty" tf:"topic_sys_flag,omitempty"`

	// Specifies the number of write queues.
	// Changing this creates a new resource.
	// Specifies the number of write queues.
	// +kubebuilder:validation:Optional
	WriteQueueNum *float64 `json:"writeQueueNum,omitempty" tf:"write_queue_num,omitempty"`
}

// RocketmqMigrationTaskSpec defines the desired state of RocketmqMigrationTask
type RocketmqMigrationTaskSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RocketmqMigrationTaskParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RocketmqMigrationTaskInitParameters `json:"initProvider,omitempty"`
}

// RocketmqMigrationTaskStatus defines the observed state of RocketmqMigrationTask.
type RocketmqMigrationTaskStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RocketmqMigrationTaskObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RocketmqMigrationTask is the Schema for the RocketmqMigrationTasks API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type RocketmqMigrationTask struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.overwrite) || (has(self.initProvider) && has(self.initProvider.overwrite))",message="spec.forProvider.overwrite is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.type) || (has(self.initProvider) && has(self.initProvider.type))",message="spec.forProvider.type is a required parameter"
	Spec   RocketmqMigrationTaskSpec   `json:"spec"`
	Status RocketmqMigrationTaskStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RocketmqMigrationTaskList contains a list of RocketmqMigrationTasks
type RocketmqMigrationTaskList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RocketmqMigrationTask `json:"items"`
}

// Repository type metadata.
var (
	RocketmqMigrationTask_Kind             = "RocketmqMigrationTask"
	RocketmqMigrationTask_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RocketmqMigrationTask_Kind}.String()
	RocketmqMigrationTask_KindAPIVersion   = RocketmqMigrationTask_Kind + "." + CRDGroupVersion.String()
	RocketmqMigrationTask_GroupVersionKind = CRDGroupVersion.WithKind(RocketmqMigrationTask_Kind)
)

func init() {
	SchemeBuilder.Register(&RocketmqMigrationTask{}, &RocketmqMigrationTaskList{})
}
