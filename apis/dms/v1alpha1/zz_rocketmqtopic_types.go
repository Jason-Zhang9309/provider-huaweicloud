// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type BrokersInitParameters struct {

	// Specifies the name of the broker.
	// Indicates the name of the broker.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type BrokersObservation struct {

	// Specifies the name of the broker.
	// Indicates the name of the broker.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Indicates the read queues number of the broker. It's useless when create a topic.
	// Indicates the read queues number of the broker.
	ReadQueueNum *float64 `json:"readQueueNum,omitempty" tf:"read_queue_num,omitempty"`

	// Indicates the read queues number of the broker. It's useless when create a topic.
	// Indicates the read queues number of the broker.
	WriteQueueNum *float64 `json:"writeQueueNum,omitempty" tf:"write_queue_num,omitempty"`
}

type BrokersParameters struct {

	// Specifies the name of the broker.
	// Indicates the name of the broker.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`
}

type RocketmqTopicInitParameters struct {

	// Specifies the list of associated brokers of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// The brokers structure is documented below.
	// Specifies the list of associated brokers of the topic.
	Brokers []BrokersInitParameters `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the message type of the topic.
	// It's only valid when RocketMQ instance version is 5.x. Valid values are:
	// Specifies the message type of the topic.
	MessageType *string `json:"messageType,omitempty" tf:"message_type,omitempty"`

	// Specifies the name of the topic.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	// Specifies the name of the topic.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the permissions of the topic.
	// Value options: all, sub, pub. Defaults to all.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Specifies the permissions of the topic.
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`

	// Specifies the number of queues.
	// The valid value is range from 1 to 50. Defaults to 8.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the number of queues.
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`

	// Specifies the queues information of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// The queues structure is documented below.
	// Changing this parameter will create a new resource.
	// Specifies the queue info of the topic.
	Queues []RocketmqTopicQueuesInitParameters `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the total number of read queues.
	// Specifies the total number of read queues.
	TotalReadQueueNum *float64 `json:"totalReadQueueNum,omitempty" tf:"total_read_queue_num,omitempty"`

	// Specifies the total number of write queues.
	// Specifies the total number of write queues.
	TotalWriteQueueNum *float64 `json:"totalWriteQueueNum,omitempty" tf:"total_write_queue_num,omitempty"`
}

type RocketmqTopicObservation struct {

	// Specifies the list of associated brokers of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// The brokers structure is documented below.
	// Specifies the list of associated brokers of the topic.
	Brokers []BrokersObservation `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Changing this parameter will create a new resource.
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Specifies the message type of the topic.
	// It's only valid when RocketMQ instance version is 5.x. Valid values are:
	// Specifies the message type of the topic.
	MessageType *string `json:"messageType,omitempty" tf:"message_type,omitempty"`

	// Specifies the name of the topic.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	// Specifies the name of the topic.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the permissions of the topic.
	// Value options: all, sub, pub. Defaults to all.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Specifies the permissions of the topic.
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`

	// Specifies the number of queues.
	// The valid value is range from 1 to 50. Defaults to 8.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the number of queues.
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`

	// Specifies the queues information of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// The queues structure is documented below.
	// Changing this parameter will create a new resource.
	// Specifies the queue info of the topic.
	Queues []RocketmqTopicQueuesObservation `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the total number of read queues.
	// Specifies the total number of read queues.
	TotalReadQueueNum *float64 `json:"totalReadQueueNum,omitempty" tf:"total_read_queue_num,omitempty"`

	// Specifies the total number of write queues.
	// Specifies the total number of write queues.
	TotalWriteQueueNum *float64 `json:"totalWriteQueueNum,omitempty" tf:"total_write_queue_num,omitempty"`
}

type RocketmqTopicParameters struct {

	// Specifies the list of associated brokers of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// The brokers structure is documented below.
	// Specifies the list of associated brokers of the topic.
	// +kubebuilder:validation:Optional
	Brokers []BrokersParameters `json:"brokers,omitempty" tf:"brokers,omitempty"`

	// Specifies the ID of the rocketMQ instance.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/dms/v1alpha1.RocketmqInstance
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	InstanceID *string `json:"instanceId,omitempty" tf:"instance_id,omitempty"`

	// Reference to a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDRef *v1.Reference `json:"instanceIdRef,omitempty" tf:"-"`

	// Selector for a RocketmqInstance in dms to populate instanceId.
	// +kubebuilder:validation:Optional
	InstanceIDSelector *v1.Selector `json:"instanceIdSelector,omitempty" tf:"-"`

	// Specifies the message type of the topic.
	// It's only valid when RocketMQ instance version is 5.x. Valid values are:
	// Specifies the message type of the topic.
	// +kubebuilder:validation:Optional
	MessageType *string `json:"messageType,omitempty" tf:"message_type,omitempty"`

	// Specifies the name of the topic.
	// The valid length is limited from 3 to 64, only letters, digits, vertical lines (|), percent sign (%), hyphens (-)
	// and underscores (_) are allowed.
	// Changing this parameter will create a new resource.
	// Specifies the name of the topic.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the permissions of the topic.
	// Value options: all, sub, pub. Defaults to all.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Specifies the permissions of the topic.
	// +kubebuilder:validation:Optional
	Permission *string `json:"permission,omitempty" tf:"permission,omitempty"`

	// Specifies the number of queues.
	// The valid value is range from 1 to 50. Defaults to 8.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// Changing this parameter will create a new resource.
	// Specifies the number of queues.
	// +kubebuilder:validation:Optional
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`

	// Specifies the queues information of the topic.
	// It's only valid when RocketMQ instance version is 4.8.0.
	// The queues structure is documented below.
	// Changing this parameter will create a new resource.
	// Specifies the queue info of the topic.
	// +kubebuilder:validation:Optional
	Queues []RocketmqTopicQueuesParameters `json:"queues,omitempty" tf:"queues,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the total number of read queues.
	// Specifies the total number of read queues.
	// +kubebuilder:validation:Optional
	TotalReadQueueNum *float64 `json:"totalReadQueueNum,omitempty" tf:"total_read_queue_num,omitempty"`

	// Specifies the total number of write queues.
	// Specifies the total number of write queues.
	// +kubebuilder:validation:Optional
	TotalWriteQueueNum *float64 `json:"totalWriteQueueNum,omitempty" tf:"total_write_queue_num,omitempty"`
}

type RocketmqTopicQueuesInitParameters struct {

	// Specifies the associated broker.
	// Specifies the associated broker.
	Broker *string `json:"broker,omitempty" tf:"broker,omitempty"`

	// Specifies the number of the queues.
	// Specifies the number of the queues.
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`
}

type RocketmqTopicQueuesObservation struct {

	// Specifies the associated broker.
	// Specifies the associated broker.
	Broker *string `json:"broker,omitempty" tf:"broker,omitempty"`

	// Specifies the number of the queues.
	// Specifies the number of the queues.
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`
}

type RocketmqTopicQueuesParameters struct {

	// Specifies the associated broker.
	// Specifies the associated broker.
	// +kubebuilder:validation:Optional
	Broker *string `json:"broker,omitempty" tf:"broker,omitempty"`

	// Specifies the number of the queues.
	// Specifies the number of the queues.
	// +kubebuilder:validation:Optional
	QueueNum *float64 `json:"queueNum,omitempty" tf:"queue_num,omitempty"`
}

// RocketmqTopicSpec defines the desired state of RocketmqTopic
type RocketmqTopicSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     RocketmqTopicParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider RocketmqTopicInitParameters `json:"initProvider,omitempty"`
}

// RocketmqTopicStatus defines the observed state of RocketmqTopic.
type RocketmqTopicStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        RocketmqTopicObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// RocketmqTopic is the Schema for the RocketmqTopics API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type RocketmqTopic struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   RocketmqTopicSpec   `json:"spec"`
	Status RocketmqTopicStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// RocketmqTopicList contains a list of RocketmqTopics
type RocketmqTopicList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []RocketmqTopic `json:"items"`
}

// Repository type metadata.
var (
	RocketmqTopic_Kind             = "RocketmqTopic"
	RocketmqTopic_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: RocketmqTopic_Kind}.String()
	RocketmqTopic_KindAPIVersion   = RocketmqTopic_Kind + "." + CRDGroupVersion.String()
	RocketmqTopic_GroupVersionKind = CRDGroupVersion.WithKind(RocketmqTopic_Kind)
)

func init() {
	SchemeBuilder.Register(&RocketmqTopic{}, &RocketmqTopicList{})
}
