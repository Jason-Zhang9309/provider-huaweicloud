// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type AlarmNotificationsInitParameters struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	NotificationList []*string `json:"notificationList,omitempty" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AlarmNotificationsObservation struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	NotificationList []*string `json:"notificationList,omitempty" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type AlarmNotificationsParameters struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	// +kubebuilder:validation:Optional
	NotificationList []*string `json:"notificationList" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type DimensionNamesInitParameters struct {

	// Specifies whether to enable the event alarm rules.
	// Specifies whether to enable the event alarm rules.
	Event *bool `json:"event,omitempty" tf:"event,omitempty"`

	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	Metric []*string `json:"metric,omitempty" tf:"metric,omitempty"`
}

type DimensionNamesObservation struct {

	// Specifies whether to enable the event alarm rules.
	// Specifies whether to enable the event alarm rules.
	Event *bool `json:"event,omitempty" tf:"event,omitempty"`

	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	Metric []*string `json:"metric,omitempty" tf:"metric,omitempty"`
}

type DimensionNamesParameters struct {

	// Specifies whether to enable the event alarm rules.
	// Specifies whether to enable the event alarm rules.
	// +kubebuilder:validation:Optional
	Event *bool `json:"event,omitempty" tf:"event,omitempty"`

	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	// Specifies dimensions in metric alarm rules that have one-click monitoring enabled.
	// +kubebuilder:validation:Optional
	Metric []*string `json:"metric,omitempty" tf:"metric,omitempty"`
}

type OkNotificationsInitParameters struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	NotificationList []*string `json:"notificationList,omitempty" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OkNotificationsObservation struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	NotificationList []*string `json:"notificationList,omitempty" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type OkNotificationsParameters struct {

	// Specifies the list of objects to be notified if the alarm status changes.
	// Specifies the list of objects to be notified if the alarm status changes.
	// +kubebuilder:validation:Optional
	NotificationList []*string `json:"notificationList" tf:"notification_list,omitempty"`

	// Specifies the notification type.
	// The value can be notification or contact.
	// Specifies the notification type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type" tf:"type,omitempty"`
}

type OneClickAlarmInitParameters struct {

	// Specifies the action to be triggered by an alarm.
	// Specifies the action to be triggered by an alarm.
	AlarmNotifications []AlarmNotificationsInitParameters `json:"alarmNotifications,omitempty" tf:"alarm_notifications,omitempty"`

	// Specifies dimensions in metric and event alarm rules that have
	// one-click monitoring enabled.
	// Specifies dimensions in metric and event alarm rules that have one-click monitoring enabled.
	DimensionNames []DimensionNamesInitParameters `json:"dimensionNames,omitempty" tf:"dimension_names,omitempty"`

	// Specifies the time when the alarm notification was enabled.
	// Specifies the time when the alarm notification was enabled.
	NotificationBeginTime *string `json:"notificationBeginTime,omitempty" tf:"notification_begin_time,omitempty"`

	// Specifies whether to enable the alarm notification.
	// Specifies whether to enable the alarm notification.
	NotificationEnabled *bool `json:"notificationEnabled,omitempty" tf:"notification_enabled,omitempty"`

	// Specifies the time when the alarm notification was disabled.
	// Specifies the time when the alarm notification was disabled.
	NotificationEndTime *string `json:"notificationEndTime,omitempty" tf:"notification_end_time,omitempty"`

	// Specifies the action to be triggered after an alarm is cleared.
	// Specifies the action to be triggered after an alarm is cleared.
	OkNotifications []OkNotificationsInitParameters `json:"okNotifications,omitempty" tf:"ok_notifications,omitempty"`

	// Specifies the default one-click monitoring ID.
	// The value can be queried from the CES one-click alarms data source.
	// Specifies the default one-click monitoring ID.
	OneClickAlarmID *string `json:"oneClickAlarmId,omitempty" tf:"one_click_alarm_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type OneClickAlarmObservation struct {

	// Specifies the action to be triggered by an alarm.
	// Specifies the action to be triggered by an alarm.
	AlarmNotifications []AlarmNotificationsObservation `json:"alarmNotifications,omitempty" tf:"alarm_notifications,omitempty"`

	// The supplementary information about one-click monitoring.
	// The supplementary information about one-click monitoring.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Specifies dimensions in metric and event alarm rules that have
	// one-click monitoring enabled.
	// Specifies dimensions in metric and event alarm rules that have one-click monitoring enabled.
	DimensionNames []DimensionNamesObservation `json:"dimensionNames,omitempty" tf:"dimension_names,omitempty"`

	// Whether the one-click monitoring is enabled.
	// Whether to enable one-click monitoring.
	Enabled *bool `json:"enabled,omitempty" tf:"enabled,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The metric namespace.
	// The metric namespace.
	Namespace *string `json:"namespace,omitempty" tf:"namespace,omitempty"`

	// Specifies the time when the alarm notification was enabled.
	// Specifies the time when the alarm notification was enabled.
	NotificationBeginTime *string `json:"notificationBeginTime,omitempty" tf:"notification_begin_time,omitempty"`

	// Specifies whether to enable the alarm notification.
	// Specifies whether to enable the alarm notification.
	NotificationEnabled *bool `json:"notificationEnabled,omitempty" tf:"notification_enabled,omitempty"`

	// Specifies the time when the alarm notification was disabled.
	// Specifies the time when the alarm notification was disabled.
	NotificationEndTime *string `json:"notificationEndTime,omitempty" tf:"notification_end_time,omitempty"`

	// Specifies the action to be triggered after an alarm is cleared.
	// Specifies the action to be triggered after an alarm is cleared.
	OkNotifications []OkNotificationsObservation `json:"okNotifications,omitempty" tf:"ok_notifications,omitempty"`

	// Specifies the default one-click monitoring ID.
	// The value can be queried from the CES one-click alarms data source.
	// Specifies the default one-click monitoring ID.
	OneClickAlarmID *string `json:"oneClickAlarmId,omitempty" tf:"one_click_alarm_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type OneClickAlarmParameters struct {

	// Specifies the action to be triggered by an alarm.
	// Specifies the action to be triggered by an alarm.
	// +kubebuilder:validation:Optional
	AlarmNotifications []AlarmNotificationsParameters `json:"alarmNotifications,omitempty" tf:"alarm_notifications,omitempty"`

	// Specifies dimensions in metric and event alarm rules that have
	// one-click monitoring enabled.
	// Specifies dimensions in metric and event alarm rules that have one-click monitoring enabled.
	// +kubebuilder:validation:Optional
	DimensionNames []DimensionNamesParameters `json:"dimensionNames,omitempty" tf:"dimension_names,omitempty"`

	// Specifies the time when the alarm notification was enabled.
	// Specifies the time when the alarm notification was enabled.
	// +kubebuilder:validation:Optional
	NotificationBeginTime *string `json:"notificationBeginTime,omitempty" tf:"notification_begin_time,omitempty"`

	// Specifies whether to enable the alarm notification.
	// Specifies whether to enable the alarm notification.
	// +kubebuilder:validation:Optional
	NotificationEnabled *bool `json:"notificationEnabled,omitempty" tf:"notification_enabled,omitempty"`

	// Specifies the time when the alarm notification was disabled.
	// Specifies the time when the alarm notification was disabled.
	// +kubebuilder:validation:Optional
	NotificationEndTime *string `json:"notificationEndTime,omitempty" tf:"notification_end_time,omitempty"`

	// Specifies the action to be triggered after an alarm is cleared.
	// Specifies the action to be triggered after an alarm is cleared.
	// +kubebuilder:validation:Optional
	OkNotifications []OkNotificationsParameters `json:"okNotifications,omitempty" tf:"ok_notifications,omitempty"`

	// Specifies the default one-click monitoring ID.
	// The value can be queried from the CES one-click alarms data source.
	// Specifies the default one-click monitoring ID.
	// +kubebuilder:validation:Optional
	OneClickAlarmID *string `json:"oneClickAlarmId,omitempty" tf:"one_click_alarm_id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// OneClickAlarmSpec defines the desired state of OneClickAlarm
type OneClickAlarmSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OneClickAlarmParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OneClickAlarmInitParameters `json:"initProvider,omitempty"`
}

// OneClickAlarmStatus defines the observed state of OneClickAlarm.
type OneClickAlarmStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OneClickAlarmObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// OneClickAlarm is the Schema for the OneClickAlarms API. Manages a CES one-click alarm resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type OneClickAlarm struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.dimensionNames) || (has(self.initProvider) && has(self.initProvider.dimensionNames))",message="spec.forProvider.dimensionNames is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.notificationEnabled) || (has(self.initProvider) && has(self.initProvider.notificationEnabled))",message="spec.forProvider.notificationEnabled is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.oneClickAlarmId) || (has(self.initProvider) && has(self.initProvider.oneClickAlarmId))",message="spec.forProvider.oneClickAlarmId is a required parameter"
	Spec   OneClickAlarmSpec   `json:"spec"`
	Status OneClickAlarmStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OneClickAlarmList contains a list of OneClickAlarms
type OneClickAlarmList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []OneClickAlarm `json:"items"`
}

// Repository type metadata.
var (
	OneClickAlarm_Kind             = "OneClickAlarm"
	OneClickAlarm_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: OneClickAlarm_Kind}.String()
	OneClickAlarm_KindAPIVersion   = OneClickAlarm_Kind + "." + CRDGroupVersion.String()
	OneClickAlarm_GroupVersionKind = CRDGroupVersion.WithKind(OneClickAlarm_Kind)
)

func init() {
	SchemeBuilder.Register(&OneClickAlarm{}, &OneClickAlarmList{})
}
