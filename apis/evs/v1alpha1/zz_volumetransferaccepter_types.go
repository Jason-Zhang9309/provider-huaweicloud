// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VolumeTransferAccepterInitParameters struct {

	// Specifies the identity authentication key for volume transfer.
	// When creating the volume transfer, the value of this field will be returned.
	// Changing this parameter will create a new resource.
	AuthKey *string `json:"authKey,omitempty" tf:"auth_key,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the ID of the volume transfer record.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/evs/v1alpha1.VolumeTransfer
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	TransferID *string `json:"transferId,omitempty" tf:"transfer_id,omitempty"`

	// Reference to a VolumeTransfer in evs to populate transferId.
	// +kubebuilder:validation:Optional
	TransferIDRef *v1.Reference `json:"transferIdRef,omitempty" tf:"-"`

	// Selector for a VolumeTransfer in evs to populate transferId.
	// +kubebuilder:validation:Optional
	TransferIDSelector *v1.Selector `json:"transferIdSelector,omitempty" tf:"-"`
}

type VolumeTransferAccepterObservation struct {

	// Specifies the identity authentication key for volume transfer.
	// When creating the volume transfer, the value of this field will be returned.
	// Changing this parameter will create a new resource.
	AuthKey *string `json:"authKey,omitempty" tf:"auth_key,omitempty"`

	// The resource ID, same as transfer_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the ID of the volume transfer record.
	// Changing this parameter will create a new resource.
	TransferID *string `json:"transferId,omitempty" tf:"transfer_id,omitempty"`
}

type VolumeTransferAccepterParameters struct {

	// Specifies the identity authentication key for volume transfer.
	// When creating the volume transfer, the value of this field will be returned.
	// Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	AuthKey *string `json:"authKey,omitempty" tf:"auth_key,omitempty"`

	// Specifies the region in which to create the resource.
	// If omitted, the provider-level region will be used. Changing this parameter will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the ID of the volume transfer record.
	// Changing this parameter will create a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/evs/v1alpha1.VolumeTransfer
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	TransferID *string `json:"transferId,omitempty" tf:"transfer_id,omitempty"`

	// Reference to a VolumeTransfer in evs to populate transferId.
	// +kubebuilder:validation:Optional
	TransferIDRef *v1.Reference `json:"transferIdRef,omitempty" tf:"-"`

	// Selector for a VolumeTransfer in evs to populate transferId.
	// +kubebuilder:validation:Optional
	TransferIDSelector *v1.Selector `json:"transferIdSelector,omitempty" tf:"-"`
}

// VolumeTransferAccepterSpec defines the desired state of VolumeTransferAccepter
type VolumeTransferAccepterSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VolumeTransferAccepterParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VolumeTransferAccepterInitParameters `json:"initProvider,omitempty"`
}

// VolumeTransferAccepterStatus defines the observed state of VolumeTransferAccepter.
type VolumeTransferAccepterStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VolumeTransferAccepterObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VolumeTransferAccepter is the Schema for the VolumeTransferAccepters API. Manages an EVS volume transfer accepter resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type VolumeTransferAccepter struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.authKey) || (has(self.initProvider) && has(self.initProvider.authKey))",message="spec.forProvider.authKey is a required parameter"
	Spec   VolumeTransferAccepterSpec   `json:"spec"`
	Status VolumeTransferAccepterStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VolumeTransferAccepterList contains a list of VolumeTransferAccepters
type VolumeTransferAccepterList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VolumeTransferAccepter `json:"items"`
}

// Repository type metadata.
var (
	VolumeTransferAccepter_Kind             = "VolumeTransferAccepter"
	VolumeTransferAccepter_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VolumeTransferAccepter_Kind}.String()
	VolumeTransferAccepter_KindAPIVersion   = VolumeTransferAccepter_Kind + "." + CRDGroupVersion.String()
	VolumeTransferAccepter_GroupVersionKind = CRDGroupVersion.WithKind(VolumeTransferAccepter_Kind)
)

func init() {
	SchemeBuilder.Register(&VolumeTransferAccepter{}, &VolumeTransferAccepterList{})
}
