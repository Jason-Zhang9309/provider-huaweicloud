// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VpcEipV3AssociateInitParameters struct {

	// Specifies the ID of the instance that the port belongs to.
	// Changing this creates a new resource.
	AssociateInstanceID *string `json:"associateInstanceId,omitempty" tf:"associate_instance_id,omitempty"`

	// Specifies the type of the instance that the port belongs to.
	// Value options: PORT, NATGW, VPN and ELB. Changing this creates a new resource.
	AssociateInstanceType *string `json:"associateInstanceType,omitempty" tf:"associate_instance_type,omitempty"`

	// Specifies the ID of a EIP. Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/eip/v1alpha1.VpcEip
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	PublicipID *string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// Reference to a VpcEip in eip to populate publicipId.
	// +kubebuilder:validation:Optional
	PublicipIDRef *v1.Reference `json:"publicipIdRef,omitempty" tf:"-"`

	// Selector for a VpcEip in eip to populate publicipId.
	// +kubebuilder:validation:Optional
	PublicipIDSelector *v1.Selector `json:"publicipIdSelector,omitempty" tf:"-"`

	// Specifies the region in which to create the VPC EIP associate resource. If
	// omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type VpcEipV3AssociateObservation struct {

	// Specifies the ID of the instance that the port belongs to.
	// Changing this creates a new resource.
	AssociateInstanceID *string `json:"associateInstanceId,omitempty" tf:"associate_instance_id,omitempty"`

	// Specifies the type of the instance that the port belongs to.
	// Value options: PORT, NATGW, VPN and ELB. Changing this creates a new resource.
	AssociateInstanceType *string `json:"associateInstanceType,omitempty" tf:"associate_instance_type,omitempty"`

	// The resource ID. The value is the publicip_id.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the ID of a EIP. Changing this creates a new resource.
	PublicipID *string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// Specifies the region in which to create the VPC EIP associate resource. If
	// omitted, the provider-level region will be used. Changing this creates a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

type VpcEipV3AssociateParameters struct {

	// Specifies the ID of the instance that the port belongs to.
	// Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	AssociateInstanceID *string `json:"associateInstanceId,omitempty" tf:"associate_instance_id,omitempty"`

	// Specifies the type of the instance that the port belongs to.
	// Value options: PORT, NATGW, VPN and ELB. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	AssociateInstanceType *string `json:"associateInstanceType,omitempty" tf:"associate_instance_type,omitempty"`

	// Specifies the ID of a EIP. Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/eip/v1alpha1.VpcEip
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	PublicipID *string `json:"publicipId,omitempty" tf:"publicip_id,omitempty"`

	// Reference to a VpcEip in eip to populate publicipId.
	// +kubebuilder:validation:Optional
	PublicipIDRef *v1.Reference `json:"publicipIdRef,omitempty" tf:"-"`

	// Selector for a VpcEip in eip to populate publicipId.
	// +kubebuilder:validation:Optional
	PublicipIDSelector *v1.Selector `json:"publicipIdSelector,omitempty" tf:"-"`

	// Specifies the region in which to create the VPC EIP associate resource. If
	// omitted, the provider-level region will be used. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`
}

// VpcEipV3AssociateSpec defines the desired state of VpcEipV3Associate
type VpcEipV3AssociateSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VpcEipV3AssociateParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VpcEipV3AssociateInitParameters `json:"initProvider,omitempty"`
}

// VpcEipV3AssociateStatus defines the observed state of VpcEipV3Associate.
type VpcEipV3AssociateStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VpcEipV3AssociateObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VpcEipV3Associate is the Schema for the VpcEipV3Associates API. Manages a VPC EIP associates with an instance resource within HuaweiCloud.
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type VpcEipV3Associate struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.associateInstanceId) || (has(self.initProvider) && has(self.initProvider.associateInstanceId))",message="spec.forProvider.associateInstanceId is a required parameter"
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.associateInstanceType) || (has(self.initProvider) && has(self.initProvider.associateInstanceType))",message="spec.forProvider.associateInstanceType is a required parameter"
	Spec   VpcEipV3AssociateSpec   `json:"spec"`
	Status VpcEipV3AssociateStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VpcEipV3AssociateList contains a list of VpcEipV3Associates
type VpcEipV3AssociateList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VpcEipV3Associate `json:"items"`
}

// Repository type metadata.
var (
	VpcEipV3Associate_Kind             = "VpcEipV3Associate"
	VpcEipV3Associate_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VpcEipV3Associate_Kind}.String()
	VpcEipV3Associate_KindAPIVersion   = VpcEipV3Associate_Kind + "." + CRDGroupVersion.String()
	VpcEipV3Associate_GroupVersionKind = CRDGroupVersion.WithKind(VpcEipV3Associate_Kind)
)

func init() {
	SchemeBuilder.Register(&VpcEipV3Associate{}, &VpcEipV3AssociateList{})
}
