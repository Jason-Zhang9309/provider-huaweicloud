// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type VpcInternetGatewayInitParameters struct {

	// Specifies whether to add a default route pointing to the IGW in the default
	// route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
	AddRoute *bool `json:"addRoute,omitempty" tf:"add_route,omitempty"`

	// Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
	// subnet is enable IPv6 before setting to true.
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// Specifies the IGW name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the IGW.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the subnet ID which the IGW associated with.
	// Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the VPC ID which the IGW associated with. A VPC can only associate
	// with one IGW. Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

type VpcInternetGatewayObservation struct {

	// Specifies whether to add a default route pointing to the IGW in the default
	// route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
	AddRoute *bool `json:"addRoute,omitempty" tf:"add_route,omitempty"`

	// The create time of the IGW.
	CreatedAt *string `json:"createdAt,omitempty" tf:"created_at,omitempty"`

	// Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
	// subnet is enable IPv6 before setting to true.
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// The resource ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Specifies the IGW name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the IGW.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the subnet ID which the IGW associated with.
	// Changing this creates a new resource.
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// The update time of the IGW.
	UpdatedAt *string `json:"updatedAt,omitempty" tf:"updated_at,omitempty"`

	// Specifies the VPC ID which the IGW associated with. A VPC can only associate
	// with one IGW. Changing this creates a new resource.
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`
}

type VpcInternetGatewayParameters struct {

	// Specifies whether to add a default route pointing to the IGW in the default
	// route table of the VPC with the destination address 0.0.0.0/0. Changing this creates a new resource.
	// +kubebuilder:validation:Optional
	AddRoute *bool `json:"addRoute,omitempty" tf:"add_route,omitempty"`

	// Specifies whether to enable IPv6. It's not allow change true to false. Make sure the
	// subnet is enable IPv6 before setting to true.
	// +kubebuilder:validation:Optional
	EnableIPv6 *bool `json:"enableIpv6,omitempty" tf:"enable_ipv6,omitempty"`

	// Specifies the IGW name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Specifies the region in which to create the IGW.
	// If omitted, the provider-level region will be used. Changing this will create a new resource.
	// +kubebuilder:validation:Optional
	Region *string `json:"region,omitempty" tf:"region,omitempty"`

	// Specifies the subnet ID which the IGW associated with.
	// Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.Subnet
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	SubnetID *string `json:"subnetId,omitempty" tf:"subnet_id,omitempty"`

	// Reference to a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDRef *v1.Reference `json:"subnetIdRef,omitempty" tf:"-"`

	// Selector for a Subnet in vpc to populate subnetId.
	// +kubebuilder:validation:Optional
	SubnetIDSelector *v1.Selector `json:"subnetIdSelector,omitempty" tf:"-"`

	// Specifies the VPC ID which the IGW associated with. A VPC can only associate
	// with one IGW. Changing this creates a new resource.
	// +crossplane:generate:reference:type=github.com/huaweicloud/provider-huaweicloud/apis/vpc/v1alpha1.VPC
	// +crossplane:generate:reference:extractor=github.com/crossplane/upjet/pkg/resource.ExtractResourceID()
	// +kubebuilder:validation:Optional
	VPCID *string `json:"vpcId,omitempty" tf:"vpc_id,omitempty"`

	// Reference to a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDRef *v1.Reference `json:"vpcIdRef,omitempty" tf:"-"`

	// Selector for a VPC in vpc to populate vpcId.
	// +kubebuilder:validation:Optional
	VPCIDSelector *v1.Selector `json:"vpcIdSelector,omitempty" tf:"-"`
}

// VpcInternetGatewaySpec defines the desired state of VpcInternetGateway
type VpcInternetGatewaySpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     VpcInternetGatewayParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider VpcInternetGatewayInitParameters `json:"initProvider,omitempty"`
}

// VpcInternetGatewayStatus defines the observed state of VpcInternetGateway.
type VpcInternetGatewayStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        VpcInternetGatewayObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// VpcInternetGateway is the Schema for the VpcInternetGateways API. ""
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,huaweicloud}
type VpcInternetGateway struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              VpcInternetGatewaySpec   `json:"spec"`
	Status            VpcInternetGatewayStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// VpcInternetGatewayList contains a list of VpcInternetGateways
type VpcInternetGatewayList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []VpcInternetGateway `json:"items"`
}

// Repository type metadata.
var (
	VpcInternetGateway_Kind             = "VpcInternetGateway"
	VpcInternetGateway_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: VpcInternetGateway_Kind}.String()
	VpcInternetGateway_KindAPIVersion   = VpcInternetGateway_Kind + "." + CRDGroupVersion.String()
	VpcInternetGateway_GroupVersionKind = CRDGroupVersion.WithKind(VpcInternetGateway_Kind)
)

func init() {
	SchemeBuilder.Register(&VpcInternetGateway{}, &VpcInternetGatewayList{})
}
