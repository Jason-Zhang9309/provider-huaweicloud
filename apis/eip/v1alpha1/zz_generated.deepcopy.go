//go:build !ignore_autogenerated

// SPDX-FileCopyrightText: 2024 The Crossplane Authors <https://crossplane.io>
//
// SPDX-License-Identifier: Apache-2.0

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociateInstanceInitParameters) DeepCopyInto(out *AssociateInstanceInitParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociateInstanceInitParameters.
func (in *AssociateInstanceInitParameters) DeepCopy() *AssociateInstanceInitParameters {
	if in == nil {
		return nil
	}
	out := new(AssociateInstanceInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociateInstanceObservation) DeepCopyInto(out *AssociateInstanceObservation) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociateInstanceObservation.
func (in *AssociateInstanceObservation) DeepCopy() *AssociateInstanceObservation {
	if in == nil {
		return nil
	}
	out := new(AssociateInstanceObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *AssociateInstanceParameters) DeepCopyInto(out *AssociateInstanceParameters) {
	*out = *in
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.ProjectID != nil {
		in, out := &in.ProjectID, &out.ProjectID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ServiceID != nil {
		in, out := &in.ServiceID, &out.ServiceID
		*out = new(string)
		**out = **in
	}
	if in.ServiceType != nil {
		in, out := &in.ServiceType, &out.ServiceType
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new AssociateInstanceParameters.
func (in *AssociateInstanceParameters) DeepCopy() *AssociateInstanceParameters {
	if in == nil {
		return nil
	}
	out := new(AssociateInstanceParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthInitParameters) DeepCopyInto(out *BandwidthInitParameters) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthInitParameters.
func (in *BandwidthInitParameters) DeepCopy() *BandwidthInitParameters {
	if in == nil {
		return nil
	}
	out := new(BandwidthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthObservation) DeepCopyInto(out *BandwidthObservation) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthObservation.
func (in *BandwidthObservation) DeepCopy() *BandwidthObservation {
	if in == nil {
		return nil
	}
	out := new(BandwidthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BandwidthParameters) DeepCopyInto(out *BandwidthParameters) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BandwidthParameters.
func (in *BandwidthParameters) DeepCopy() *BandwidthParameters {
	if in == nil {
		return nil
	}
	out := new(BandwidthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcBandwidthInitParameters) DeepCopyInto(out *GcBandwidthInitParameters) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcBandwidthInitParameters.
func (in *GcBandwidthInitParameters) DeepCopy() *GcBandwidthInitParameters {
	if in == nil {
		return nil
	}
	out := new(GcBandwidthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcBandwidthObservation) DeepCopyInto(out *GcBandwidthObservation) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcBandwidthObservation.
func (in *GcBandwidthObservation) DeepCopy() *GcBandwidthObservation {
	if in == nil {
		return nil
	}
	out := new(GcBandwidthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GcBandwidthParameters) DeepCopyInto(out *GcBandwidthParameters) {
	*out = *in
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GcBandwidthParameters.
func (in *GcBandwidthParameters) DeepCopy() *GcBandwidthParameters {
	if in == nil {
		return nil
	}
	out := new(GcBandwidthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEip) DeepCopyInto(out *GlobalEip) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEip.
func (in *GlobalEip) DeepCopy() *GlobalEip {
	if in == nil {
		return nil
	}
	out := new(GlobalEip)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalEip) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociate) DeepCopyInto(out *GlobalEipAssociate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociate.
func (in *GlobalEipAssociate) DeepCopy() *GlobalEipAssociate {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalEipAssociate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateInitParameters) DeepCopyInto(out *GlobalEipAssociateInitParameters) {
	*out = *in
	if in.AssociateInstance != nil {
		in, out := &in.AssociateInstance, &out.AssociateInstance
		*out = make([]AssociateInstanceInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcBandwidth != nil {
		in, out := &in.GcBandwidth, &out.GcBandwidth
		*out = make([]GcBandwidthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalEIPID != nil {
		in, out := &in.GlobalEIPID, &out.GlobalEIPID
		*out = new(string)
		**out = **in
	}
	if in.GlobalEIPIDRef != nil {
		in, out := &in.GlobalEIPIDRef, &out.GlobalEIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalEIPIDSelector != nil {
		in, out := &in.GlobalEIPIDSelector, &out.GlobalEIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsReserveGcb != nil {
		in, out := &in.IsReserveGcb, &out.IsReserveGcb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateInitParameters.
func (in *GlobalEipAssociateInitParameters) DeepCopy() *GlobalEipAssociateInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateList) DeepCopyInto(out *GlobalEipAssociateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalEipAssociate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateList.
func (in *GlobalEipAssociateList) DeepCopy() *GlobalEipAssociateList {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalEipAssociateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateObservation) DeepCopyInto(out *GlobalEipAssociateObservation) {
	*out = *in
	if in.AssociateInstance != nil {
		in, out := &in.AssociateInstance, &out.AssociateInstance
		*out = make([]AssociateInstanceObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcBandwidth != nil {
		in, out := &in.GcBandwidth, &out.GcBandwidth
		*out = make([]GcBandwidthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalEIPID != nil {
		in, out := &in.GlobalEIPID, &out.GlobalEIPID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IsReserveGcb != nil {
		in, out := &in.IsReserveGcb, &out.IsReserveGcb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateObservation.
func (in *GlobalEipAssociateObservation) DeepCopy() *GlobalEipAssociateObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateParameters) DeepCopyInto(out *GlobalEipAssociateParameters) {
	*out = *in
	if in.AssociateInstance != nil {
		in, out := &in.AssociateInstance, &out.AssociateInstance
		*out = make([]AssociateInstanceParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GcBandwidth != nil {
		in, out := &in.GcBandwidth, &out.GcBandwidth
		*out = make([]GcBandwidthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.GlobalEIPID != nil {
		in, out := &in.GlobalEIPID, &out.GlobalEIPID
		*out = new(string)
		**out = **in
	}
	if in.GlobalEIPIDRef != nil {
		in, out := &in.GlobalEIPIDRef, &out.GlobalEIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.GlobalEIPIDSelector != nil {
		in, out := &in.GlobalEIPIDSelector, &out.GlobalEIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.IsReserveGcb != nil {
		in, out := &in.IsReserveGcb, &out.IsReserveGcb
		*out = new(bool)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateParameters.
func (in *GlobalEipAssociateParameters) DeepCopy() *GlobalEipAssociateParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateSpec) DeepCopyInto(out *GlobalEipAssociateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateSpec.
func (in *GlobalEipAssociateSpec) DeepCopy() *GlobalEipAssociateSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipAssociateStatus) DeepCopyInto(out *GlobalEipAssociateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipAssociateStatus.
func (in *GlobalEipAssociateStatus) DeepCopy() *GlobalEipAssociateStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalEipAssociateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipInitParameters) DeepCopyInto(out *GlobalEipInitParameters) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.GeipPoolName != nil {
		in, out := &in.GeipPoolName, &out.GeipPoolName
		*out = new(string)
		**out = **in
	}
	if in.InternetBandwidthID != nil {
		in, out := &in.InternetBandwidthID, &out.InternetBandwidthID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipInitParameters.
func (in *GlobalEipInitParameters) DeepCopy() *GlobalEipInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalEipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipList) DeepCopyInto(out *GlobalEipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalEip, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipList.
func (in *GlobalEipList) DeepCopy() *GlobalEipList {
	if in == nil {
		return nil
	}
	out := new(GlobalEipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalEipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipObservation) DeepCopyInto(out *GlobalEipObservation) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceID != nil {
		in, out := &in.AssociateInstanceID, &out.AssociateInstanceID
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceRegion != nil {
		in, out := &in.AssociateInstanceRegion, &out.AssociateInstanceRegion
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceType != nil {
		in, out := &in.AssociateInstanceType, &out.AssociateInstanceType
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Frozen != nil {
		in, out := &in.Frozen, &out.Frozen
		*out = new(bool)
		**out = **in
	}
	if in.FrozenInfo != nil {
		in, out := &in.FrozenInfo, &out.FrozenInfo
		*out = new(string)
		**out = **in
	}
	if in.GeipPoolName != nil {
		in, out := &in.GeipPoolName, &out.GeipPoolName
		*out = new(string)
		**out = **in
	}
	if in.GlobalConnectionBandwidthID != nil {
		in, out := &in.GlobalConnectionBandwidthID, &out.GlobalConnectionBandwidthID
		*out = new(string)
		**out = **in
	}
	if in.GlobalConnectionBandwidthType != nil {
		in, out := &in.GlobalConnectionBandwidthType, &out.GlobalConnectionBandwidthType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.InternetBandwidthID != nil {
		in, out := &in.InternetBandwidthID, &out.InternetBandwidthID
		*out = new(string)
		**out = **in
	}
	if in.Isp != nil {
		in, out := &in.Isp, &out.Isp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Polluted != nil {
		in, out := &in.Polluted, &out.Polluted
		*out = new(bool)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipObservation.
func (in *GlobalEipObservation) DeepCopy() *GlobalEipObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalEipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipParameters) DeepCopyInto(out *GlobalEipParameters) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.GeipPoolName != nil {
		in, out := &in.GeipPoolName, &out.GeipPoolName
		*out = new(string)
		**out = **in
	}
	if in.InternetBandwidthID != nil {
		in, out := &in.InternetBandwidthID, &out.InternetBandwidthID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipParameters.
func (in *GlobalEipParameters) DeepCopy() *GlobalEipParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalEipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipSpec) DeepCopyInto(out *GlobalEipSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipSpec.
func (in *GlobalEipSpec) DeepCopy() *GlobalEipSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalEipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalEipStatus) DeepCopyInto(out *GlobalEipStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalEipStatus.
func (in *GlobalEipStatus) DeepCopy() *GlobalEipStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalEipStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidth) DeepCopyInto(out *GlobalInternetBandwidth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidth.
func (in *GlobalInternetBandwidth) DeepCopy() *GlobalInternetBandwidth {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalInternetBandwidth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthInitParameters) DeepCopyInto(out *GlobalInternetBandwidthInitParameters) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.IngressSize != nil {
		in, out := &in.IngressSize, &out.IngressSize
		*out = new(float64)
		**out = **in
	}
	if in.Isp != nil {
		in, out := &in.Isp, &out.Isp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthInitParameters.
func (in *GlobalInternetBandwidthInitParameters) DeepCopy() *GlobalInternetBandwidthInitParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthList) DeepCopyInto(out *GlobalInternetBandwidthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]GlobalInternetBandwidth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthList.
func (in *GlobalInternetBandwidthList) DeepCopy() *GlobalInternetBandwidthList {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *GlobalInternetBandwidthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthObservation) DeepCopyInto(out *GlobalInternetBandwidthObservation) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.FrozenInfo != nil {
		in, out := &in.FrozenInfo, &out.FrozenInfo
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IngressSize != nil {
		in, out := &in.IngressSize, &out.IngressSize
		*out = new(float64)
		**out = **in
	}
	if in.Isp != nil {
		in, out := &in.Isp, &out.Isp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Ratio95Peak != nil {
		in, out := &in.Ratio95Peak, &out.Ratio95Peak
		*out = new(float64)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthObservation.
func (in *GlobalInternetBandwidthObservation) DeepCopy() *GlobalInternetBandwidthObservation {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthParameters) DeepCopyInto(out *GlobalInternetBandwidthParameters) {
	*out = *in
	if in.AccessSite != nil {
		in, out := &in.AccessSite, &out.AccessSite
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.Description != nil {
		in, out := &in.Description, &out.Description
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.IngressSize != nil {
		in, out := &in.IngressSize, &out.IngressSize
		*out = new(float64)
		**out = **in
	}
	if in.Isp != nil {
		in, out := &in.Isp, &out.Isp
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthParameters.
func (in *GlobalInternetBandwidthParameters) DeepCopy() *GlobalInternetBandwidthParameters {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthSpec) DeepCopyInto(out *GlobalInternetBandwidthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthSpec.
func (in *GlobalInternetBandwidthSpec) DeepCopy() *GlobalInternetBandwidthSpec {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GlobalInternetBandwidthStatus) DeepCopyInto(out *GlobalInternetBandwidthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GlobalInternetBandwidthStatus.
func (in *GlobalInternetBandwidthStatus) DeepCopy() *GlobalInternetBandwidthStatus {
	if in == nil {
		return nil
	}
	out := new(GlobalInternetBandwidthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipInitParameters) DeepCopyInto(out *PublicipInitParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipInitParameters.
func (in *PublicipInitParameters) DeepCopy() *PublicipInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipObservation) DeepCopyInto(out *PublicipObservation) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipObservation.
func (in *PublicipObservation) DeepCopy() *PublicipObservation {
	if in == nil {
		return nil
	}
	out := new(PublicipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipParameters) DeepCopyInto(out *PublicipParameters) {
	*out = *in
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipParameters.
func (in *PublicipParameters) DeepCopy() *PublicipParameters {
	if in == nil {
		return nil
	}
	out := new(PublicipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipsInitParameters) DeepCopyInto(out *PublicipsInitParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipsInitParameters.
func (in *PublicipsInitParameters) DeepCopy() *PublicipsInitParameters {
	if in == nil {
		return nil
	}
	out := new(PublicipsInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipsObservation) DeepCopyInto(out *PublicipsObservation) {
	*out = *in
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPAddress != nil {
		in, out := &in.IPAddress, &out.IPAddress
		*out = new(string)
		**out = **in
	}
	if in.IPVersion != nil {
		in, out := &in.IPVersion, &out.IPVersion
		*out = new(float64)
		**out = **in
	}
	if in.Type != nil {
		in, out := &in.Type, &out.Type
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipsObservation.
func (in *PublicipsObservation) DeepCopy() *PublicipsObservation {
	if in == nil {
		return nil
	}
	out := new(PublicipsObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PublicipsParameters) DeepCopyInto(out *PublicipsParameters) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PublicipsParameters.
func (in *PublicipsParameters) DeepCopy() *PublicipsParameters {
	if in == nil {
		return nil
	}
	out := new(PublicipsParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidth) DeepCopyInto(out *VpcBandwidth) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidth.
func (in *VpcBandwidth) DeepCopy() *VpcBandwidth {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidth)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcBandwidth) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociate) DeepCopyInto(out *VpcBandwidthAssociate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociate.
func (in *VpcBandwidthAssociate) DeepCopy() *VpcBandwidthAssociate {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcBandwidthAssociate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateInitParameters) DeepCopyInto(out *VpcBandwidthAssociateInitParameters) {
	*out = *in
	if in.BandwidthChargeMode != nil {
		in, out := &in.BandwidthChargeMode, &out.BandwidthChargeMode
		*out = new(string)
		**out = **in
	}
	if in.BandwidthID != nil {
		in, out := &in.BandwidthID, &out.BandwidthID
		*out = new(string)
		**out = **in
	}
	if in.BandwidthIDRef != nil {
		in, out := &in.BandwidthIDRef, &out.BandwidthIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BandwidthIDSelector != nil {
		in, out := &in.BandwidthIDSelector, &out.BandwidthIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.EIPID != nil {
		in, out := &in.EIPID, &out.EIPID
		*out = new(string)
		**out = **in
	}
	if in.EIPIDRef != nil {
		in, out := &in.EIPIDRef, &out.EIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EIPIDSelector != nil {
		in, out := &in.EIPIDSelector, &out.EIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateInitParameters.
func (in *VpcBandwidthAssociateInitParameters) DeepCopy() *VpcBandwidthAssociateInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateList) DeepCopyInto(out *VpcBandwidthAssociateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcBandwidthAssociate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateList.
func (in *VpcBandwidthAssociateList) DeepCopy() *VpcBandwidthAssociateList {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcBandwidthAssociateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateObservation) DeepCopyInto(out *VpcBandwidthAssociateObservation) {
	*out = *in
	if in.BandwidthChargeMode != nil {
		in, out := &in.BandwidthChargeMode, &out.BandwidthChargeMode
		*out = new(string)
		**out = **in
	}
	if in.BandwidthID != nil {
		in, out := &in.BandwidthID, &out.BandwidthID
		*out = new(string)
		**out = **in
	}
	if in.BandwidthName != nil {
		in, out := &in.BandwidthName, &out.BandwidthName
		*out = new(string)
		**out = **in
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.EIPID != nil {
		in, out := &in.EIPID, &out.EIPID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateObservation.
func (in *VpcBandwidthAssociateObservation) DeepCopy() *VpcBandwidthAssociateObservation {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateParameters) DeepCopyInto(out *VpcBandwidthAssociateParameters) {
	*out = *in
	if in.BandwidthChargeMode != nil {
		in, out := &in.BandwidthChargeMode, &out.BandwidthChargeMode
		*out = new(string)
		**out = **in
	}
	if in.BandwidthID != nil {
		in, out := &in.BandwidthID, &out.BandwidthID
		*out = new(string)
		**out = **in
	}
	if in.BandwidthIDRef != nil {
		in, out := &in.BandwidthIDRef, &out.BandwidthIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.BandwidthIDSelector != nil {
		in, out := &in.BandwidthIDSelector, &out.BandwidthIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.BandwidthSize != nil {
		in, out := &in.BandwidthSize, &out.BandwidthSize
		*out = new(float64)
		**out = **in
	}
	if in.EIPID != nil {
		in, out := &in.EIPID, &out.EIPID
		*out = new(string)
		**out = **in
	}
	if in.EIPIDRef != nil {
		in, out := &in.EIPIDRef, &out.EIPIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.EIPIDSelector != nil {
		in, out := &in.EIPIDSelector, &out.EIPIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateParameters.
func (in *VpcBandwidthAssociateParameters) DeepCopy() *VpcBandwidthAssociateParameters {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateSpec) DeepCopyInto(out *VpcBandwidthAssociateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateSpec.
func (in *VpcBandwidthAssociateSpec) DeepCopy() *VpcBandwidthAssociateSpec {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthAssociateStatus) DeepCopyInto(out *VpcBandwidthAssociateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthAssociateStatus.
func (in *VpcBandwidthAssociateStatus) DeepCopy() *VpcBandwidthAssociateStatus {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthAssociateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthInitParameters) DeepCopyInto(out *VpcBandwidthInitParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.BandwidthType != nil {
		in, out := &in.BandwidthType, &out.BandwidthType
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicBorderGroup != nil {
		in, out := &in.PublicBorderGroup, &out.PublicBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthInitParameters.
func (in *VpcBandwidthInitParameters) DeepCopy() *VpcBandwidthInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthList) DeepCopyInto(out *VpcBandwidthList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcBandwidth, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthList.
func (in *VpcBandwidthList) DeepCopy() *VpcBandwidthList {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcBandwidthList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthObservation) DeepCopyInto(out *VpcBandwidthObservation) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.BandwidthType != nil {
		in, out := &in.BandwidthType, &out.BandwidthType
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicBorderGroup != nil {
		in, out := &in.PublicBorderGroup, &out.PublicBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.Publicips != nil {
		in, out := &in.Publicips, &out.Publicips
		*out = make([]PublicipsObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.ShareType != nil {
		in, out := &in.ShareType, &out.ShareType
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthObservation.
func (in *VpcBandwidthObservation) DeepCopy() *VpcBandwidthObservation {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthParameters) DeepCopyInto(out *VpcBandwidthParameters) {
	*out = *in
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.BandwidthType != nil {
		in, out := &in.BandwidthType, &out.BandwidthType
		*out = new(string)
		**out = **in
	}
	if in.ChargeMode != nil {
		in, out := &in.ChargeMode, &out.ChargeMode
		*out = new(string)
		**out = **in
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PublicBorderGroup != nil {
		in, out := &in.PublicBorderGroup, &out.PublicBorderGroup
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Size != nil {
		in, out := &in.Size, &out.Size
		*out = new(float64)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthParameters.
func (in *VpcBandwidthParameters) DeepCopy() *VpcBandwidthParameters {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthSpec) DeepCopyInto(out *VpcBandwidthSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthSpec.
func (in *VpcBandwidthSpec) DeepCopy() *VpcBandwidthSpec {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcBandwidthStatus) DeepCopyInto(out *VpcBandwidthStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcBandwidthStatus.
func (in *VpcBandwidthStatus) DeepCopy() *VpcBandwidthStatus {
	if in == nil {
		return nil
	}
	out := new(VpcBandwidthStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEip) DeepCopyInto(out *VpcEip) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEip.
func (in *VpcEip) DeepCopy() *VpcEip {
	if in == nil {
		return nil
	}
	out := new(VpcEip)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEip) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociate) DeepCopyInto(out *VpcEipAssociate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociate.
func (in *VpcEipAssociate) DeepCopy() *VpcEipAssociate {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEipAssociate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateInitParameters) DeepCopyInto(out *VpcEipAssociateInitParameters) {
	*out = *in
	if in.FixedIP != nil {
		in, out := &in.FixedIP, &out.FixedIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateInitParameters.
func (in *VpcEipAssociateInitParameters) DeepCopy() *VpcEipAssociateInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateList) DeepCopyInto(out *VpcEipAssociateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcEipAssociate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateList.
func (in *VpcEipAssociateList) DeepCopy() *VpcEipAssociateList {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEipAssociateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateObservation) DeepCopyInto(out *VpcEipAssociateObservation) {
	*out = *in
	if in.FixedIP != nil {
		in, out := &in.FixedIP, &out.FixedIP
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.MacAddress != nil {
		in, out := &in.MacAddress, &out.MacAddress
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.PublicIPv6 != nil {
		in, out := &in.PublicIPv6, &out.PublicIPv6
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateObservation.
func (in *VpcEipAssociateObservation) DeepCopy() *VpcEipAssociateObservation {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateParameters) DeepCopyInto(out *VpcEipAssociateParameters) {
	*out = *in
	if in.FixedIP != nil {
		in, out := &in.FixedIP, &out.FixedIP
		*out = new(string)
		**out = **in
	}
	if in.NetworkID != nil {
		in, out := &in.NetworkID, &out.NetworkID
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.PublicIP != nil {
		in, out := &in.PublicIP, &out.PublicIP
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateParameters.
func (in *VpcEipAssociateParameters) DeepCopy() *VpcEipAssociateParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateSpec) DeepCopyInto(out *VpcEipAssociateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateSpec.
func (in *VpcEipAssociateSpec) DeepCopy() *VpcEipAssociateSpec {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipAssociateStatus) DeepCopyInto(out *VpcEipAssociateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipAssociateStatus.
func (in *VpcEipAssociateStatus) DeepCopy() *VpcEipAssociateStatus {
	if in == nil {
		return nil
	}
	out := new(VpcEipAssociateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipInitParameters) DeepCopyInto(out *VpcEipInitParameters) {
	*out = *in
	if in.AutoPay != nil {
		in, out := &in.AutoPay, &out.AutoPay
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = make([]BandwidthInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.Publicip != nil {
		in, out := &in.Publicip, &out.Publicip
		*out = make([]PublicipInitParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipInitParameters.
func (in *VpcEipInitParameters) DeepCopy() *VpcEipInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipList) DeepCopyInto(out *VpcEipList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcEip, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipList.
func (in *VpcEipList) DeepCopy() *VpcEipList {
	if in == nil {
		return nil
	}
	out := new(VpcEipList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEipList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipObservation) DeepCopyInto(out *VpcEipObservation) {
	*out = *in
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(string)
		**out = **in
	}
	if in.AssociateID != nil {
		in, out := &in.AssociateID, &out.AssociateID
		*out = new(string)
		**out = **in
	}
	if in.AssociateType != nil {
		in, out := &in.AssociateType, &out.AssociateType
		*out = new(string)
		**out = **in
	}
	if in.AutoPay != nil {
		in, out := &in.AutoPay, &out.AutoPay
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = make([]BandwidthObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.IPv6Address != nil {
		in, out := &in.IPv6Address, &out.IPv6Address
		*out = new(string)
		**out = **in
	}
	if in.InstanceID != nil {
		in, out := &in.InstanceID, &out.InstanceID
		*out = new(string)
		**out = **in
	}
	if in.InstanceType != nil {
		in, out := &in.InstanceType, &out.InstanceType
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.PortID != nil {
		in, out := &in.PortID, &out.PortID
		*out = new(string)
		**out = **in
	}
	if in.PrivateIP != nil {
		in, out := &in.PrivateIP, &out.PrivateIP
		*out = new(string)
		**out = **in
	}
	if in.Publicip != nil {
		in, out := &in.Publicip, &out.Publicip
		*out = make([]PublicipObservation, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipObservation.
func (in *VpcEipObservation) DeepCopy() *VpcEipObservation {
	if in == nil {
		return nil
	}
	out := new(VpcEipObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipParameters) DeepCopyInto(out *VpcEipParameters) {
	*out = *in
	if in.AutoPay != nil {
		in, out := &in.AutoPay, &out.AutoPay
		*out = new(string)
		**out = **in
	}
	if in.AutoRenew != nil {
		in, out := &in.AutoRenew, &out.AutoRenew
		*out = new(string)
		**out = **in
	}
	if in.Bandwidth != nil {
		in, out := &in.Bandwidth, &out.Bandwidth
		*out = make([]BandwidthParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.ChargingMode != nil {
		in, out := &in.ChargingMode, &out.ChargingMode
		*out = new(string)
		**out = **in
	}
	if in.EnterpriseProjectID != nil {
		in, out := &in.EnterpriseProjectID, &out.EnterpriseProjectID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Period != nil {
		in, out := &in.Period, &out.Period
		*out = new(float64)
		**out = **in
	}
	if in.PeriodUnit != nil {
		in, out := &in.PeriodUnit, &out.PeriodUnit
		*out = new(string)
		**out = **in
	}
	if in.Publicip != nil {
		in, out := &in.Publicip, &out.Publicip
		*out = make([]PublicipParameters, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.Tags != nil {
		in, out := &in.Tags, &out.Tags
		*out = make(map[string]*string, len(*in))
		for key, val := range *in {
			var outVal *string
			if val == nil {
				(*out)[key] = nil
			} else {
				inVal := (*in)[key]
				in, out := &inVal, &outVal
				*out = new(string)
				**out = **in
			}
			(*out)[key] = outVal
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipParameters.
func (in *VpcEipParameters) DeepCopy() *VpcEipParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipSpec) DeepCopyInto(out *VpcEipSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipSpec.
func (in *VpcEipSpec) DeepCopy() *VpcEipSpec {
	if in == nil {
		return nil
	}
	out := new(VpcEipSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipStatus) DeepCopyInto(out *VpcEipStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipStatus.
func (in *VpcEipStatus) DeepCopy() *VpcEipStatus {
	if in == nil {
		return nil
	}
	out := new(VpcEipStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3Associate) DeepCopyInto(out *VpcEipV3Associate) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3Associate.
func (in *VpcEipV3Associate) DeepCopy() *VpcEipV3Associate {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3Associate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEipV3Associate) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateInitParameters) DeepCopyInto(out *VpcEipV3AssociateInitParameters) {
	*out = *in
	if in.AssociateInstanceID != nil {
		in, out := &in.AssociateInstanceID, &out.AssociateInstanceID
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceType != nil {
		in, out := &in.AssociateInstanceType, &out.AssociateInstanceType
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.PublicipIDRef != nil {
		in, out := &in.PublicipIDRef, &out.PublicipIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicipIDSelector != nil {
		in, out := &in.PublicipIDSelector, &out.PublicipIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateInitParameters.
func (in *VpcEipV3AssociateInitParameters) DeepCopy() *VpcEipV3AssociateInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateList) DeepCopyInto(out *VpcEipV3AssociateList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcEipV3Associate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateList.
func (in *VpcEipV3AssociateList) DeepCopy() *VpcEipV3AssociateList {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcEipV3AssociateList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateObservation) DeepCopyInto(out *VpcEipV3AssociateObservation) {
	*out = *in
	if in.AssociateInstanceID != nil {
		in, out := &in.AssociateInstanceID, &out.AssociateInstanceID
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceType != nil {
		in, out := &in.AssociateInstanceType, &out.AssociateInstanceType
		*out = new(string)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateObservation.
func (in *VpcEipV3AssociateObservation) DeepCopy() *VpcEipV3AssociateObservation {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateParameters) DeepCopyInto(out *VpcEipV3AssociateParameters) {
	*out = *in
	if in.AssociateInstanceID != nil {
		in, out := &in.AssociateInstanceID, &out.AssociateInstanceID
		*out = new(string)
		**out = **in
	}
	if in.AssociateInstanceType != nil {
		in, out := &in.AssociateInstanceType, &out.AssociateInstanceType
		*out = new(string)
		**out = **in
	}
	if in.PublicipID != nil {
		in, out := &in.PublicipID, &out.PublicipID
		*out = new(string)
		**out = **in
	}
	if in.PublicipIDRef != nil {
		in, out := &in.PublicipIDRef, &out.PublicipIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.PublicipIDSelector != nil {
		in, out := &in.PublicipIDSelector, &out.PublicipIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateParameters.
func (in *VpcEipV3AssociateParameters) DeepCopy() *VpcEipV3AssociateParameters {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateSpec) DeepCopyInto(out *VpcEipV3AssociateSpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateSpec.
func (in *VpcEipV3AssociateSpec) DeepCopy() *VpcEipV3AssociateSpec {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcEipV3AssociateStatus) DeepCopyInto(out *VpcEipV3AssociateStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcEipV3AssociateStatus.
func (in *VpcEipV3AssociateStatus) DeepCopy() *VpcEipV3AssociateStatus {
	if in == nil {
		return nil
	}
	out := new(VpcEipV3AssociateStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGateway) DeepCopyInto(out *VpcInternetGateway) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGateway.
func (in *VpcInternetGateway) DeepCopy() *VpcInternetGateway {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGateway)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcInternetGateway) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewayInitParameters) DeepCopyInto(out *VpcInternetGatewayInitParameters) {
	*out = *in
	if in.AddRoute != nil {
		in, out := &in.AddRoute, &out.AddRoute
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewayInitParameters.
func (in *VpcInternetGatewayInitParameters) DeepCopy() *VpcInternetGatewayInitParameters {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewayInitParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewayList) DeepCopyInto(out *VpcInternetGatewayList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]VpcInternetGateway, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewayList.
func (in *VpcInternetGatewayList) DeepCopy() *VpcInternetGatewayList {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewayList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *VpcInternetGatewayList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewayObservation) DeepCopyInto(out *VpcInternetGatewayObservation) {
	*out = *in
	if in.AddRoute != nil {
		in, out := &in.AddRoute, &out.AddRoute
		*out = new(bool)
		**out = **in
	}
	if in.CreatedAt != nil {
		in, out := &in.CreatedAt, &out.CreatedAt
		*out = new(string)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.ID != nil {
		in, out := &in.ID, &out.ID
		*out = new(string)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.UpdatedAt != nil {
		in, out := &in.UpdatedAt, &out.UpdatedAt
		*out = new(string)
		**out = **in
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewayObservation.
func (in *VpcInternetGatewayObservation) DeepCopy() *VpcInternetGatewayObservation {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewayObservation)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewayParameters) DeepCopyInto(out *VpcInternetGatewayParameters) {
	*out = *in
	if in.AddRoute != nil {
		in, out := &in.AddRoute, &out.AddRoute
		*out = new(bool)
		**out = **in
	}
	if in.EnableIPv6 != nil {
		in, out := &in.EnableIPv6, &out.EnableIPv6
		*out = new(bool)
		**out = **in
	}
	if in.Name != nil {
		in, out := &in.Name, &out.Name
		*out = new(string)
		**out = **in
	}
	if in.Region != nil {
		in, out := &in.Region, &out.Region
		*out = new(string)
		**out = **in
	}
	if in.SubnetID != nil {
		in, out := &in.SubnetID, &out.SubnetID
		*out = new(string)
		**out = **in
	}
	if in.SubnetIDRef != nil {
		in, out := &in.SubnetIDRef, &out.SubnetIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.SubnetIDSelector != nil {
		in, out := &in.SubnetIDSelector, &out.SubnetIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCID != nil {
		in, out := &in.VPCID, &out.VPCID
		*out = new(string)
		**out = **in
	}
	if in.VPCIDRef != nil {
		in, out := &in.VPCIDRef, &out.VPCIDRef
		*out = new(v1.Reference)
		(*in).DeepCopyInto(*out)
	}
	if in.VPCIDSelector != nil {
		in, out := &in.VPCIDSelector, &out.VPCIDSelector
		*out = new(v1.Selector)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewayParameters.
func (in *VpcInternetGatewayParameters) DeepCopy() *VpcInternetGatewayParameters {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewayParameters)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewaySpec) DeepCopyInto(out *VpcInternetGatewaySpec) {
	*out = *in
	in.ResourceSpec.DeepCopyInto(&out.ResourceSpec)
	in.ForProvider.DeepCopyInto(&out.ForProvider)
	in.InitProvider.DeepCopyInto(&out.InitProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewaySpec.
func (in *VpcInternetGatewaySpec) DeepCopy() *VpcInternetGatewaySpec {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewaySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *VpcInternetGatewayStatus) DeepCopyInto(out *VpcInternetGatewayStatus) {
	*out = *in
	in.ResourceStatus.DeepCopyInto(&out.ResourceStatus)
	in.AtProvider.DeepCopyInto(&out.AtProvider)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new VpcInternetGatewayStatus.
func (in *VpcInternetGatewayStatus) DeepCopy() *VpcInternetGatewayStatus {
	if in == nil {
		return nil
	}
	out := new(VpcInternetGatewayStatus)
	in.DeepCopyInto(out)
	return out
}
